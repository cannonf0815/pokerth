// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pokerth.proto

package de.pokerth.protocol;

public final class ProtoBuf {
  private ProtoBuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code NetGameMode}
   */
  public enum NetGameMode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>netGameCreated = 1;</code>
     */
    netGameCreated(1),
    /**
     * <code>netGameStarted = 2;</code>
     */
    netGameStarted(2),
    /**
     * <code>netGameClosed = 3;</code>
     */
    netGameClosed(3),
    ;

    /**
     * <code>netGameCreated = 1;</code>
     */
    public static final int netGameCreated_VALUE = 1;
    /**
     * <code>netGameStarted = 2;</code>
     */
    public static final int netGameStarted_VALUE = 2;
    /**
     * <code>netGameClosed = 3;</code>
     */
    public static final int netGameClosed_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NetGameMode valueOf(int value) {
      return forNumber(value);
    }

    public static NetGameMode forNumber(int value) {
      switch (value) {
        case 1: return netGameCreated;
        case 2: return netGameStarted;
        case 3: return netGameClosed;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NetGameMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NetGameMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NetGameMode>() {
            public NetGameMode findValueByNumber(int number) {
              return NetGameMode.forNumber(number);
            }
          };

    private final int value;

    private NetGameMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NetGameMode)
  }

  /**
   * Protobuf enum {@code NetGameState}
   */
  public enum NetGameState
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>netStatePreflop = 0;</code>
     */
    netStatePreflop(0),
    /**
     * <code>netStateFlop = 1;</code>
     */
    netStateFlop(1),
    /**
     * <code>netStateTurn = 2;</code>
     */
    netStateTurn(2),
    /**
     * <code>netStateRiver = 3;</code>
     */
    netStateRiver(3),
    /**
     * <code>netStatePreflopSmallBlind = 4;</code>
     */
    netStatePreflopSmallBlind(4),
    /**
     * <code>netStatePreflopBigBlind = 5;</code>
     */
    netStatePreflopBigBlind(5),
    ;

    /**
     * <code>netStatePreflop = 0;</code>
     */
    public static final int netStatePreflop_VALUE = 0;
    /**
     * <code>netStateFlop = 1;</code>
     */
    public static final int netStateFlop_VALUE = 1;
    /**
     * <code>netStateTurn = 2;</code>
     */
    public static final int netStateTurn_VALUE = 2;
    /**
     * <code>netStateRiver = 3;</code>
     */
    public static final int netStateRiver_VALUE = 3;
    /**
     * <code>netStatePreflopSmallBlind = 4;</code>
     */
    public static final int netStatePreflopSmallBlind_VALUE = 4;
    /**
     * <code>netStatePreflopBigBlind = 5;</code>
     */
    public static final int netStatePreflopBigBlind_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NetGameState valueOf(int value) {
      return forNumber(value);
    }

    public static NetGameState forNumber(int value) {
      switch (value) {
        case 0: return netStatePreflop;
        case 1: return netStateFlop;
        case 2: return netStateTurn;
        case 3: return netStateRiver;
        case 4: return netStatePreflopSmallBlind;
        case 5: return netStatePreflopBigBlind;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NetGameState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NetGameState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NetGameState>() {
            public NetGameState findValueByNumber(int number) {
              return NetGameState.forNumber(number);
            }
          };

    private final int value;

    private NetGameState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NetGameState)
  }

  /**
   * Protobuf enum {@code NetPlayerAction}
   */
  public enum NetPlayerAction
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>netActionNone = 0;</code>
     */
    netActionNone(0),
    /**
     * <code>netActionFold = 1;</code>
     */
    netActionFold(1),
    /**
     * <code>netActionCheck = 2;</code>
     */
    netActionCheck(2),
    /**
     * <code>netActionCall = 3;</code>
     */
    netActionCall(3),
    /**
     * <code>netActionBet = 4;</code>
     */
    netActionBet(4),
    /**
     * <code>netActionRaise = 5;</code>
     */
    netActionRaise(5),
    /**
     * <code>netActionAllIn = 6;</code>
     */
    netActionAllIn(6),
    ;

    /**
     * <code>netActionNone = 0;</code>
     */
    public static final int netActionNone_VALUE = 0;
    /**
     * <code>netActionFold = 1;</code>
     */
    public static final int netActionFold_VALUE = 1;
    /**
     * <code>netActionCheck = 2;</code>
     */
    public static final int netActionCheck_VALUE = 2;
    /**
     * <code>netActionCall = 3;</code>
     */
    public static final int netActionCall_VALUE = 3;
    /**
     * <code>netActionBet = 4;</code>
     */
    public static final int netActionBet_VALUE = 4;
    /**
     * <code>netActionRaise = 5;</code>
     */
    public static final int netActionRaise_VALUE = 5;
    /**
     * <code>netActionAllIn = 6;</code>
     */
    public static final int netActionAllIn_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NetPlayerAction valueOf(int value) {
      return forNumber(value);
    }

    public static NetPlayerAction forNumber(int value) {
      switch (value) {
        case 0: return netActionNone;
        case 1: return netActionFold;
        case 2: return netActionCheck;
        case 3: return netActionCall;
        case 4: return netActionBet;
        case 5: return netActionRaise;
        case 6: return netActionAllIn;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NetPlayerAction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NetPlayerAction> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NetPlayerAction>() {
            public NetPlayerAction findValueByNumber(int number) {
              return NetPlayerAction.forNumber(number);
            }
          };

    private final int value;

    private NetPlayerAction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NetPlayerAction)
  }

  /**
   * Protobuf enum {@code NetPlayerState}
   */
  public enum NetPlayerState
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>netPlayerStateNormal = 0;</code>
     */
    netPlayerStateNormal(0),
    /**
     * <code>netPlayerStateSessionInactive = 1;</code>
     */
    netPlayerStateSessionInactive(1),
    /**
     * <code>netPlayerStateNoMoney = 2;</code>
     */
    netPlayerStateNoMoney(2),
    ;

    /**
     * <code>netPlayerStateNormal = 0;</code>
     */
    public static final int netPlayerStateNormal_VALUE = 0;
    /**
     * <code>netPlayerStateSessionInactive = 1;</code>
     */
    public static final int netPlayerStateSessionInactive_VALUE = 1;
    /**
     * <code>netPlayerStateNoMoney = 2;</code>
     */
    public static final int netPlayerStateNoMoney_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NetPlayerState valueOf(int value) {
      return forNumber(value);
    }

    public static NetPlayerState forNumber(int value) {
      switch (value) {
        case 0: return netPlayerStateNormal;
        case 1: return netPlayerStateSessionInactive;
        case 2: return netPlayerStateNoMoney;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NetPlayerState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NetPlayerState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NetPlayerState>() {
            public NetPlayerState findValueByNumber(int number) {
              return NetPlayerState.forNumber(number);
            }
          };

    private final int value;

    private NetPlayerState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NetPlayerState)
  }

  /**
   * Protobuf enum {@code NetPlayerInfoRights}
   */
  public enum NetPlayerInfoRights
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>netPlayerRightsGuest = 1;</code>
     */
    netPlayerRightsGuest(1),
    /**
     * <code>netPlayerRightsNormal = 2;</code>
     */
    netPlayerRightsNormal(2),
    /**
     * <code>netPlayerRightsAdmin = 3;</code>
     */
    netPlayerRightsAdmin(3),
    ;

    /**
     * <code>netPlayerRightsGuest = 1;</code>
     */
    public static final int netPlayerRightsGuest_VALUE = 1;
    /**
     * <code>netPlayerRightsNormal = 2;</code>
     */
    public static final int netPlayerRightsNormal_VALUE = 2;
    /**
     * <code>netPlayerRightsAdmin = 3;</code>
     */
    public static final int netPlayerRightsAdmin_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NetPlayerInfoRights valueOf(int value) {
      return forNumber(value);
    }

    public static NetPlayerInfoRights forNumber(int value) {
      switch (value) {
        case 1: return netPlayerRightsGuest;
        case 2: return netPlayerRightsNormal;
        case 3: return netPlayerRightsAdmin;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NetPlayerInfoRights>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NetPlayerInfoRights> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NetPlayerInfoRights>() {
            public NetPlayerInfoRights findValueByNumber(int number) {
              return NetPlayerInfoRights.forNumber(number);
            }
          };

    private final int value;

    private NetPlayerInfoRights(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NetPlayerInfoRights)
  }

  /**
   * Protobuf enum {@code NetAvatarType}
   */
  public enum NetAvatarType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>netAvatarImagePng = 1;</code>
     */
    netAvatarImagePng(1),
    /**
     * <code>netAvatarImageJpg = 2;</code>
     */
    netAvatarImageJpg(2),
    /**
     * <code>netAvatarImageGif = 3;</code>
     */
    netAvatarImageGif(3),
    ;

    /**
     * <code>netAvatarImagePng = 1;</code>
     */
    public static final int netAvatarImagePng_VALUE = 1;
    /**
     * <code>netAvatarImageJpg = 2;</code>
     */
    public static final int netAvatarImageJpg_VALUE = 2;
    /**
     * <code>netAvatarImageGif = 3;</code>
     */
    public static final int netAvatarImageGif_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NetAvatarType valueOf(int value) {
      return forNumber(value);
    }

    public static NetAvatarType forNumber(int value) {
      switch (value) {
        case 1: return netAvatarImagePng;
        case 2: return netAvatarImageJpg;
        case 3: return netAvatarImageGif;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NetAvatarType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NetAvatarType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NetAvatarType>() {
            public NetAvatarType findValueByNumber(int number) {
              return NetAvatarType.forNumber(number);
            }
          };

    private final int value;

    private NetAvatarType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NetAvatarType)
  }

  public interface NetGameInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NetGameInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string gameName = 1;</code>
     */
    boolean hasGameName();
    /**
     * <code>required string gameName = 1;</code>
     */
    java.lang.String getGameName();
    /**
     * <code>required string gameName = 1;</code>
     */
    com.google.protobuf.ByteString
        getGameNameBytes();

    /**
     * <code>required .NetGameInfo.NetGameType netGameType = 2;</code>
     */
    boolean hasNetGameType();
    /**
     * <code>required .NetGameInfo.NetGameType netGameType = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameInfo.NetGameType getNetGameType();

    /**
     * <code>required uint32 maxNumPlayers = 3;</code>
     */
    boolean hasMaxNumPlayers();
    /**
     * <code>required uint32 maxNumPlayers = 3;</code>
     */
    int getMaxNumPlayers();

    /**
     * <code>required .NetGameInfo.RaiseIntervalMode raiseIntervalMode = 4;</code>
     */
    boolean hasRaiseIntervalMode();
    /**
     * <code>required .NetGameInfo.RaiseIntervalMode raiseIntervalMode = 4;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameInfo.RaiseIntervalMode getRaiseIntervalMode();

    /**
     * <code>optional uint32 raiseEveryHands = 5;</code>
     */
    boolean hasRaiseEveryHands();
    /**
     * <code>optional uint32 raiseEveryHands = 5;</code>
     */
    int getRaiseEveryHands();

    /**
     * <code>optional uint32 raiseEveryMinutes = 6;</code>
     */
    boolean hasRaiseEveryMinutes();
    /**
     * <code>optional uint32 raiseEveryMinutes = 6;</code>
     */
    int getRaiseEveryMinutes();

    /**
     * <code>required .NetGameInfo.EndRaiseMode endRaiseMode = 7;</code>
     */
    boolean hasEndRaiseMode();
    /**
     * <code>required .NetGameInfo.EndRaiseMode endRaiseMode = 7;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameInfo.EndRaiseMode getEndRaiseMode();

    /**
     * <code>optional uint32 endRaiseSmallBlindValue = 8;</code>
     */
    boolean hasEndRaiseSmallBlindValue();
    /**
     * <code>optional uint32 endRaiseSmallBlindValue = 8;</code>
     */
    int getEndRaiseSmallBlindValue();

    /**
     * <code>required uint32 proposedGuiSpeed = 9;</code>
     */
    boolean hasProposedGuiSpeed();
    /**
     * <code>required uint32 proposedGuiSpeed = 9;</code>
     */
    int getProposedGuiSpeed();

    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 delayBetweenHands = 10;</code>
     */
    boolean hasDelayBetweenHands();
    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 delayBetweenHands = 10;</code>
     */
    int getDelayBetweenHands();

    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 playerActionTimeout = 11;</code>
     */
    boolean hasPlayerActionTimeout();
    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 playerActionTimeout = 11;</code>
     */
    int getPlayerActionTimeout();

    /**
     * <code>required uint32 firstSmallBlind = 12;</code>
     */
    boolean hasFirstSmallBlind();
    /**
     * <code>required uint32 firstSmallBlind = 12;</code>
     */
    int getFirstSmallBlind();

    /**
     * <code>required uint32 startMoney = 13;</code>
     */
    boolean hasStartMoney();
    /**
     * <code>required uint32 startMoney = 13;</code>
     */
    int getStartMoney();

    /**
     * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getManualBlindsList();
    /**
     * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
     */
    int getManualBlindsCount();
    /**
     * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
     */
    int getManualBlinds(int index);

    /**
     * <code>optional bool allowSpectators = 15 [default = true];</code>
     */
    boolean hasAllowSpectators();
    /**
     * <code>optional bool allowSpectators = 15 [default = true];</code>
     */
    boolean getAllowSpectators();
  }
  /**
   * Protobuf type {@code NetGameInfo}
   */
  public  static final class NetGameInfo extends
      com.google.protobuf.GeneratedMessageLite<
          NetGameInfo, NetGameInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:NetGameInfo)
      NetGameInfoOrBuilder {
    private NetGameInfo() {
      gameName_ = "";
      netGameType_ = 1;
      raiseIntervalMode_ = 1;
      endRaiseMode_ = 1;
      manualBlinds_ = emptyIntList();
      allowSpectators_ = true;
    }
    /**
     * Protobuf enum {@code NetGameInfo.NetGameType}
     */
    public enum NetGameType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>normalGame = 1;</code>
       */
      normalGame(1),
      /**
       * <code>registeredOnlyGame = 2;</code>
       */
      registeredOnlyGame(2),
      /**
       * <code>inviteOnlyGame = 3;</code>
       */
      inviteOnlyGame(3),
      /**
       * <code>rankingGame = 4;</code>
       */
      rankingGame(4),
      ;

      /**
       * <code>normalGame = 1;</code>
       */
      public static final int normalGame_VALUE = 1;
      /**
       * <code>registeredOnlyGame = 2;</code>
       */
      public static final int registeredOnlyGame_VALUE = 2;
      /**
       * <code>inviteOnlyGame = 3;</code>
       */
      public static final int inviteOnlyGame_VALUE = 3;
      /**
       * <code>rankingGame = 4;</code>
       */
      public static final int rankingGame_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NetGameType valueOf(int value) {
        return forNumber(value);
      }

      public static NetGameType forNumber(int value) {
        switch (value) {
          case 1: return normalGame;
          case 2: return registeredOnlyGame;
          case 3: return inviteOnlyGame;
          case 4: return rankingGame;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NetGameType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NetGameType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NetGameType>() {
              public NetGameType findValueByNumber(int number) {
                return NetGameType.forNumber(number);
              }
            };

      private final int value;

      private NetGameType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:NetGameInfo.NetGameType)
    }

    /**
     * Protobuf enum {@code NetGameInfo.RaiseIntervalMode}
     */
    public enum RaiseIntervalMode
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>raiseOnHandNum = 1;</code>
       */
      raiseOnHandNum(1),
      /**
       * <code>raiseOnMinutes = 2;</code>
       */
      raiseOnMinutes(2),
      ;

      /**
       * <code>raiseOnHandNum = 1;</code>
       */
      public static final int raiseOnHandNum_VALUE = 1;
      /**
       * <code>raiseOnMinutes = 2;</code>
       */
      public static final int raiseOnMinutes_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RaiseIntervalMode valueOf(int value) {
        return forNumber(value);
      }

      public static RaiseIntervalMode forNumber(int value) {
        switch (value) {
          case 1: return raiseOnHandNum;
          case 2: return raiseOnMinutes;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RaiseIntervalMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RaiseIntervalMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RaiseIntervalMode>() {
              public RaiseIntervalMode findValueByNumber(int number) {
                return RaiseIntervalMode.forNumber(number);
              }
            };

      private final int value;

      private RaiseIntervalMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:NetGameInfo.RaiseIntervalMode)
    }

    /**
     * Protobuf enum {@code NetGameInfo.EndRaiseMode}
     */
    public enum EndRaiseMode
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>doubleBlinds = 1;</code>
       */
      doubleBlinds(1),
      /**
       * <code>raiseByEndValue = 2;</code>
       */
      raiseByEndValue(2),
      /**
       * <code>keepLastBlind = 3;</code>
       */
      keepLastBlind(3),
      ;

      /**
       * <code>doubleBlinds = 1;</code>
       */
      public static final int doubleBlinds_VALUE = 1;
      /**
       * <code>raiseByEndValue = 2;</code>
       */
      public static final int raiseByEndValue_VALUE = 2;
      /**
       * <code>keepLastBlind = 3;</code>
       */
      public static final int keepLastBlind_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EndRaiseMode valueOf(int value) {
        return forNumber(value);
      }

      public static EndRaiseMode forNumber(int value) {
        switch (value) {
          case 1: return doubleBlinds;
          case 2: return raiseByEndValue;
          case 3: return keepLastBlind;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EndRaiseMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EndRaiseMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EndRaiseMode>() {
              public EndRaiseMode findValueByNumber(int number) {
                return EndRaiseMode.forNumber(number);
              }
            };

      private final int value;

      private EndRaiseMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:NetGameInfo.EndRaiseMode)
    }

    private int bitField0_;
    public static final int GAMENAME_FIELD_NUMBER = 1;
    private java.lang.String gameName_;
    /**
     * <code>required string gameName = 1;</code>
     */
    public boolean hasGameName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string gameName = 1;</code>
     */
    public java.lang.String getGameName() {
      return gameName_;
    }
    /**
     * <code>required string gameName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGameNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gameName_);
    }
    /**
     * <code>required string gameName = 1;</code>
     */
    private void setGameName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      gameName_ = value;
    }
    /**
     * <code>required string gameName = 1;</code>
     */
    private void clearGameName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameName_ = getDefaultInstance().getGameName();
    }
    /**
     * <code>required string gameName = 1;</code>
     */
    private void setGameNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      gameName_ = value.toStringUtf8();
    }

    public static final int NETGAMETYPE_FIELD_NUMBER = 2;
    private int netGameType_;
    /**
     * <code>required .NetGameInfo.NetGameType netGameType = 2;</code>
     */
    public boolean hasNetGameType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .NetGameInfo.NetGameType netGameType = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameInfo.NetGameType getNetGameType() {
      de.pokerth.protocol.ProtoBuf.NetGameInfo.NetGameType result = de.pokerth.protocol.ProtoBuf.NetGameInfo.NetGameType.forNumber(netGameType_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetGameInfo.NetGameType.normalGame : result;
    }
    /**
     * <code>required .NetGameInfo.NetGameType netGameType = 2;</code>
     */
    private void setNetGameType(de.pokerth.protocol.ProtoBuf.NetGameInfo.NetGameType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      netGameType_ = value.getNumber();
    }
    /**
     * <code>required .NetGameInfo.NetGameType netGameType = 2;</code>
     */
    private void clearNetGameType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      netGameType_ = 1;
    }

    public static final int MAXNUMPLAYERS_FIELD_NUMBER = 3;
    private int maxNumPlayers_;
    /**
     * <code>required uint32 maxNumPlayers = 3;</code>
     */
    public boolean hasMaxNumPlayers() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 maxNumPlayers = 3;</code>
     */
    public int getMaxNumPlayers() {
      return maxNumPlayers_;
    }
    /**
     * <code>required uint32 maxNumPlayers = 3;</code>
     */
    private void setMaxNumPlayers(int value) {
      bitField0_ |= 0x00000004;
      maxNumPlayers_ = value;
    }
    /**
     * <code>required uint32 maxNumPlayers = 3;</code>
     */
    private void clearMaxNumPlayers() {
      bitField0_ = (bitField0_ & ~0x00000004);
      maxNumPlayers_ = 0;
    }

    public static final int RAISEINTERVALMODE_FIELD_NUMBER = 4;
    private int raiseIntervalMode_;
    /**
     * <code>required .NetGameInfo.RaiseIntervalMode raiseIntervalMode = 4;</code>
     */
    public boolean hasRaiseIntervalMode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .NetGameInfo.RaiseIntervalMode raiseIntervalMode = 4;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameInfo.RaiseIntervalMode getRaiseIntervalMode() {
      de.pokerth.protocol.ProtoBuf.NetGameInfo.RaiseIntervalMode result = de.pokerth.protocol.ProtoBuf.NetGameInfo.RaiseIntervalMode.forNumber(raiseIntervalMode_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetGameInfo.RaiseIntervalMode.raiseOnHandNum : result;
    }
    /**
     * <code>required .NetGameInfo.RaiseIntervalMode raiseIntervalMode = 4;</code>
     */
    private void setRaiseIntervalMode(de.pokerth.protocol.ProtoBuf.NetGameInfo.RaiseIntervalMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      raiseIntervalMode_ = value.getNumber();
    }
    /**
     * <code>required .NetGameInfo.RaiseIntervalMode raiseIntervalMode = 4;</code>
     */
    private void clearRaiseIntervalMode() {
      bitField0_ = (bitField0_ & ~0x00000008);
      raiseIntervalMode_ = 1;
    }

    public static final int RAISEEVERYHANDS_FIELD_NUMBER = 5;
    private int raiseEveryHands_;
    /**
     * <code>optional uint32 raiseEveryHands = 5;</code>
     */
    public boolean hasRaiseEveryHands() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 raiseEveryHands = 5;</code>
     */
    public int getRaiseEveryHands() {
      return raiseEveryHands_;
    }
    /**
     * <code>optional uint32 raiseEveryHands = 5;</code>
     */
    private void setRaiseEveryHands(int value) {
      bitField0_ |= 0x00000010;
      raiseEveryHands_ = value;
    }
    /**
     * <code>optional uint32 raiseEveryHands = 5;</code>
     */
    private void clearRaiseEveryHands() {
      bitField0_ = (bitField0_ & ~0x00000010);
      raiseEveryHands_ = 0;
    }

    public static final int RAISEEVERYMINUTES_FIELD_NUMBER = 6;
    private int raiseEveryMinutes_;
    /**
     * <code>optional uint32 raiseEveryMinutes = 6;</code>
     */
    public boolean hasRaiseEveryMinutes() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 raiseEveryMinutes = 6;</code>
     */
    public int getRaiseEveryMinutes() {
      return raiseEveryMinutes_;
    }
    /**
     * <code>optional uint32 raiseEveryMinutes = 6;</code>
     */
    private void setRaiseEveryMinutes(int value) {
      bitField0_ |= 0x00000020;
      raiseEveryMinutes_ = value;
    }
    /**
     * <code>optional uint32 raiseEveryMinutes = 6;</code>
     */
    private void clearRaiseEveryMinutes() {
      bitField0_ = (bitField0_ & ~0x00000020);
      raiseEveryMinutes_ = 0;
    }

    public static final int ENDRAISEMODE_FIELD_NUMBER = 7;
    private int endRaiseMode_;
    /**
     * <code>required .NetGameInfo.EndRaiseMode endRaiseMode = 7;</code>
     */
    public boolean hasEndRaiseMode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .NetGameInfo.EndRaiseMode endRaiseMode = 7;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameInfo.EndRaiseMode getEndRaiseMode() {
      de.pokerth.protocol.ProtoBuf.NetGameInfo.EndRaiseMode result = de.pokerth.protocol.ProtoBuf.NetGameInfo.EndRaiseMode.forNumber(endRaiseMode_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetGameInfo.EndRaiseMode.doubleBlinds : result;
    }
    /**
     * <code>required .NetGameInfo.EndRaiseMode endRaiseMode = 7;</code>
     */
    private void setEndRaiseMode(de.pokerth.protocol.ProtoBuf.NetGameInfo.EndRaiseMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      endRaiseMode_ = value.getNumber();
    }
    /**
     * <code>required .NetGameInfo.EndRaiseMode endRaiseMode = 7;</code>
     */
    private void clearEndRaiseMode() {
      bitField0_ = (bitField0_ & ~0x00000040);
      endRaiseMode_ = 1;
    }

    public static final int ENDRAISESMALLBLINDVALUE_FIELD_NUMBER = 8;
    private int endRaiseSmallBlindValue_;
    /**
     * <code>optional uint32 endRaiseSmallBlindValue = 8;</code>
     */
    public boolean hasEndRaiseSmallBlindValue() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 endRaiseSmallBlindValue = 8;</code>
     */
    public int getEndRaiseSmallBlindValue() {
      return endRaiseSmallBlindValue_;
    }
    /**
     * <code>optional uint32 endRaiseSmallBlindValue = 8;</code>
     */
    private void setEndRaiseSmallBlindValue(int value) {
      bitField0_ |= 0x00000080;
      endRaiseSmallBlindValue_ = value;
    }
    /**
     * <code>optional uint32 endRaiseSmallBlindValue = 8;</code>
     */
    private void clearEndRaiseSmallBlindValue() {
      bitField0_ = (bitField0_ & ~0x00000080);
      endRaiseSmallBlindValue_ = 0;
    }

    public static final int PROPOSEDGUISPEED_FIELD_NUMBER = 9;
    private int proposedGuiSpeed_;
    /**
     * <code>required uint32 proposedGuiSpeed = 9;</code>
     */
    public boolean hasProposedGuiSpeed() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required uint32 proposedGuiSpeed = 9;</code>
     */
    public int getProposedGuiSpeed() {
      return proposedGuiSpeed_;
    }
    /**
     * <code>required uint32 proposedGuiSpeed = 9;</code>
     */
    private void setProposedGuiSpeed(int value) {
      bitField0_ |= 0x00000100;
      proposedGuiSpeed_ = value;
    }
    /**
     * <code>required uint32 proposedGuiSpeed = 9;</code>
     */
    private void clearProposedGuiSpeed() {
      bitField0_ = (bitField0_ & ~0x00000100);
      proposedGuiSpeed_ = 0;
    }

    public static final int DELAYBETWEENHANDS_FIELD_NUMBER = 10;
    private int delayBetweenHands_;
    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 delayBetweenHands = 10;</code>
     */
    public boolean hasDelayBetweenHands() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 delayBetweenHands = 10;</code>
     */
    public int getDelayBetweenHands() {
      return delayBetweenHands_;
    }
    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 delayBetweenHands = 10;</code>
     */
    private void setDelayBetweenHands(int value) {
      bitField0_ |= 0x00000200;
      delayBetweenHands_ = value;
    }
    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 delayBetweenHands = 10;</code>
     */
    private void clearDelayBetweenHands() {
      bitField0_ = (bitField0_ & ~0x00000200);
      delayBetweenHands_ = 0;
    }

    public static final int PLAYERACTIONTIMEOUT_FIELD_NUMBER = 11;
    private int playerActionTimeout_;
    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 playerActionTimeout = 11;</code>
     */
    public boolean hasPlayerActionTimeout() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 playerActionTimeout = 11;</code>
     */
    public int getPlayerActionTimeout() {
      return playerActionTimeout_;
    }
    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 playerActionTimeout = 11;</code>
     */
    private void setPlayerActionTimeout(int value) {
      bitField0_ |= 0x00000400;
      playerActionTimeout_ = value;
    }
    /**
     * <pre>
     * These are seconds
     * </pre>
     *
     * <code>required uint32 playerActionTimeout = 11;</code>
     */
    private void clearPlayerActionTimeout() {
      bitField0_ = (bitField0_ & ~0x00000400);
      playerActionTimeout_ = 0;
    }

    public static final int FIRSTSMALLBLIND_FIELD_NUMBER = 12;
    private int firstSmallBlind_;
    /**
     * <code>required uint32 firstSmallBlind = 12;</code>
     */
    public boolean hasFirstSmallBlind() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required uint32 firstSmallBlind = 12;</code>
     */
    public int getFirstSmallBlind() {
      return firstSmallBlind_;
    }
    /**
     * <code>required uint32 firstSmallBlind = 12;</code>
     */
    private void setFirstSmallBlind(int value) {
      bitField0_ |= 0x00000800;
      firstSmallBlind_ = value;
    }
    /**
     * <code>required uint32 firstSmallBlind = 12;</code>
     */
    private void clearFirstSmallBlind() {
      bitField0_ = (bitField0_ & ~0x00000800);
      firstSmallBlind_ = 0;
    }

    public static final int STARTMONEY_FIELD_NUMBER = 13;
    private int startMoney_;
    /**
     * <code>required uint32 startMoney = 13;</code>
     */
    public boolean hasStartMoney() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required uint32 startMoney = 13;</code>
     */
    public int getStartMoney() {
      return startMoney_;
    }
    /**
     * <code>required uint32 startMoney = 13;</code>
     */
    private void setStartMoney(int value) {
      bitField0_ |= 0x00001000;
      startMoney_ = value;
    }
    /**
     * <code>required uint32 startMoney = 13;</code>
     */
    private void clearStartMoney() {
      bitField0_ = (bitField0_ & ~0x00001000);
      startMoney_ = 0;
    }

    public static final int MANUALBLINDS_FIELD_NUMBER = 14;
    private com.google.protobuf.Internal.IntList manualBlinds_;
    /**
     * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getManualBlindsList() {
      return manualBlinds_;
    }
    /**
     * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
     */
    public int getManualBlindsCount() {
      return manualBlinds_.size();
    }
    /**
     * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
     */
    public int getManualBlinds(int index) {
      return manualBlinds_.getInt(index);
    }
    private int manualBlindsMemoizedSerializedSize = -1;
    private void ensureManualBlindsIsMutable() {
      if (!manualBlinds_.isModifiable()) {
        manualBlinds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(manualBlinds_);
       }
    }
    /**
     * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
     */
    private void setManualBlinds(
        int index, int value) {
      ensureManualBlindsIsMutable();
      manualBlinds_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
     */
    private void addManualBlinds(int value) {
      ensureManualBlindsIsMutable();
      manualBlinds_.addInt(value);
    }
    /**
     * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
     */
    private void addAllManualBlinds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureManualBlindsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, manualBlinds_);
    }
    /**
     * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
     */
    private void clearManualBlinds() {
      manualBlinds_ = emptyIntList();
    }

    public static final int ALLOWSPECTATORS_FIELD_NUMBER = 15;
    private boolean allowSpectators_;
    /**
     * <code>optional bool allowSpectators = 15 [default = true];</code>
     */
    public boolean hasAllowSpectators() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool allowSpectators = 15 [default = true];</code>
     */
    public boolean getAllowSpectators() {
      return allowSpectators_;
    }
    /**
     * <code>optional bool allowSpectators = 15 [default = true];</code>
     */
    private void setAllowSpectators(boolean value) {
      bitField0_ |= 0x00002000;
      allowSpectators_ = value;
    }
    /**
     * <code>optional bool allowSpectators = 15 [default = true];</code>
     */
    private void clearAllowSpectators() {
      bitField0_ = (bitField0_ & ~0x00002000);
      allowSpectators_ = true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getGameName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, netGameType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, maxNumPlayers_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, raiseIntervalMode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, raiseEveryHands_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, raiseEveryMinutes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, endRaiseMode_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, endRaiseSmallBlindValue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, proposedGuiSpeed_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, delayBetweenHands_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, playerActionTimeout_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, firstSmallBlind_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, startMoney_);
      }
      if (getManualBlindsList().size() > 0) {
        output.writeUInt32NoTag(114);
        output.writeUInt32NoTag(manualBlindsMemoizedSerializedSize);
      }
      for (int i = 0; i < manualBlinds_.size(); i++) {
        output.writeUInt32NoTag(manualBlinds_.getInt(i));
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(15, allowSpectators_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getGameName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, netGameType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, maxNumPlayers_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, raiseIntervalMode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, raiseEveryHands_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, raiseEveryMinutes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, endRaiseMode_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, endRaiseSmallBlindValue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, proposedGuiSpeed_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, delayBetweenHands_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, playerActionTimeout_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, firstSmallBlind_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, startMoney_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < manualBlinds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(manualBlinds_.getInt(i));
        }
        size += dataSize;
        if (!getManualBlindsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        manualBlindsMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, allowSpectators_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.NetGameInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.NetGameInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.NetGameInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.NetGameInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.NetGameInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.NetGameInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.NetGameInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.NetGameInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.NetGameInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.NetGameInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.NetGameInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code NetGameInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.NetGameInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:NetGameInfo)
        de.pokerth.protocol.ProtoBuf.NetGameInfoOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.NetGameInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string gameName = 1;</code>
       */
      public boolean hasGameName() {
        return instance.hasGameName();
      }
      /**
       * <code>required string gameName = 1;</code>
       */
      public java.lang.String getGameName() {
        return instance.getGameName();
      }
      /**
       * <code>required string gameName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGameNameBytes() {
        return instance.getGameNameBytes();
      }
      /**
       * <code>required string gameName = 1;</code>
       */
      public Builder setGameName(
          java.lang.String value) {
        copyOnWrite();
        instance.setGameName(value);
        return this;
      }
      /**
       * <code>required string gameName = 1;</code>
       */
      public Builder clearGameName() {
        copyOnWrite();
        instance.clearGameName();
        return this;
      }
      /**
       * <code>required string gameName = 1;</code>
       */
      public Builder setGameNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGameNameBytes(value);
        return this;
      }

      /**
       * <code>required .NetGameInfo.NetGameType netGameType = 2;</code>
       */
      public boolean hasNetGameType() {
        return instance.hasNetGameType();
      }
      /**
       * <code>required .NetGameInfo.NetGameType netGameType = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameInfo.NetGameType getNetGameType() {
        return instance.getNetGameType();
      }
      /**
       * <code>required .NetGameInfo.NetGameType netGameType = 2;</code>
       */
      public Builder setNetGameType(de.pokerth.protocol.ProtoBuf.NetGameInfo.NetGameType value) {
        copyOnWrite();
        instance.setNetGameType(value);
        return this;
      }
      /**
       * <code>required .NetGameInfo.NetGameType netGameType = 2;</code>
       */
      public Builder clearNetGameType() {
        copyOnWrite();
        instance.clearNetGameType();
        return this;
      }

      /**
       * <code>required uint32 maxNumPlayers = 3;</code>
       */
      public boolean hasMaxNumPlayers() {
        return instance.hasMaxNumPlayers();
      }
      /**
       * <code>required uint32 maxNumPlayers = 3;</code>
       */
      public int getMaxNumPlayers() {
        return instance.getMaxNumPlayers();
      }
      /**
       * <code>required uint32 maxNumPlayers = 3;</code>
       */
      public Builder setMaxNumPlayers(int value) {
        copyOnWrite();
        instance.setMaxNumPlayers(value);
        return this;
      }
      /**
       * <code>required uint32 maxNumPlayers = 3;</code>
       */
      public Builder clearMaxNumPlayers() {
        copyOnWrite();
        instance.clearMaxNumPlayers();
        return this;
      }

      /**
       * <code>required .NetGameInfo.RaiseIntervalMode raiseIntervalMode = 4;</code>
       */
      public boolean hasRaiseIntervalMode() {
        return instance.hasRaiseIntervalMode();
      }
      /**
       * <code>required .NetGameInfo.RaiseIntervalMode raiseIntervalMode = 4;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameInfo.RaiseIntervalMode getRaiseIntervalMode() {
        return instance.getRaiseIntervalMode();
      }
      /**
       * <code>required .NetGameInfo.RaiseIntervalMode raiseIntervalMode = 4;</code>
       */
      public Builder setRaiseIntervalMode(de.pokerth.protocol.ProtoBuf.NetGameInfo.RaiseIntervalMode value) {
        copyOnWrite();
        instance.setRaiseIntervalMode(value);
        return this;
      }
      /**
       * <code>required .NetGameInfo.RaiseIntervalMode raiseIntervalMode = 4;</code>
       */
      public Builder clearRaiseIntervalMode() {
        copyOnWrite();
        instance.clearRaiseIntervalMode();
        return this;
      }

      /**
       * <code>optional uint32 raiseEveryHands = 5;</code>
       */
      public boolean hasRaiseEveryHands() {
        return instance.hasRaiseEveryHands();
      }
      /**
       * <code>optional uint32 raiseEveryHands = 5;</code>
       */
      public int getRaiseEveryHands() {
        return instance.getRaiseEveryHands();
      }
      /**
       * <code>optional uint32 raiseEveryHands = 5;</code>
       */
      public Builder setRaiseEveryHands(int value) {
        copyOnWrite();
        instance.setRaiseEveryHands(value);
        return this;
      }
      /**
       * <code>optional uint32 raiseEveryHands = 5;</code>
       */
      public Builder clearRaiseEveryHands() {
        copyOnWrite();
        instance.clearRaiseEveryHands();
        return this;
      }

      /**
       * <code>optional uint32 raiseEveryMinutes = 6;</code>
       */
      public boolean hasRaiseEveryMinutes() {
        return instance.hasRaiseEveryMinutes();
      }
      /**
       * <code>optional uint32 raiseEveryMinutes = 6;</code>
       */
      public int getRaiseEveryMinutes() {
        return instance.getRaiseEveryMinutes();
      }
      /**
       * <code>optional uint32 raiseEveryMinutes = 6;</code>
       */
      public Builder setRaiseEveryMinutes(int value) {
        copyOnWrite();
        instance.setRaiseEveryMinutes(value);
        return this;
      }
      /**
       * <code>optional uint32 raiseEveryMinutes = 6;</code>
       */
      public Builder clearRaiseEveryMinutes() {
        copyOnWrite();
        instance.clearRaiseEveryMinutes();
        return this;
      }

      /**
       * <code>required .NetGameInfo.EndRaiseMode endRaiseMode = 7;</code>
       */
      public boolean hasEndRaiseMode() {
        return instance.hasEndRaiseMode();
      }
      /**
       * <code>required .NetGameInfo.EndRaiseMode endRaiseMode = 7;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameInfo.EndRaiseMode getEndRaiseMode() {
        return instance.getEndRaiseMode();
      }
      /**
       * <code>required .NetGameInfo.EndRaiseMode endRaiseMode = 7;</code>
       */
      public Builder setEndRaiseMode(de.pokerth.protocol.ProtoBuf.NetGameInfo.EndRaiseMode value) {
        copyOnWrite();
        instance.setEndRaiseMode(value);
        return this;
      }
      /**
       * <code>required .NetGameInfo.EndRaiseMode endRaiseMode = 7;</code>
       */
      public Builder clearEndRaiseMode() {
        copyOnWrite();
        instance.clearEndRaiseMode();
        return this;
      }

      /**
       * <code>optional uint32 endRaiseSmallBlindValue = 8;</code>
       */
      public boolean hasEndRaiseSmallBlindValue() {
        return instance.hasEndRaiseSmallBlindValue();
      }
      /**
       * <code>optional uint32 endRaiseSmallBlindValue = 8;</code>
       */
      public int getEndRaiseSmallBlindValue() {
        return instance.getEndRaiseSmallBlindValue();
      }
      /**
       * <code>optional uint32 endRaiseSmallBlindValue = 8;</code>
       */
      public Builder setEndRaiseSmallBlindValue(int value) {
        copyOnWrite();
        instance.setEndRaiseSmallBlindValue(value);
        return this;
      }
      /**
       * <code>optional uint32 endRaiseSmallBlindValue = 8;</code>
       */
      public Builder clearEndRaiseSmallBlindValue() {
        copyOnWrite();
        instance.clearEndRaiseSmallBlindValue();
        return this;
      }

      /**
       * <code>required uint32 proposedGuiSpeed = 9;</code>
       */
      public boolean hasProposedGuiSpeed() {
        return instance.hasProposedGuiSpeed();
      }
      /**
       * <code>required uint32 proposedGuiSpeed = 9;</code>
       */
      public int getProposedGuiSpeed() {
        return instance.getProposedGuiSpeed();
      }
      /**
       * <code>required uint32 proposedGuiSpeed = 9;</code>
       */
      public Builder setProposedGuiSpeed(int value) {
        copyOnWrite();
        instance.setProposedGuiSpeed(value);
        return this;
      }
      /**
       * <code>required uint32 proposedGuiSpeed = 9;</code>
       */
      public Builder clearProposedGuiSpeed() {
        copyOnWrite();
        instance.clearProposedGuiSpeed();
        return this;
      }

      /**
       * <pre>
       * These are seconds
       * </pre>
       *
       * <code>required uint32 delayBetweenHands = 10;</code>
       */
      public boolean hasDelayBetweenHands() {
        return instance.hasDelayBetweenHands();
      }
      /**
       * <pre>
       * These are seconds
       * </pre>
       *
       * <code>required uint32 delayBetweenHands = 10;</code>
       */
      public int getDelayBetweenHands() {
        return instance.getDelayBetweenHands();
      }
      /**
       * <pre>
       * These are seconds
       * </pre>
       *
       * <code>required uint32 delayBetweenHands = 10;</code>
       */
      public Builder setDelayBetweenHands(int value) {
        copyOnWrite();
        instance.setDelayBetweenHands(value);
        return this;
      }
      /**
       * <pre>
       * These are seconds
       * </pre>
       *
       * <code>required uint32 delayBetweenHands = 10;</code>
       */
      public Builder clearDelayBetweenHands() {
        copyOnWrite();
        instance.clearDelayBetweenHands();
        return this;
      }

      /**
       * <pre>
       * These are seconds
       * </pre>
       *
       * <code>required uint32 playerActionTimeout = 11;</code>
       */
      public boolean hasPlayerActionTimeout() {
        return instance.hasPlayerActionTimeout();
      }
      /**
       * <pre>
       * These are seconds
       * </pre>
       *
       * <code>required uint32 playerActionTimeout = 11;</code>
       */
      public int getPlayerActionTimeout() {
        return instance.getPlayerActionTimeout();
      }
      /**
       * <pre>
       * These are seconds
       * </pre>
       *
       * <code>required uint32 playerActionTimeout = 11;</code>
       */
      public Builder setPlayerActionTimeout(int value) {
        copyOnWrite();
        instance.setPlayerActionTimeout(value);
        return this;
      }
      /**
       * <pre>
       * These are seconds
       * </pre>
       *
       * <code>required uint32 playerActionTimeout = 11;</code>
       */
      public Builder clearPlayerActionTimeout() {
        copyOnWrite();
        instance.clearPlayerActionTimeout();
        return this;
      }

      /**
       * <code>required uint32 firstSmallBlind = 12;</code>
       */
      public boolean hasFirstSmallBlind() {
        return instance.hasFirstSmallBlind();
      }
      /**
       * <code>required uint32 firstSmallBlind = 12;</code>
       */
      public int getFirstSmallBlind() {
        return instance.getFirstSmallBlind();
      }
      /**
       * <code>required uint32 firstSmallBlind = 12;</code>
       */
      public Builder setFirstSmallBlind(int value) {
        copyOnWrite();
        instance.setFirstSmallBlind(value);
        return this;
      }
      /**
       * <code>required uint32 firstSmallBlind = 12;</code>
       */
      public Builder clearFirstSmallBlind() {
        copyOnWrite();
        instance.clearFirstSmallBlind();
        return this;
      }

      /**
       * <code>required uint32 startMoney = 13;</code>
       */
      public boolean hasStartMoney() {
        return instance.hasStartMoney();
      }
      /**
       * <code>required uint32 startMoney = 13;</code>
       */
      public int getStartMoney() {
        return instance.getStartMoney();
      }
      /**
       * <code>required uint32 startMoney = 13;</code>
       */
      public Builder setStartMoney(int value) {
        copyOnWrite();
        instance.setStartMoney(value);
        return this;
      }
      /**
       * <code>required uint32 startMoney = 13;</code>
       */
      public Builder clearStartMoney() {
        copyOnWrite();
        instance.clearStartMoney();
        return this;
      }

      /**
       * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getManualBlindsList() {
        return java.util.Collections.unmodifiableList(
            instance.getManualBlindsList());
      }
      /**
       * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
       */
      public int getManualBlindsCount() {
        return instance.getManualBlindsCount();
      }
      /**
       * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
       */
      public int getManualBlinds(int index) {
        return instance.getManualBlinds(index);
      }
      /**
       * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
       */
      public Builder setManualBlinds(
          int index, int value) {
        copyOnWrite();
        instance.setManualBlinds(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
       */
      public Builder addManualBlinds(int value) {
        copyOnWrite();
        instance.addManualBlinds(value);
        return this;
      }
      /**
       * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
       */
      public Builder addAllManualBlinds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllManualBlinds(values);
        return this;
      }
      /**
       * <code>repeated uint32 manualBlinds = 14 [packed = true];</code>
       */
      public Builder clearManualBlinds() {
        copyOnWrite();
        instance.clearManualBlinds();
        return this;
      }

      /**
       * <code>optional bool allowSpectators = 15 [default = true];</code>
       */
      public boolean hasAllowSpectators() {
        return instance.hasAllowSpectators();
      }
      /**
       * <code>optional bool allowSpectators = 15 [default = true];</code>
       */
      public boolean getAllowSpectators() {
        return instance.getAllowSpectators();
      }
      /**
       * <code>optional bool allowSpectators = 15 [default = true];</code>
       */
      public Builder setAllowSpectators(boolean value) {
        copyOnWrite();
        instance.setAllowSpectators(value);
        return this;
      }
      /**
       * <code>optional bool allowSpectators = 15 [default = true];</code>
       */
      public Builder clearAllowSpectators() {
        copyOnWrite();
        instance.clearAllowSpectators();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:NetGameInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.NetGameInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameName()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNetGameType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMaxNumPlayers()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasRaiseIntervalMode()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasEndRaiseMode()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasProposedGuiSpeed()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasDelayBetweenHands()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerActionTimeout()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFirstSmallBlind()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasStartMoney()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          manualBlinds_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.NetGameInfo other = (de.pokerth.protocol.ProtoBuf.NetGameInfo) arg1;
          gameName_ = visitor.visitString(
              hasGameName(), gameName_,
              other.hasGameName(), other.gameName_);
          netGameType_ = visitor.visitInt(hasNetGameType(), netGameType_,
              other.hasNetGameType(), other.netGameType_);
          maxNumPlayers_ = visitor.visitInt(
              hasMaxNumPlayers(), maxNumPlayers_,
              other.hasMaxNumPlayers(), other.maxNumPlayers_);
          raiseIntervalMode_ = visitor.visitInt(hasRaiseIntervalMode(), raiseIntervalMode_,
              other.hasRaiseIntervalMode(), other.raiseIntervalMode_);
          raiseEveryHands_ = visitor.visitInt(
              hasRaiseEveryHands(), raiseEveryHands_,
              other.hasRaiseEveryHands(), other.raiseEveryHands_);
          raiseEveryMinutes_ = visitor.visitInt(
              hasRaiseEveryMinutes(), raiseEveryMinutes_,
              other.hasRaiseEveryMinutes(), other.raiseEveryMinutes_);
          endRaiseMode_ = visitor.visitInt(hasEndRaiseMode(), endRaiseMode_,
              other.hasEndRaiseMode(), other.endRaiseMode_);
          endRaiseSmallBlindValue_ = visitor.visitInt(
              hasEndRaiseSmallBlindValue(), endRaiseSmallBlindValue_,
              other.hasEndRaiseSmallBlindValue(), other.endRaiseSmallBlindValue_);
          proposedGuiSpeed_ = visitor.visitInt(
              hasProposedGuiSpeed(), proposedGuiSpeed_,
              other.hasProposedGuiSpeed(), other.proposedGuiSpeed_);
          delayBetweenHands_ = visitor.visitInt(
              hasDelayBetweenHands(), delayBetweenHands_,
              other.hasDelayBetweenHands(), other.delayBetweenHands_);
          playerActionTimeout_ = visitor.visitInt(
              hasPlayerActionTimeout(), playerActionTimeout_,
              other.hasPlayerActionTimeout(), other.playerActionTimeout_);
          firstSmallBlind_ = visitor.visitInt(
              hasFirstSmallBlind(), firstSmallBlind_,
              other.hasFirstSmallBlind(), other.firstSmallBlind_);
          startMoney_ = visitor.visitInt(
              hasStartMoney(), startMoney_,
              other.hasStartMoney(), other.startMoney_);
          manualBlinds_= visitor.visitIntList(manualBlinds_, other.manualBlinds_);
          allowSpectators_ = visitor.visitBoolean(
              hasAllowSpectators(), allowSpectators_,
              other.hasAllowSpectators(), other.allowSpectators_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  gameName_ = s;
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetGameInfo.NetGameType value = de.pokerth.protocol.ProtoBuf.NetGameInfo.NetGameType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    netGameType_ = rawValue;
                  }
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  maxNumPlayers_ = input.readUInt32();
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetGameInfo.RaiseIntervalMode value = de.pokerth.protocol.ProtoBuf.NetGameInfo.RaiseIntervalMode.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(4, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    raiseIntervalMode_ = rawValue;
                  }
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  raiseEveryHands_ = input.readUInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  raiseEveryMinutes_ = input.readUInt32();
                  break;
                }
                case 56: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetGameInfo.EndRaiseMode value = de.pokerth.protocol.ProtoBuf.NetGameInfo.EndRaiseMode.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(7, rawValue);
                  } else {
                    bitField0_ |= 0x00000040;
                    endRaiseMode_ = rawValue;
                  }
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000080;
                  endRaiseSmallBlindValue_ = input.readUInt32();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000100;
                  proposedGuiSpeed_ = input.readUInt32();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000200;
                  delayBetweenHands_ = input.readUInt32();
                  break;
                }
                case 88: {
                  bitField0_ |= 0x00000400;
                  playerActionTimeout_ = input.readUInt32();
                  break;
                }
                case 96: {
                  bitField0_ |= 0x00000800;
                  firstSmallBlind_ = input.readUInt32();
                  break;
                }
                case 104: {
                  bitField0_ |= 0x00001000;
                  startMoney_ = input.readUInt32();
                  break;
                }
                case 112: {
                  if (!manualBlinds_.isModifiable()) {
                    manualBlinds_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(manualBlinds_);
                  }
                  manualBlinds_.addInt(input.readUInt32());
                  break;
                }
                case 114: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!manualBlinds_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    manualBlinds_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(manualBlinds_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    manualBlinds_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 120: {
                  bitField0_ |= 0x00002000;
                  allowSpectators_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.NetGameInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:NetGameInfo)
    private static final de.pokerth.protocol.ProtoBuf.NetGameInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NetGameInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.NetGameInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<NetGameInfo> PARSER;

    public static com.google.protobuf.Parser<NetGameInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PlayerResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayerResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 playerId = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>required uint32 resultCard1 = 2;</code>
     */
    boolean hasResultCard1();
    /**
     * <code>required uint32 resultCard1 = 2;</code>
     */
    int getResultCard1();

    /**
     * <code>required uint32 resultCard2 = 3;</code>
     */
    boolean hasResultCard2();
    /**
     * <code>required uint32 resultCard2 = 3;</code>
     */
    int getResultCard2();

    /**
     * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getBestHandPositionList();
    /**
     * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
     */
    int getBestHandPositionCount();
    /**
     * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
     */
    int getBestHandPosition(int index);

    /**
     * <code>required uint32 moneyWon = 5;</code>
     */
    boolean hasMoneyWon();
    /**
     * <code>required uint32 moneyWon = 5;</code>
     */
    int getMoneyWon();

    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    boolean hasPlayerMoney();
    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    int getPlayerMoney();

    /**
     * <code>optional uint32 cardsValue = 7;</code>
     */
    boolean hasCardsValue();
    /**
     * <code>optional uint32 cardsValue = 7;</code>
     */
    int getCardsValue();
  }
  /**
   * Protobuf type {@code PlayerResult}
   */
  public  static final class PlayerResult extends
      com.google.protobuf.GeneratedMessageLite<
          PlayerResult, PlayerResult.Builder> implements
      // @@protoc_insertion_point(message_implements:PlayerResult)
      PlayerResultOrBuilder {
    private PlayerResult() {
      bestHandPosition_ = emptyIntList();
    }
    private int bitField0_;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000001;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      playerId_ = 0;
    }

    public static final int RESULTCARD1_FIELD_NUMBER = 2;
    private int resultCard1_;
    /**
     * <code>required uint32 resultCard1 = 2;</code>
     */
    public boolean hasResultCard1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 resultCard1 = 2;</code>
     */
    public int getResultCard1() {
      return resultCard1_;
    }
    /**
     * <code>required uint32 resultCard1 = 2;</code>
     */
    private void setResultCard1(int value) {
      bitField0_ |= 0x00000002;
      resultCard1_ = value;
    }
    /**
     * <code>required uint32 resultCard1 = 2;</code>
     */
    private void clearResultCard1() {
      bitField0_ = (bitField0_ & ~0x00000002);
      resultCard1_ = 0;
    }

    public static final int RESULTCARD2_FIELD_NUMBER = 3;
    private int resultCard2_;
    /**
     * <code>required uint32 resultCard2 = 3;</code>
     */
    public boolean hasResultCard2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 resultCard2 = 3;</code>
     */
    public int getResultCard2() {
      return resultCard2_;
    }
    /**
     * <code>required uint32 resultCard2 = 3;</code>
     */
    private void setResultCard2(int value) {
      bitField0_ |= 0x00000004;
      resultCard2_ = value;
    }
    /**
     * <code>required uint32 resultCard2 = 3;</code>
     */
    private void clearResultCard2() {
      bitField0_ = (bitField0_ & ~0x00000004);
      resultCard2_ = 0;
    }

    public static final int BESTHANDPOSITION_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList bestHandPosition_;
    /**
     * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getBestHandPositionList() {
      return bestHandPosition_;
    }
    /**
     * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
     */
    public int getBestHandPositionCount() {
      return bestHandPosition_.size();
    }
    /**
     * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
     */
    public int getBestHandPosition(int index) {
      return bestHandPosition_.getInt(index);
    }
    private int bestHandPositionMemoizedSerializedSize = -1;
    private void ensureBestHandPositionIsMutable() {
      if (!bestHandPosition_.isModifiable()) {
        bestHandPosition_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(bestHandPosition_);
       }
    }
    /**
     * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
     */
    private void setBestHandPosition(
        int index, int value) {
      ensureBestHandPositionIsMutable();
      bestHandPosition_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
     */
    private void addBestHandPosition(int value) {
      ensureBestHandPositionIsMutable();
      bestHandPosition_.addInt(value);
    }
    /**
     * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
     */
    private void addAllBestHandPosition(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureBestHandPositionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, bestHandPosition_);
    }
    /**
     * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
     */
    private void clearBestHandPosition() {
      bestHandPosition_ = emptyIntList();
    }

    public static final int MONEYWON_FIELD_NUMBER = 5;
    private int moneyWon_;
    /**
     * <code>required uint32 moneyWon = 5;</code>
     */
    public boolean hasMoneyWon() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 moneyWon = 5;</code>
     */
    public int getMoneyWon() {
      return moneyWon_;
    }
    /**
     * <code>required uint32 moneyWon = 5;</code>
     */
    private void setMoneyWon(int value) {
      bitField0_ |= 0x00000008;
      moneyWon_ = value;
    }
    /**
     * <code>required uint32 moneyWon = 5;</code>
     */
    private void clearMoneyWon() {
      bitField0_ = (bitField0_ & ~0x00000008);
      moneyWon_ = 0;
    }

    public static final int PLAYERMONEY_FIELD_NUMBER = 6;
    private int playerMoney_;
    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    public boolean hasPlayerMoney() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    public int getPlayerMoney() {
      return playerMoney_;
    }
    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    private void setPlayerMoney(int value) {
      bitField0_ |= 0x00000010;
      playerMoney_ = value;
    }
    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    private void clearPlayerMoney() {
      bitField0_ = (bitField0_ & ~0x00000010);
      playerMoney_ = 0;
    }

    public static final int CARDSVALUE_FIELD_NUMBER = 7;
    private int cardsValue_;
    /**
     * <code>optional uint32 cardsValue = 7;</code>
     */
    public boolean hasCardsValue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 cardsValue = 7;</code>
     */
    public int getCardsValue() {
      return cardsValue_;
    }
    /**
     * <code>optional uint32 cardsValue = 7;</code>
     */
    private void setCardsValue(int value) {
      bitField0_ |= 0x00000020;
      cardsValue_ = value;
    }
    /**
     * <code>optional uint32 cardsValue = 7;</code>
     */
    private void clearCardsValue() {
      bitField0_ = (bitField0_ & ~0x00000020);
      cardsValue_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, resultCard1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, resultCard2_);
      }
      if (getBestHandPositionList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(bestHandPositionMemoizedSerializedSize);
      }
      for (int i = 0; i < bestHandPosition_.size(); i++) {
        output.writeUInt32NoTag(bestHandPosition_.getInt(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, moneyWon_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, playerMoney_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(7, cardsValue_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, resultCard1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, resultCard2_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bestHandPosition_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(bestHandPosition_.getInt(i));
        }
        size += dataSize;
        if (!getBestHandPositionList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        bestHandPositionMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, moneyWon_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, playerMoney_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, cardsValue_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.PlayerResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.PlayerResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PlayerResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.PlayerResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayerResult)
        de.pokerth.protocol.ProtoBuf.PlayerResultOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.PlayerResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>required uint32 resultCard1 = 2;</code>
       */
      public boolean hasResultCard1() {
        return instance.hasResultCard1();
      }
      /**
       * <code>required uint32 resultCard1 = 2;</code>
       */
      public int getResultCard1() {
        return instance.getResultCard1();
      }
      /**
       * <code>required uint32 resultCard1 = 2;</code>
       */
      public Builder setResultCard1(int value) {
        copyOnWrite();
        instance.setResultCard1(value);
        return this;
      }
      /**
       * <code>required uint32 resultCard1 = 2;</code>
       */
      public Builder clearResultCard1() {
        copyOnWrite();
        instance.clearResultCard1();
        return this;
      }

      /**
       * <code>required uint32 resultCard2 = 3;</code>
       */
      public boolean hasResultCard2() {
        return instance.hasResultCard2();
      }
      /**
       * <code>required uint32 resultCard2 = 3;</code>
       */
      public int getResultCard2() {
        return instance.getResultCard2();
      }
      /**
       * <code>required uint32 resultCard2 = 3;</code>
       */
      public Builder setResultCard2(int value) {
        copyOnWrite();
        instance.setResultCard2(value);
        return this;
      }
      /**
       * <code>required uint32 resultCard2 = 3;</code>
       */
      public Builder clearResultCard2() {
        copyOnWrite();
        instance.clearResultCard2();
        return this;
      }

      /**
       * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getBestHandPositionList() {
        return java.util.Collections.unmodifiableList(
            instance.getBestHandPositionList());
      }
      /**
       * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
       */
      public int getBestHandPositionCount() {
        return instance.getBestHandPositionCount();
      }
      /**
       * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
       */
      public int getBestHandPosition(int index) {
        return instance.getBestHandPosition(index);
      }
      /**
       * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
       */
      public Builder setBestHandPosition(
          int index, int value) {
        copyOnWrite();
        instance.setBestHandPosition(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
       */
      public Builder addBestHandPosition(int value) {
        copyOnWrite();
        instance.addBestHandPosition(value);
        return this;
      }
      /**
       * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
       */
      public Builder addAllBestHandPosition(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllBestHandPosition(values);
        return this;
      }
      /**
       * <code>repeated uint32 bestHandPosition = 4 [packed = true];</code>
       */
      public Builder clearBestHandPosition() {
        copyOnWrite();
        instance.clearBestHandPosition();
        return this;
      }

      /**
       * <code>required uint32 moneyWon = 5;</code>
       */
      public boolean hasMoneyWon() {
        return instance.hasMoneyWon();
      }
      /**
       * <code>required uint32 moneyWon = 5;</code>
       */
      public int getMoneyWon() {
        return instance.getMoneyWon();
      }
      /**
       * <code>required uint32 moneyWon = 5;</code>
       */
      public Builder setMoneyWon(int value) {
        copyOnWrite();
        instance.setMoneyWon(value);
        return this;
      }
      /**
       * <code>required uint32 moneyWon = 5;</code>
       */
      public Builder clearMoneyWon() {
        copyOnWrite();
        instance.clearMoneyWon();
        return this;
      }

      /**
       * <code>required uint32 playerMoney = 6;</code>
       */
      public boolean hasPlayerMoney() {
        return instance.hasPlayerMoney();
      }
      /**
       * <code>required uint32 playerMoney = 6;</code>
       */
      public int getPlayerMoney() {
        return instance.getPlayerMoney();
      }
      /**
       * <code>required uint32 playerMoney = 6;</code>
       */
      public Builder setPlayerMoney(int value) {
        copyOnWrite();
        instance.setPlayerMoney(value);
        return this;
      }
      /**
       * <code>required uint32 playerMoney = 6;</code>
       */
      public Builder clearPlayerMoney() {
        copyOnWrite();
        instance.clearPlayerMoney();
        return this;
      }

      /**
       * <code>optional uint32 cardsValue = 7;</code>
       */
      public boolean hasCardsValue() {
        return instance.hasCardsValue();
      }
      /**
       * <code>optional uint32 cardsValue = 7;</code>
       */
      public int getCardsValue() {
        return instance.getCardsValue();
      }
      /**
       * <code>optional uint32 cardsValue = 7;</code>
       */
      public Builder setCardsValue(int value) {
        copyOnWrite();
        instance.setCardsValue(value);
        return this;
      }
      /**
       * <code>optional uint32 cardsValue = 7;</code>
       */
      public Builder clearCardsValue() {
        copyOnWrite();
        instance.clearCardsValue();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerResult)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.PlayerResult();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasResultCard1()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasResultCard2()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMoneyWon()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerMoney()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          bestHandPosition_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.PlayerResult other = (de.pokerth.protocol.ProtoBuf.PlayerResult) arg1;
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          resultCard1_ = visitor.visitInt(
              hasResultCard1(), resultCard1_,
              other.hasResultCard1(), other.resultCard1_);
          resultCard2_ = visitor.visitInt(
              hasResultCard2(), resultCard2_,
              other.hasResultCard2(), other.resultCard2_);
          bestHandPosition_= visitor.visitIntList(bestHandPosition_, other.bestHandPosition_);
          moneyWon_ = visitor.visitInt(
              hasMoneyWon(), moneyWon_,
              other.hasMoneyWon(), other.moneyWon_);
          playerMoney_ = visitor.visitInt(
              hasPlayerMoney(), playerMoney_,
              other.hasPlayerMoney(), other.playerMoney_);
          cardsValue_ = visitor.visitInt(
              hasCardsValue(), cardsValue_,
              other.hasCardsValue(), other.cardsValue_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  resultCard1_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  resultCard2_ = input.readUInt32();
                  break;
                }
                case 32: {
                  if (!bestHandPosition_.isModifiable()) {
                    bestHandPosition_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(bestHandPosition_);
                  }
                  bestHandPosition_.addInt(input.readUInt32());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!bestHandPosition_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    bestHandPosition_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(bestHandPosition_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    bestHandPosition_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000008;
                  moneyWon_ = input.readUInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000010;
                  playerMoney_ = input.readUInt32();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000020;
                  cardsValue_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.PlayerResult.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PlayerResult)
    private static final de.pokerth.protocol.ProtoBuf.PlayerResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlayerResult();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.PlayerResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PlayerResult> PARSER;

    public static com.google.protobuf.Parser<PlayerResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AnnounceMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AnnounceMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
     */
    boolean hasProtocolVersion();
    /**
     * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
     */
    de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version getProtocolVersion();

    /**
     * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
     */
    boolean hasLatestGameVersion();
    /**
     * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version getLatestGameVersion();

    /**
     * <code>required uint32 latestBetaRevision = 3;</code>
     */
    boolean hasLatestBetaRevision();
    /**
     * <code>required uint32 latestBetaRevision = 3;</code>
     */
    int getLatestBetaRevision();

    /**
     * <code>required .AnnounceMessage.ServerType serverType = 4;</code>
     */
    boolean hasServerType();
    /**
     * <code>required .AnnounceMessage.ServerType serverType = 4;</code>
     */
    de.pokerth.protocol.ProtoBuf.AnnounceMessage.ServerType getServerType();

    /**
     * <code>required uint32 numPlayersOnServer = 5;</code>
     */
    boolean hasNumPlayersOnServer();
    /**
     * <code>required uint32 numPlayersOnServer = 5;</code>
     */
    int getNumPlayersOnServer();
  }
  /**
   * Protobuf type {@code AnnounceMessage}
   */
  public  static final class AnnounceMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AnnounceMessage, AnnounceMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AnnounceMessage)
      AnnounceMessageOrBuilder {
    private AnnounceMessage() {
    }
    /**
     * Protobuf enum {@code AnnounceMessage.ServerType}
     */
    public enum ServerType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>serverTypeLAN = 0;</code>
       */
      serverTypeLAN(0),
      /**
       * <code>serverTypeInternetNoAuth = 1;</code>
       */
      serverTypeInternetNoAuth(1),
      /**
       * <code>serverTypeInternetAuth = 2;</code>
       */
      serverTypeInternetAuth(2),
      ;

      /**
       * <code>serverTypeLAN = 0;</code>
       */
      public static final int serverTypeLAN_VALUE = 0;
      /**
       * <code>serverTypeInternetNoAuth = 1;</code>
       */
      public static final int serverTypeInternetNoAuth_VALUE = 1;
      /**
       * <code>serverTypeInternetAuth = 2;</code>
       */
      public static final int serverTypeInternetAuth_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ServerType valueOf(int value) {
        return forNumber(value);
      }

      public static ServerType forNumber(int value) {
        switch (value) {
          case 0: return serverTypeLAN;
          case 1: return serverTypeInternetNoAuth;
          case 2: return serverTypeInternetAuth;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ServerType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ServerType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ServerType>() {
              public ServerType findValueByNumber(int number) {
                return ServerType.forNumber(number);
              }
            };

      private final int value;

      private ServerType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:AnnounceMessage.ServerType)
    }

    public interface VersionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:AnnounceMessage.Version)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required uint32 majorVersion = 1;</code>
       */
      boolean hasMajorVersion();
      /**
       * <code>required uint32 majorVersion = 1;</code>
       */
      int getMajorVersion();

      /**
       * <code>required uint32 minorVersion = 2;</code>
       */
      boolean hasMinorVersion();
      /**
       * <code>required uint32 minorVersion = 2;</code>
       */
      int getMinorVersion();
    }
    /**
     * Protobuf type {@code AnnounceMessage.Version}
     */
    public  static final class Version extends
        com.google.protobuf.GeneratedMessageLite<
            Version, Version.Builder> implements
        // @@protoc_insertion_point(message_implements:AnnounceMessage.Version)
        VersionOrBuilder {
      private Version() {
      }
      private int bitField0_;
      public static final int MAJORVERSION_FIELD_NUMBER = 1;
      private int majorVersion_;
      /**
       * <code>required uint32 majorVersion = 1;</code>
       */
      public boolean hasMajorVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 majorVersion = 1;</code>
       */
      public int getMajorVersion() {
        return majorVersion_;
      }
      /**
       * <code>required uint32 majorVersion = 1;</code>
       */
      private void setMajorVersion(int value) {
        bitField0_ |= 0x00000001;
        majorVersion_ = value;
      }
      /**
       * <code>required uint32 majorVersion = 1;</code>
       */
      private void clearMajorVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        majorVersion_ = 0;
      }

      public static final int MINORVERSION_FIELD_NUMBER = 2;
      private int minorVersion_;
      /**
       * <code>required uint32 minorVersion = 2;</code>
       */
      public boolean hasMinorVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 minorVersion = 2;</code>
       */
      public int getMinorVersion() {
        return minorVersion_;
      }
      /**
       * <code>required uint32 minorVersion = 2;</code>
       */
      private void setMinorVersion(int value) {
        bitField0_ |= 0x00000002;
        minorVersion_ = value;
      }
      /**
       * <code>required uint32 minorVersion = 2;</code>
       */
      private void clearMinorVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minorVersion_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, majorVersion_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, minorVersion_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, majorVersion_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, minorVersion_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code AnnounceMessage.Version}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version, Builder> implements
          // @@protoc_insertion_point(builder_implements:AnnounceMessage.Version)
          de.pokerth.protocol.ProtoBuf.AnnounceMessage.VersionOrBuilder {
        // Construct using de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required uint32 majorVersion = 1;</code>
         */
        public boolean hasMajorVersion() {
          return instance.hasMajorVersion();
        }
        /**
         * <code>required uint32 majorVersion = 1;</code>
         */
        public int getMajorVersion() {
          return instance.getMajorVersion();
        }
        /**
         * <code>required uint32 majorVersion = 1;</code>
         */
        public Builder setMajorVersion(int value) {
          copyOnWrite();
          instance.setMajorVersion(value);
          return this;
        }
        /**
         * <code>required uint32 majorVersion = 1;</code>
         */
        public Builder clearMajorVersion() {
          copyOnWrite();
          instance.clearMajorVersion();
          return this;
        }

        /**
         * <code>required uint32 minorVersion = 2;</code>
         */
        public boolean hasMinorVersion() {
          return instance.hasMinorVersion();
        }
        /**
         * <code>required uint32 minorVersion = 2;</code>
         */
        public int getMinorVersion() {
          return instance.getMinorVersion();
        }
        /**
         * <code>required uint32 minorVersion = 2;</code>
         */
        public Builder setMinorVersion(int value) {
          copyOnWrite();
          instance.setMinorVersion(value);
          return this;
        }
        /**
         * <code>required uint32 minorVersion = 2;</code>
         */
        public Builder clearMinorVersion() {
          copyOnWrite();
          instance.clearMinorVersion();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:AnnounceMessage.Version)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasMajorVersion()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasMinorVersion()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version other = (de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version) arg1;
            majorVersion_ = visitor.visitInt(
                hasMajorVersion(), majorVersion_,
                other.hasMajorVersion(), other.majorVersion_);
            minorVersion_ = visitor.visitInt(
                hasMinorVersion(), minorVersion_,
                other.hasMinorVersion(), other.minorVersion_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    majorVersion_ = input.readUInt32();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    minorVersion_ = input.readUInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:AnnounceMessage.Version)
      private static final de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Version();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Version> PARSER;

      public static com.google.protobuf.Parser<Version> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int PROTOCOLVERSION_FIELD_NUMBER = 1;
    private de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version protocolVersion_;
    /**
     * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
     */
    public boolean hasProtocolVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version getProtocolVersion() {
      return protocolVersion_ == null ? de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.getDefaultInstance() : protocolVersion_;
    }
    /**
     * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
     */
    private void setProtocolVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
      if (value == null) {
        throw new NullPointerException();
      }
      protocolVersion_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
     */
    private void setProtocolVersion(
        de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.Builder builderForValue) {
      protocolVersion_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
     */
    private void mergeProtocolVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
      if (protocolVersion_ != null &&
          protocolVersion_ != de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.getDefaultInstance()) {
        protocolVersion_ =
          de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.newBuilder(protocolVersion_).mergeFrom(value).buildPartial();
      } else {
        protocolVersion_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
     */
    private void clearProtocolVersion() {  protocolVersion_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int LATESTGAMEVERSION_FIELD_NUMBER = 2;
    private de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version latestGameVersion_;
    /**
     * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
     */
    public boolean hasLatestGameVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version getLatestGameVersion() {
      return latestGameVersion_ == null ? de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.getDefaultInstance() : latestGameVersion_;
    }
    /**
     * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
     */
    private void setLatestGameVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
      if (value == null) {
        throw new NullPointerException();
      }
      latestGameVersion_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
     */
    private void setLatestGameVersion(
        de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.Builder builderForValue) {
      latestGameVersion_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
     */
    private void mergeLatestGameVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
      if (latestGameVersion_ != null &&
          latestGameVersion_ != de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.getDefaultInstance()) {
        latestGameVersion_ =
          de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.newBuilder(latestGameVersion_).mergeFrom(value).buildPartial();
      } else {
        latestGameVersion_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
     */
    private void clearLatestGameVersion() {  latestGameVersion_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int LATESTBETAREVISION_FIELD_NUMBER = 3;
    private int latestBetaRevision_;
    /**
     * <code>required uint32 latestBetaRevision = 3;</code>
     */
    public boolean hasLatestBetaRevision() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 latestBetaRevision = 3;</code>
     */
    public int getLatestBetaRevision() {
      return latestBetaRevision_;
    }
    /**
     * <code>required uint32 latestBetaRevision = 3;</code>
     */
    private void setLatestBetaRevision(int value) {
      bitField0_ |= 0x00000004;
      latestBetaRevision_ = value;
    }
    /**
     * <code>required uint32 latestBetaRevision = 3;</code>
     */
    private void clearLatestBetaRevision() {
      bitField0_ = (bitField0_ & ~0x00000004);
      latestBetaRevision_ = 0;
    }

    public static final int SERVERTYPE_FIELD_NUMBER = 4;
    private int serverType_;
    /**
     * <code>required .AnnounceMessage.ServerType serverType = 4;</code>
     */
    public boolean hasServerType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .AnnounceMessage.ServerType serverType = 4;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AnnounceMessage.ServerType getServerType() {
      de.pokerth.protocol.ProtoBuf.AnnounceMessage.ServerType result = de.pokerth.protocol.ProtoBuf.AnnounceMessage.ServerType.forNumber(serverType_);
      return result == null ? de.pokerth.protocol.ProtoBuf.AnnounceMessage.ServerType.serverTypeLAN : result;
    }
    /**
     * <code>required .AnnounceMessage.ServerType serverType = 4;</code>
     */
    private void setServerType(de.pokerth.protocol.ProtoBuf.AnnounceMessage.ServerType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      serverType_ = value.getNumber();
    }
    /**
     * <code>required .AnnounceMessage.ServerType serverType = 4;</code>
     */
    private void clearServerType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      serverType_ = 0;
    }

    public static final int NUMPLAYERSONSERVER_FIELD_NUMBER = 5;
    private int numPlayersOnServer_;
    /**
     * <code>required uint32 numPlayersOnServer = 5;</code>
     */
    public boolean hasNumPlayersOnServer() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 numPlayersOnServer = 5;</code>
     */
    public int getNumPlayersOnServer() {
      return numPlayersOnServer_;
    }
    /**
     * <code>required uint32 numPlayersOnServer = 5;</code>
     */
    private void setNumPlayersOnServer(int value) {
      bitField0_ |= 0x00000010;
      numPlayersOnServer_ = value;
    }
    /**
     * <code>required uint32 numPlayersOnServer = 5;</code>
     */
    private void clearNumPlayersOnServer() {
      bitField0_ = (bitField0_ & ~0x00000010);
      numPlayersOnServer_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getProtocolVersion());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getLatestGameVersion());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, latestBetaRevision_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, serverType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, numPlayersOnServer_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProtocolVersion());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLatestGameVersion());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, latestBetaRevision_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, serverType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, numPlayersOnServer_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AnnounceMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AnnounceMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AnnounceMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AnnounceMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AnnounceMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AnnounceMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AnnounceMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AnnounceMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AnnounceMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AnnounceMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AnnounceMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AnnounceMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AnnounceMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AnnounceMessage)
        de.pokerth.protocol.ProtoBuf.AnnounceMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AnnounceMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
       */
      public boolean hasProtocolVersion() {
        return instance.hasProtocolVersion();
      }
      /**
       * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version getProtocolVersion() {
        return instance.getProtocolVersion();
      }
      /**
       * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
       */
      public Builder setProtocolVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
        copyOnWrite();
        instance.setProtocolVersion(value);
        return this;
        }
      /**
       * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
       */
      public Builder setProtocolVersion(
          de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.Builder builderForValue) {
        copyOnWrite();
        instance.setProtocolVersion(builderForValue);
        return this;
      }
      /**
       * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
       */
      public Builder mergeProtocolVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
        copyOnWrite();
        instance.mergeProtocolVersion(value);
        return this;
      }
      /**
       * <code>required .AnnounceMessage.Version protocolVersion = 1;</code>
       */
      public Builder clearProtocolVersion() {  copyOnWrite();
        instance.clearProtocolVersion();
        return this;
      }

      /**
       * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
       */
      public boolean hasLatestGameVersion() {
        return instance.hasLatestGameVersion();
      }
      /**
       * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version getLatestGameVersion() {
        return instance.getLatestGameVersion();
      }
      /**
       * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
       */
      public Builder setLatestGameVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
        copyOnWrite();
        instance.setLatestGameVersion(value);
        return this;
        }
      /**
       * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
       */
      public Builder setLatestGameVersion(
          de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.Builder builderForValue) {
        copyOnWrite();
        instance.setLatestGameVersion(builderForValue);
        return this;
      }
      /**
       * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
       */
      public Builder mergeLatestGameVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
        copyOnWrite();
        instance.mergeLatestGameVersion(value);
        return this;
      }
      /**
       * <code>required .AnnounceMessage.Version latestGameVersion = 2;</code>
       */
      public Builder clearLatestGameVersion() {  copyOnWrite();
        instance.clearLatestGameVersion();
        return this;
      }

      /**
       * <code>required uint32 latestBetaRevision = 3;</code>
       */
      public boolean hasLatestBetaRevision() {
        return instance.hasLatestBetaRevision();
      }
      /**
       * <code>required uint32 latestBetaRevision = 3;</code>
       */
      public int getLatestBetaRevision() {
        return instance.getLatestBetaRevision();
      }
      /**
       * <code>required uint32 latestBetaRevision = 3;</code>
       */
      public Builder setLatestBetaRevision(int value) {
        copyOnWrite();
        instance.setLatestBetaRevision(value);
        return this;
      }
      /**
       * <code>required uint32 latestBetaRevision = 3;</code>
       */
      public Builder clearLatestBetaRevision() {
        copyOnWrite();
        instance.clearLatestBetaRevision();
        return this;
      }

      /**
       * <code>required .AnnounceMessage.ServerType serverType = 4;</code>
       */
      public boolean hasServerType() {
        return instance.hasServerType();
      }
      /**
       * <code>required .AnnounceMessage.ServerType serverType = 4;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AnnounceMessage.ServerType getServerType() {
        return instance.getServerType();
      }
      /**
       * <code>required .AnnounceMessage.ServerType serverType = 4;</code>
       */
      public Builder setServerType(de.pokerth.protocol.ProtoBuf.AnnounceMessage.ServerType value) {
        copyOnWrite();
        instance.setServerType(value);
        return this;
      }
      /**
       * <code>required .AnnounceMessage.ServerType serverType = 4;</code>
       */
      public Builder clearServerType() {
        copyOnWrite();
        instance.clearServerType();
        return this;
      }

      /**
       * <code>required uint32 numPlayersOnServer = 5;</code>
       */
      public boolean hasNumPlayersOnServer() {
        return instance.hasNumPlayersOnServer();
      }
      /**
       * <code>required uint32 numPlayersOnServer = 5;</code>
       */
      public int getNumPlayersOnServer() {
        return instance.getNumPlayersOnServer();
      }
      /**
       * <code>required uint32 numPlayersOnServer = 5;</code>
       */
      public Builder setNumPlayersOnServer(int value) {
        copyOnWrite();
        instance.setNumPlayersOnServer(value);
        return this;
      }
      /**
       * <code>required uint32 numPlayersOnServer = 5;</code>
       */
      public Builder clearNumPlayersOnServer() {
        copyOnWrite();
        instance.clearNumPlayersOnServer();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AnnounceMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AnnounceMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasProtocolVersion()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasLatestGameVersion()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasLatestBetaRevision()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasServerType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNumPlayersOnServer()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getProtocolVersion().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getLatestGameVersion().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AnnounceMessage other = (de.pokerth.protocol.ProtoBuf.AnnounceMessage) arg1;
          protocolVersion_ = visitor.visitMessage(protocolVersion_, other.protocolVersion_);
          latestGameVersion_ = visitor.visitMessage(latestGameVersion_, other.latestGameVersion_);
          latestBetaRevision_ = visitor.visitInt(
              hasLatestBetaRevision(), latestBetaRevision_,
              other.hasLatestBetaRevision(), other.latestBetaRevision_);
          serverType_ = visitor.visitInt(hasServerType(), serverType_,
              other.hasServerType(), other.serverType_);
          numPlayersOnServer_ = visitor.visitInt(
              hasNumPlayersOnServer(), numPlayersOnServer_,
              other.hasNumPlayersOnServer(), other.numPlayersOnServer_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = protocolVersion_.toBuilder();
                  }
                  protocolVersion_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(protocolVersion_);
                    protocolVersion_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 18: {
                  de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = latestGameVersion_.toBuilder();
                  }
                  latestGameVersion_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(latestGameVersion_);
                    latestGameVersion_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  latestBetaRevision_ = input.readUInt32();
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.AnnounceMessage.ServerType value = de.pokerth.protocol.ProtoBuf.AnnounceMessage.ServerType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(4, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    serverType_ = rawValue;
                  }
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  numPlayersOnServer_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AnnounceMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AnnounceMessage)
    private static final de.pokerth.protocol.ProtoBuf.AnnounceMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AnnounceMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AnnounceMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AnnounceMessage> PARSER;

    public static com.google.protobuf.Parser<AnnounceMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface InitMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:InitMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
     */
    boolean hasRequestedVersion();
    /**
     * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
     */
    de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version getRequestedVersion();

    /**
     * <code>required uint32 buildId = 2;</code>
     */
    boolean hasBuildId();
    /**
     * <code>required uint32 buildId = 2;</code>
     */
    int getBuildId();

    /**
     * <code>optional bytes myLastSessionId = 3;</code>
     */
    boolean hasMyLastSessionId();
    /**
     * <code>optional bytes myLastSessionId = 3;</code>
     */
    com.google.protobuf.ByteString getMyLastSessionId();

    /**
     * <code>optional string authServerPassword = 4;</code>
     */
    boolean hasAuthServerPassword();
    /**
     * <code>optional string authServerPassword = 4;</code>
     */
    java.lang.String getAuthServerPassword();
    /**
     * <code>optional string authServerPassword = 4;</code>
     */
    com.google.protobuf.ByteString
        getAuthServerPasswordBytes();

    /**
     * <code>required .InitMessage.LoginType login = 5;</code>
     */
    boolean hasLogin();
    /**
     * <code>required .InitMessage.LoginType login = 5;</code>
     */
    de.pokerth.protocol.ProtoBuf.InitMessage.LoginType getLogin();

    /**
     * <pre>
     * Only used for guest login or unauthenticated login.
     * </pre>
     *
     * <code>optional string nickName = 6;</code>
     */
    boolean hasNickName();
    /**
     * <pre>
     * Only used for guest login or unauthenticated login.
     * </pre>
     *
     * <code>optional string nickName = 6;</code>
     */
    java.lang.String getNickName();
    /**
     * <pre>
     * Only used for guest login or unauthenticated login.
     * </pre>
     *
     * <code>optional string nickName = 6;</code>
     */
    com.google.protobuf.ByteString
        getNickNameBytes();

    /**
     * <pre>
     * Authenticated login data is according to SCRAM SHA-1
     * </pre>
     *
     * <code>optional bytes clientUserData = 7;</code>
     */
    boolean hasClientUserData();
    /**
     * <pre>
     * Authenticated login data is according to SCRAM SHA-1
     * </pre>
     *
     * <code>optional bytes clientUserData = 7;</code>
     */
    com.google.protobuf.ByteString getClientUserData();

    /**
     * <pre>
     * Ignored for guest login.
     * </pre>
     *
     * <code>optional bytes avatarHash = 8;</code>
     */
    boolean hasAvatarHash();
    /**
     * <pre>
     * Ignored for guest login.
     * </pre>
     *
     * <code>optional bytes avatarHash = 8;</code>
     */
    com.google.protobuf.ByteString getAvatarHash();
  }
  /**
   * <pre>
   * buildId contains a constant build id (specific for Windows/Linux/Mac builds)
   * </pre>
   *
   * Protobuf type {@code InitMessage}
   */
  public  static final class InitMessage extends
      com.google.protobuf.GeneratedMessageLite<
          InitMessage, InitMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:InitMessage)
      InitMessageOrBuilder {
    private InitMessage() {
      myLastSessionId_ = com.google.protobuf.ByteString.EMPTY;
      authServerPassword_ = "";
      nickName_ = "";
      clientUserData_ = com.google.protobuf.ByteString.EMPTY;
      avatarHash_ = com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * Protobuf enum {@code InitMessage.LoginType}
     */
    public enum LoginType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>guestLogin = 0;</code>
       */
      guestLogin(0),
      /**
       * <code>authenticatedLogin = 1;</code>
       */
      authenticatedLogin(1),
      /**
       * <code>unauthenticatedLogin = 2;</code>
       */
      unauthenticatedLogin(2),
      ;

      /**
       * <code>guestLogin = 0;</code>
       */
      public static final int guestLogin_VALUE = 0;
      /**
       * <code>authenticatedLogin = 1;</code>
       */
      public static final int authenticatedLogin_VALUE = 1;
      /**
       * <code>unauthenticatedLogin = 2;</code>
       */
      public static final int unauthenticatedLogin_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LoginType valueOf(int value) {
        return forNumber(value);
      }

      public static LoginType forNumber(int value) {
        switch (value) {
          case 0: return guestLogin;
          case 1: return authenticatedLogin;
          case 2: return unauthenticatedLogin;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LoginType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LoginType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LoginType>() {
              public LoginType findValueByNumber(int number) {
                return LoginType.forNumber(number);
              }
            };

      private final int value;

      private LoginType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:InitMessage.LoginType)
    }

    private int bitField0_;
    public static final int REQUESTEDVERSION_FIELD_NUMBER = 1;
    private de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version requestedVersion_;
    /**
     * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
     */
    public boolean hasRequestedVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version getRequestedVersion() {
      return requestedVersion_ == null ? de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.getDefaultInstance() : requestedVersion_;
    }
    /**
     * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
     */
    private void setRequestedVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
      if (value == null) {
        throw new NullPointerException();
      }
      requestedVersion_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
     */
    private void setRequestedVersion(
        de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.Builder builderForValue) {
      requestedVersion_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
     */
    private void mergeRequestedVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
      if (requestedVersion_ != null &&
          requestedVersion_ != de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.getDefaultInstance()) {
        requestedVersion_ =
          de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.newBuilder(requestedVersion_).mergeFrom(value).buildPartial();
      } else {
        requestedVersion_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
     */
    private void clearRequestedVersion() {  requestedVersion_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int BUILDID_FIELD_NUMBER = 2;
    private int buildId_;
    /**
     * <code>required uint32 buildId = 2;</code>
     */
    public boolean hasBuildId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 buildId = 2;</code>
     */
    public int getBuildId() {
      return buildId_;
    }
    /**
     * <code>required uint32 buildId = 2;</code>
     */
    private void setBuildId(int value) {
      bitField0_ |= 0x00000002;
      buildId_ = value;
    }
    /**
     * <code>required uint32 buildId = 2;</code>
     */
    private void clearBuildId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      buildId_ = 0;
    }

    public static final int MYLASTSESSIONID_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString myLastSessionId_;
    /**
     * <code>optional bytes myLastSessionId = 3;</code>
     */
    public boolean hasMyLastSessionId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes myLastSessionId = 3;</code>
     */
    public com.google.protobuf.ByteString getMyLastSessionId() {
      return myLastSessionId_;
    }
    /**
     * <code>optional bytes myLastSessionId = 3;</code>
     */
    private void setMyLastSessionId(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      myLastSessionId_ = value;
    }
    /**
     * <code>optional bytes myLastSessionId = 3;</code>
     */
    private void clearMyLastSessionId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      myLastSessionId_ = getDefaultInstance().getMyLastSessionId();
    }

    public static final int AUTHSERVERPASSWORD_FIELD_NUMBER = 4;
    private java.lang.String authServerPassword_;
    /**
     * <code>optional string authServerPassword = 4;</code>
     */
    public boolean hasAuthServerPassword() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string authServerPassword = 4;</code>
     */
    public java.lang.String getAuthServerPassword() {
      return authServerPassword_;
    }
    /**
     * <code>optional string authServerPassword = 4;</code>
     */
    public com.google.protobuf.ByteString
        getAuthServerPasswordBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(authServerPassword_);
    }
    /**
     * <code>optional string authServerPassword = 4;</code>
     */
    private void setAuthServerPassword(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      authServerPassword_ = value;
    }
    /**
     * <code>optional string authServerPassword = 4;</code>
     */
    private void clearAuthServerPassword() {
      bitField0_ = (bitField0_ & ~0x00000008);
      authServerPassword_ = getDefaultInstance().getAuthServerPassword();
    }
    /**
     * <code>optional string authServerPassword = 4;</code>
     */
    private void setAuthServerPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      authServerPassword_ = value.toStringUtf8();
    }

    public static final int LOGIN_FIELD_NUMBER = 5;
    private int login_;
    /**
     * <code>required .InitMessage.LoginType login = 5;</code>
     */
    public boolean hasLogin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .InitMessage.LoginType login = 5;</code>
     */
    public de.pokerth.protocol.ProtoBuf.InitMessage.LoginType getLogin() {
      de.pokerth.protocol.ProtoBuf.InitMessage.LoginType result = de.pokerth.protocol.ProtoBuf.InitMessage.LoginType.forNumber(login_);
      return result == null ? de.pokerth.protocol.ProtoBuf.InitMessage.LoginType.guestLogin : result;
    }
    /**
     * <code>required .InitMessage.LoginType login = 5;</code>
     */
    private void setLogin(de.pokerth.protocol.ProtoBuf.InitMessage.LoginType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      login_ = value.getNumber();
    }
    /**
     * <code>required .InitMessage.LoginType login = 5;</code>
     */
    private void clearLogin() {
      bitField0_ = (bitField0_ & ~0x00000010);
      login_ = 0;
    }

    public static final int NICKNAME_FIELD_NUMBER = 6;
    private java.lang.String nickName_;
    /**
     * <pre>
     * Only used for guest login or unauthenticated login.
     * </pre>
     *
     * <code>optional string nickName = 6;</code>
     */
    public boolean hasNickName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Only used for guest login or unauthenticated login.
     * </pre>
     *
     * <code>optional string nickName = 6;</code>
     */
    public java.lang.String getNickName() {
      return nickName_;
    }
    /**
     * <pre>
     * Only used for guest login or unauthenticated login.
     * </pre>
     *
     * <code>optional string nickName = 6;</code>
     */
    public com.google.protobuf.ByteString
        getNickNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(nickName_);
    }
    /**
     * <pre>
     * Only used for guest login or unauthenticated login.
     * </pre>
     *
     * <code>optional string nickName = 6;</code>
     */
    private void setNickName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      nickName_ = value;
    }
    /**
     * <pre>
     * Only used for guest login or unauthenticated login.
     * </pre>
     *
     * <code>optional string nickName = 6;</code>
     */
    private void clearNickName() {
      bitField0_ = (bitField0_ & ~0x00000020);
      nickName_ = getDefaultInstance().getNickName();
    }
    /**
     * <pre>
     * Only used for guest login or unauthenticated login.
     * </pre>
     *
     * <code>optional string nickName = 6;</code>
     */
    private void setNickNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      nickName_ = value.toStringUtf8();
    }

    public static final int CLIENTUSERDATA_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString clientUserData_;
    /**
     * <pre>
     * Authenticated login data is according to SCRAM SHA-1
     * </pre>
     *
     * <code>optional bytes clientUserData = 7;</code>
     */
    public boolean hasClientUserData() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Authenticated login data is according to SCRAM SHA-1
     * </pre>
     *
     * <code>optional bytes clientUserData = 7;</code>
     */
    public com.google.protobuf.ByteString getClientUserData() {
      return clientUserData_;
    }
    /**
     * <pre>
     * Authenticated login data is according to SCRAM SHA-1
     * </pre>
     *
     * <code>optional bytes clientUserData = 7;</code>
     */
    private void setClientUserData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      clientUserData_ = value;
    }
    /**
     * <pre>
     * Authenticated login data is according to SCRAM SHA-1
     * </pre>
     *
     * <code>optional bytes clientUserData = 7;</code>
     */
    private void clearClientUserData() {
      bitField0_ = (bitField0_ & ~0x00000040);
      clientUserData_ = getDefaultInstance().getClientUserData();
    }

    public static final int AVATARHASH_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString avatarHash_;
    /**
     * <pre>
     * Ignored for guest login.
     * </pre>
     *
     * <code>optional bytes avatarHash = 8;</code>
     */
    public boolean hasAvatarHash() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Ignored for guest login.
     * </pre>
     *
     * <code>optional bytes avatarHash = 8;</code>
     */
    public com.google.protobuf.ByteString getAvatarHash() {
      return avatarHash_;
    }
    /**
     * <pre>
     * Ignored for guest login.
     * </pre>
     *
     * <code>optional bytes avatarHash = 8;</code>
     */
    private void setAvatarHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
      avatarHash_ = value;
    }
    /**
     * <pre>
     * Ignored for guest login.
     * </pre>
     *
     * <code>optional bytes avatarHash = 8;</code>
     */
    private void clearAvatarHash() {
      bitField0_ = (bitField0_ & ~0x00000080);
      avatarHash_ = getDefaultInstance().getAvatarHash();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getRequestedVersion());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, buildId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, myLastSessionId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getAuthServerPassword());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, login_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(6, getNickName());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, clientUserData_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, avatarHash_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRequestedVersion());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, buildId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, myLastSessionId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getAuthServerPassword());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, login_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getNickName());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, clientUserData_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, avatarHash_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.InitMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.InitMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InitMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.InitMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InitMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InitMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InitMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InitMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InitMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InitMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.InitMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * buildId contains a constant build id (specific for Windows/Linux/Mac builds)
     * </pre>
     *
     * Protobuf type {@code InitMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.InitMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:InitMessage)
        de.pokerth.protocol.ProtoBuf.InitMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.InitMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
       */
      public boolean hasRequestedVersion() {
        return instance.hasRequestedVersion();
      }
      /**
       * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version getRequestedVersion() {
        return instance.getRequestedVersion();
      }
      /**
       * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
       */
      public Builder setRequestedVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
        copyOnWrite();
        instance.setRequestedVersion(value);
        return this;
        }
      /**
       * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
       */
      public Builder setRequestedVersion(
          de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.Builder builderForValue) {
        copyOnWrite();
        instance.setRequestedVersion(builderForValue);
        return this;
      }
      /**
       * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
       */
      public Builder mergeRequestedVersion(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version value) {
        copyOnWrite();
        instance.mergeRequestedVersion(value);
        return this;
      }
      /**
       * <code>required .AnnounceMessage.Version requestedVersion = 1;</code>
       */
      public Builder clearRequestedVersion() {  copyOnWrite();
        instance.clearRequestedVersion();
        return this;
      }

      /**
       * <code>required uint32 buildId = 2;</code>
       */
      public boolean hasBuildId() {
        return instance.hasBuildId();
      }
      /**
       * <code>required uint32 buildId = 2;</code>
       */
      public int getBuildId() {
        return instance.getBuildId();
      }
      /**
       * <code>required uint32 buildId = 2;</code>
       */
      public Builder setBuildId(int value) {
        copyOnWrite();
        instance.setBuildId(value);
        return this;
      }
      /**
       * <code>required uint32 buildId = 2;</code>
       */
      public Builder clearBuildId() {
        copyOnWrite();
        instance.clearBuildId();
        return this;
      }

      /**
       * <code>optional bytes myLastSessionId = 3;</code>
       */
      public boolean hasMyLastSessionId() {
        return instance.hasMyLastSessionId();
      }
      /**
       * <code>optional bytes myLastSessionId = 3;</code>
       */
      public com.google.protobuf.ByteString getMyLastSessionId() {
        return instance.getMyLastSessionId();
      }
      /**
       * <code>optional bytes myLastSessionId = 3;</code>
       */
      public Builder setMyLastSessionId(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMyLastSessionId(value);
        return this;
      }
      /**
       * <code>optional bytes myLastSessionId = 3;</code>
       */
      public Builder clearMyLastSessionId() {
        copyOnWrite();
        instance.clearMyLastSessionId();
        return this;
      }

      /**
       * <code>optional string authServerPassword = 4;</code>
       */
      public boolean hasAuthServerPassword() {
        return instance.hasAuthServerPassword();
      }
      /**
       * <code>optional string authServerPassword = 4;</code>
       */
      public java.lang.String getAuthServerPassword() {
        return instance.getAuthServerPassword();
      }
      /**
       * <code>optional string authServerPassword = 4;</code>
       */
      public com.google.protobuf.ByteString
          getAuthServerPasswordBytes() {
        return instance.getAuthServerPasswordBytes();
      }
      /**
       * <code>optional string authServerPassword = 4;</code>
       */
      public Builder setAuthServerPassword(
          java.lang.String value) {
        copyOnWrite();
        instance.setAuthServerPassword(value);
        return this;
      }
      /**
       * <code>optional string authServerPassword = 4;</code>
       */
      public Builder clearAuthServerPassword() {
        copyOnWrite();
        instance.clearAuthServerPassword();
        return this;
      }
      /**
       * <code>optional string authServerPassword = 4;</code>
       */
      public Builder setAuthServerPasswordBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAuthServerPasswordBytes(value);
        return this;
      }

      /**
       * <code>required .InitMessage.LoginType login = 5;</code>
       */
      public boolean hasLogin() {
        return instance.hasLogin();
      }
      /**
       * <code>required .InitMessage.LoginType login = 5;</code>
       */
      public de.pokerth.protocol.ProtoBuf.InitMessage.LoginType getLogin() {
        return instance.getLogin();
      }
      /**
       * <code>required .InitMessage.LoginType login = 5;</code>
       */
      public Builder setLogin(de.pokerth.protocol.ProtoBuf.InitMessage.LoginType value) {
        copyOnWrite();
        instance.setLogin(value);
        return this;
      }
      /**
       * <code>required .InitMessage.LoginType login = 5;</code>
       */
      public Builder clearLogin() {
        copyOnWrite();
        instance.clearLogin();
        return this;
      }

      /**
       * <pre>
       * Only used for guest login or unauthenticated login.
       * </pre>
       *
       * <code>optional string nickName = 6;</code>
       */
      public boolean hasNickName() {
        return instance.hasNickName();
      }
      /**
       * <pre>
       * Only used for guest login or unauthenticated login.
       * </pre>
       *
       * <code>optional string nickName = 6;</code>
       */
      public java.lang.String getNickName() {
        return instance.getNickName();
      }
      /**
       * <pre>
       * Only used for guest login or unauthenticated login.
       * </pre>
       *
       * <code>optional string nickName = 6;</code>
       */
      public com.google.protobuf.ByteString
          getNickNameBytes() {
        return instance.getNickNameBytes();
      }
      /**
       * <pre>
       * Only used for guest login or unauthenticated login.
       * </pre>
       *
       * <code>optional string nickName = 6;</code>
       */
      public Builder setNickName(
          java.lang.String value) {
        copyOnWrite();
        instance.setNickName(value);
        return this;
      }
      /**
       * <pre>
       * Only used for guest login or unauthenticated login.
       * </pre>
       *
       * <code>optional string nickName = 6;</code>
       */
      public Builder clearNickName() {
        copyOnWrite();
        instance.clearNickName();
        return this;
      }
      /**
       * <pre>
       * Only used for guest login or unauthenticated login.
       * </pre>
       *
       * <code>optional string nickName = 6;</code>
       */
      public Builder setNickNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNickNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * Authenticated login data is according to SCRAM SHA-1
       * </pre>
       *
       * <code>optional bytes clientUserData = 7;</code>
       */
      public boolean hasClientUserData() {
        return instance.hasClientUserData();
      }
      /**
       * <pre>
       * Authenticated login data is according to SCRAM SHA-1
       * </pre>
       *
       * <code>optional bytes clientUserData = 7;</code>
       */
      public com.google.protobuf.ByteString getClientUserData() {
        return instance.getClientUserData();
      }
      /**
       * <pre>
       * Authenticated login data is according to SCRAM SHA-1
       * </pre>
       *
       * <code>optional bytes clientUserData = 7;</code>
       */
      public Builder setClientUserData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setClientUserData(value);
        return this;
      }
      /**
       * <pre>
       * Authenticated login data is according to SCRAM SHA-1
       * </pre>
       *
       * <code>optional bytes clientUserData = 7;</code>
       */
      public Builder clearClientUserData() {
        copyOnWrite();
        instance.clearClientUserData();
        return this;
      }

      /**
       * <pre>
       * Ignored for guest login.
       * </pre>
       *
       * <code>optional bytes avatarHash = 8;</code>
       */
      public boolean hasAvatarHash() {
        return instance.hasAvatarHash();
      }
      /**
       * <pre>
       * Ignored for guest login.
       * </pre>
       *
       * <code>optional bytes avatarHash = 8;</code>
       */
      public com.google.protobuf.ByteString getAvatarHash() {
        return instance.getAvatarHash();
      }
      /**
       * <pre>
       * Ignored for guest login.
       * </pre>
       *
       * <code>optional bytes avatarHash = 8;</code>
       */
      public Builder setAvatarHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAvatarHash(value);
        return this;
      }
      /**
       * <pre>
       * Ignored for guest login.
       * </pre>
       *
       * <code>optional bytes avatarHash = 8;</code>
       */
      public Builder clearAvatarHash() {
        copyOnWrite();
        instance.clearAvatarHash();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:InitMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.InitMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRequestedVersion()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasBuildId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasLogin()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getRequestedVersion().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.InitMessage other = (de.pokerth.protocol.ProtoBuf.InitMessage) arg1;
          requestedVersion_ = visitor.visitMessage(requestedVersion_, other.requestedVersion_);
          buildId_ = visitor.visitInt(
              hasBuildId(), buildId_,
              other.hasBuildId(), other.buildId_);
          myLastSessionId_ = visitor.visitByteString(
              hasMyLastSessionId(), myLastSessionId_,
              other.hasMyLastSessionId(), other.myLastSessionId_);
          authServerPassword_ = visitor.visitString(
              hasAuthServerPassword(), authServerPassword_,
              other.hasAuthServerPassword(), other.authServerPassword_);
          login_ = visitor.visitInt(hasLogin(), login_,
              other.hasLogin(), other.login_);
          nickName_ = visitor.visitString(
              hasNickName(), nickName_,
              other.hasNickName(), other.nickName_);
          clientUserData_ = visitor.visitByteString(
              hasClientUserData(), clientUserData_,
              other.hasClientUserData(), other.clientUserData_);
          avatarHash_ = visitor.visitByteString(
              hasAvatarHash(), avatarHash_,
              other.hasAvatarHash(), other.avatarHash_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = requestedVersion_.toBuilder();
                  }
                  requestedVersion_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AnnounceMessage.Version.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(requestedVersion_);
                    requestedVersion_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  buildId_ = input.readUInt32();
                  break;
                }
                case 26: {
                  bitField0_ |= 0x00000004;
                  myLastSessionId_ = input.readBytes();
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  authServerPassword_ = s;
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.InitMessage.LoginType value = de.pokerth.protocol.ProtoBuf.InitMessage.LoginType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(5, rawValue);
                  } else {
                    bitField0_ |= 0x00000010;
                    login_ = rawValue;
                  }
                  break;
                }
                case 50: {
                  String s = input.readString();
                  bitField0_ |= 0x00000020;
                  nickName_ = s;
                  break;
                }
                case 58: {
                  bitField0_ |= 0x00000040;
                  clientUserData_ = input.readBytes();
                  break;
                }
                case 66: {
                  bitField0_ |= 0x00000080;
                  avatarHash_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.InitMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:InitMessage)
    private static final de.pokerth.protocol.ProtoBuf.InitMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new InitMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.InitMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<InitMessage> PARSER;

    public static com.google.protobuf.Parser<InitMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AuthServerChallengeMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AuthServerChallengeMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required bytes serverChallenge = 1;</code>
     */
    boolean hasServerChallenge();
    /**
     * <code>required bytes serverChallenge = 1;</code>
     */
    com.google.protobuf.ByteString getServerChallenge();
  }
  /**
   * Protobuf type {@code AuthServerChallengeMessage}
   */
  public  static final class AuthServerChallengeMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AuthServerChallengeMessage, AuthServerChallengeMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AuthServerChallengeMessage)
      AuthServerChallengeMessageOrBuilder {
    private AuthServerChallengeMessage() {
      serverChallenge_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int SERVERCHALLENGE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString serverChallenge_;
    /**
     * <code>required bytes serverChallenge = 1;</code>
     */
    public boolean hasServerChallenge() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes serverChallenge = 1;</code>
     */
    public com.google.protobuf.ByteString getServerChallenge() {
      return serverChallenge_;
    }
    /**
     * <code>required bytes serverChallenge = 1;</code>
     */
    private void setServerChallenge(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      serverChallenge_ = value;
    }
    /**
     * <code>required bytes serverChallenge = 1;</code>
     */
    private void clearServerChallenge() {
      bitField0_ = (bitField0_ & ~0x00000001);
      serverChallenge_ = getDefaultInstance().getServerChallenge();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, serverChallenge_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, serverChallenge_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AuthServerChallengeMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AuthServerChallengeMessage)
        de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required bytes serverChallenge = 1;</code>
       */
      public boolean hasServerChallenge() {
        return instance.hasServerChallenge();
      }
      /**
       * <code>required bytes serverChallenge = 1;</code>
       */
      public com.google.protobuf.ByteString getServerChallenge() {
        return instance.getServerChallenge();
      }
      /**
       * <code>required bytes serverChallenge = 1;</code>
       */
      public Builder setServerChallenge(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setServerChallenge(value);
        return this;
      }
      /**
       * <code>required bytes serverChallenge = 1;</code>
       */
      public Builder clearServerChallenge() {
        copyOnWrite();
        instance.clearServerChallenge();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AuthServerChallengeMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasServerChallenge()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage other = (de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage) arg1;
          serverChallenge_ = visitor.visitByteString(
              hasServerChallenge(), serverChallenge_,
              other.hasServerChallenge(), other.serverChallenge_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  bitField0_ |= 0x00000001;
                  serverChallenge_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AuthServerChallengeMessage)
    private static final de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AuthServerChallengeMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AuthServerChallengeMessage> PARSER;

    public static com.google.protobuf.Parser<AuthServerChallengeMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AuthClientResponseMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AuthClientResponseMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required bytes clientResponse = 1;</code>
     */
    boolean hasClientResponse();
    /**
     * <code>required bytes clientResponse = 1;</code>
     */
    com.google.protobuf.ByteString getClientResponse();
  }
  /**
   * Protobuf type {@code AuthClientResponseMessage}
   */
  public  static final class AuthClientResponseMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AuthClientResponseMessage, AuthClientResponseMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AuthClientResponseMessage)
      AuthClientResponseMessageOrBuilder {
    private AuthClientResponseMessage() {
      clientResponse_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int CLIENTRESPONSE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString clientResponse_;
    /**
     * <code>required bytes clientResponse = 1;</code>
     */
    public boolean hasClientResponse() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes clientResponse = 1;</code>
     */
    public com.google.protobuf.ByteString getClientResponse() {
      return clientResponse_;
    }
    /**
     * <code>required bytes clientResponse = 1;</code>
     */
    private void setClientResponse(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      clientResponse_ = value;
    }
    /**
     * <code>required bytes clientResponse = 1;</code>
     */
    private void clearClientResponse() {
      bitField0_ = (bitField0_ & ~0x00000001);
      clientResponse_ = getDefaultInstance().getClientResponse();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, clientResponse_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, clientResponse_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AuthClientResponseMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AuthClientResponseMessage)
        de.pokerth.protocol.ProtoBuf.AuthClientResponseMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required bytes clientResponse = 1;</code>
       */
      public boolean hasClientResponse() {
        return instance.hasClientResponse();
      }
      /**
       * <code>required bytes clientResponse = 1;</code>
       */
      public com.google.protobuf.ByteString getClientResponse() {
        return instance.getClientResponse();
      }
      /**
       * <code>required bytes clientResponse = 1;</code>
       */
      public Builder setClientResponse(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setClientResponse(value);
        return this;
      }
      /**
       * <code>required bytes clientResponse = 1;</code>
       */
      public Builder clearClientResponse() {
        copyOnWrite();
        instance.clearClientResponse();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AuthClientResponseMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasClientResponse()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage other = (de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage) arg1;
          clientResponse_ = visitor.visitByteString(
              hasClientResponse(), clientResponse_,
              other.hasClientResponse(), other.clientResponse_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  bitField0_ |= 0x00000001;
                  clientResponse_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AuthClientResponseMessage)
    private static final de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AuthClientResponseMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AuthClientResponseMessage> PARSER;

    public static com.google.protobuf.Parser<AuthClientResponseMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AuthServerVerificationMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AuthServerVerificationMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required bytes serverVerification = 1;</code>
     */
    boolean hasServerVerification();
    /**
     * <code>required bytes serverVerification = 1;</code>
     */
    com.google.protobuf.ByteString getServerVerification();
  }
  /**
   * Protobuf type {@code AuthServerVerificationMessage}
   */
  public  static final class AuthServerVerificationMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AuthServerVerificationMessage, AuthServerVerificationMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AuthServerVerificationMessage)
      AuthServerVerificationMessageOrBuilder {
    private AuthServerVerificationMessage() {
      serverVerification_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int SERVERVERIFICATION_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString serverVerification_;
    /**
     * <code>required bytes serverVerification = 1;</code>
     */
    public boolean hasServerVerification() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes serverVerification = 1;</code>
     */
    public com.google.protobuf.ByteString getServerVerification() {
      return serverVerification_;
    }
    /**
     * <code>required bytes serverVerification = 1;</code>
     */
    private void setServerVerification(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      serverVerification_ = value;
    }
    /**
     * <code>required bytes serverVerification = 1;</code>
     */
    private void clearServerVerification() {
      bitField0_ = (bitField0_ & ~0x00000001);
      serverVerification_ = getDefaultInstance().getServerVerification();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, serverVerification_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, serverVerification_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AuthServerVerificationMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AuthServerVerificationMessage)
        de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required bytes serverVerification = 1;</code>
       */
      public boolean hasServerVerification() {
        return instance.hasServerVerification();
      }
      /**
       * <code>required bytes serverVerification = 1;</code>
       */
      public com.google.protobuf.ByteString getServerVerification() {
        return instance.getServerVerification();
      }
      /**
       * <code>required bytes serverVerification = 1;</code>
       */
      public Builder setServerVerification(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setServerVerification(value);
        return this;
      }
      /**
       * <code>required bytes serverVerification = 1;</code>
       */
      public Builder clearServerVerification() {
        copyOnWrite();
        instance.clearServerVerification();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AuthServerVerificationMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasServerVerification()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage other = (de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage) arg1;
          serverVerification_ = visitor.visitByteString(
              hasServerVerification(), serverVerification_,
              other.hasServerVerification(), other.serverVerification_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  bitField0_ |= 0x00000001;
                  serverVerification_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AuthServerVerificationMessage)
    private static final de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AuthServerVerificationMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AuthServerVerificationMessage> PARSER;

    public static com.google.protobuf.Parser<AuthServerVerificationMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface InitAckMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:InitAckMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required bytes yourSessionId = 1;</code>
     */
    boolean hasYourSessionId();
    /**
     * <code>required bytes yourSessionId = 1;</code>
     */
    com.google.protobuf.ByteString getYourSessionId();

    /**
     * <code>required uint32 yourPlayerId = 2;</code>
     */
    boolean hasYourPlayerId();
    /**
     * <code>required uint32 yourPlayerId = 2;</code>
     */
    int getYourPlayerId();

    /**
     * <code>optional bytes yourAvatarHash = 3;</code>
     */
    boolean hasYourAvatarHash();
    /**
     * <code>optional bytes yourAvatarHash = 3;</code>
     */
    com.google.protobuf.ByteString getYourAvatarHash();

    /**
     * <code>optional uint32 rejoinGameId = 4;</code>
     */
    boolean hasRejoinGameId();
    /**
     * <code>optional uint32 rejoinGameId = 4;</code>
     */
    int getRejoinGameId();
  }
  /**
   * Protobuf type {@code InitAckMessage}
   */
  public  static final class InitAckMessage extends
      com.google.protobuf.GeneratedMessageLite<
          InitAckMessage, InitAckMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:InitAckMessage)
      InitAckMessageOrBuilder {
    private InitAckMessage() {
      yourSessionId_ = com.google.protobuf.ByteString.EMPTY;
      yourAvatarHash_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int YOURSESSIONID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString yourSessionId_;
    /**
     * <code>required bytes yourSessionId = 1;</code>
     */
    public boolean hasYourSessionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes yourSessionId = 1;</code>
     */
    public com.google.protobuf.ByteString getYourSessionId() {
      return yourSessionId_;
    }
    /**
     * <code>required bytes yourSessionId = 1;</code>
     */
    private void setYourSessionId(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      yourSessionId_ = value;
    }
    /**
     * <code>required bytes yourSessionId = 1;</code>
     */
    private void clearYourSessionId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      yourSessionId_ = getDefaultInstance().getYourSessionId();
    }

    public static final int YOURPLAYERID_FIELD_NUMBER = 2;
    private int yourPlayerId_;
    /**
     * <code>required uint32 yourPlayerId = 2;</code>
     */
    public boolean hasYourPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 yourPlayerId = 2;</code>
     */
    public int getYourPlayerId() {
      return yourPlayerId_;
    }
    /**
     * <code>required uint32 yourPlayerId = 2;</code>
     */
    private void setYourPlayerId(int value) {
      bitField0_ |= 0x00000002;
      yourPlayerId_ = value;
    }
    /**
     * <code>required uint32 yourPlayerId = 2;</code>
     */
    private void clearYourPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      yourPlayerId_ = 0;
    }

    public static final int YOURAVATARHASH_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString yourAvatarHash_;
    /**
     * <code>optional bytes yourAvatarHash = 3;</code>
     */
    public boolean hasYourAvatarHash() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes yourAvatarHash = 3;</code>
     */
    public com.google.protobuf.ByteString getYourAvatarHash() {
      return yourAvatarHash_;
    }
    /**
     * <code>optional bytes yourAvatarHash = 3;</code>
     */
    private void setYourAvatarHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      yourAvatarHash_ = value;
    }
    /**
     * <code>optional bytes yourAvatarHash = 3;</code>
     */
    private void clearYourAvatarHash() {
      bitField0_ = (bitField0_ & ~0x00000004);
      yourAvatarHash_ = getDefaultInstance().getYourAvatarHash();
    }

    public static final int REJOINGAMEID_FIELD_NUMBER = 4;
    private int rejoinGameId_;
    /**
     * <code>optional uint32 rejoinGameId = 4;</code>
     */
    public boolean hasRejoinGameId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 rejoinGameId = 4;</code>
     */
    public int getRejoinGameId() {
      return rejoinGameId_;
    }
    /**
     * <code>optional uint32 rejoinGameId = 4;</code>
     */
    private void setRejoinGameId(int value) {
      bitField0_ |= 0x00000008;
      rejoinGameId_ = value;
    }
    /**
     * <code>optional uint32 rejoinGameId = 4;</code>
     */
    private void clearRejoinGameId() {
      bitField0_ = (bitField0_ & ~0x00000008);
      rejoinGameId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, yourSessionId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, yourPlayerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, yourAvatarHash_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, rejoinGameId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, yourSessionId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, yourPlayerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, yourAvatarHash_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, rejoinGameId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.InitAckMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.InitAckMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InitAckMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.InitAckMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InitAckMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InitAckMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InitAckMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InitAckMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InitAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InitAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.InitAckMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code InitAckMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.InitAckMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:InitAckMessage)
        de.pokerth.protocol.ProtoBuf.InitAckMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.InitAckMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required bytes yourSessionId = 1;</code>
       */
      public boolean hasYourSessionId() {
        return instance.hasYourSessionId();
      }
      /**
       * <code>required bytes yourSessionId = 1;</code>
       */
      public com.google.protobuf.ByteString getYourSessionId() {
        return instance.getYourSessionId();
      }
      /**
       * <code>required bytes yourSessionId = 1;</code>
       */
      public Builder setYourSessionId(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setYourSessionId(value);
        return this;
      }
      /**
       * <code>required bytes yourSessionId = 1;</code>
       */
      public Builder clearYourSessionId() {
        copyOnWrite();
        instance.clearYourSessionId();
        return this;
      }

      /**
       * <code>required uint32 yourPlayerId = 2;</code>
       */
      public boolean hasYourPlayerId() {
        return instance.hasYourPlayerId();
      }
      /**
       * <code>required uint32 yourPlayerId = 2;</code>
       */
      public int getYourPlayerId() {
        return instance.getYourPlayerId();
      }
      /**
       * <code>required uint32 yourPlayerId = 2;</code>
       */
      public Builder setYourPlayerId(int value) {
        copyOnWrite();
        instance.setYourPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 yourPlayerId = 2;</code>
       */
      public Builder clearYourPlayerId() {
        copyOnWrite();
        instance.clearYourPlayerId();
        return this;
      }

      /**
       * <code>optional bytes yourAvatarHash = 3;</code>
       */
      public boolean hasYourAvatarHash() {
        return instance.hasYourAvatarHash();
      }
      /**
       * <code>optional bytes yourAvatarHash = 3;</code>
       */
      public com.google.protobuf.ByteString getYourAvatarHash() {
        return instance.getYourAvatarHash();
      }
      /**
       * <code>optional bytes yourAvatarHash = 3;</code>
       */
      public Builder setYourAvatarHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setYourAvatarHash(value);
        return this;
      }
      /**
       * <code>optional bytes yourAvatarHash = 3;</code>
       */
      public Builder clearYourAvatarHash() {
        copyOnWrite();
        instance.clearYourAvatarHash();
        return this;
      }

      /**
       * <code>optional uint32 rejoinGameId = 4;</code>
       */
      public boolean hasRejoinGameId() {
        return instance.hasRejoinGameId();
      }
      /**
       * <code>optional uint32 rejoinGameId = 4;</code>
       */
      public int getRejoinGameId() {
        return instance.getRejoinGameId();
      }
      /**
       * <code>optional uint32 rejoinGameId = 4;</code>
       */
      public Builder setRejoinGameId(int value) {
        copyOnWrite();
        instance.setRejoinGameId(value);
        return this;
      }
      /**
       * <code>optional uint32 rejoinGameId = 4;</code>
       */
      public Builder clearRejoinGameId() {
        copyOnWrite();
        instance.clearRejoinGameId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:InitAckMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.InitAckMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasYourSessionId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasYourPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.InitAckMessage other = (de.pokerth.protocol.ProtoBuf.InitAckMessage) arg1;
          yourSessionId_ = visitor.visitByteString(
              hasYourSessionId(), yourSessionId_,
              other.hasYourSessionId(), other.yourSessionId_);
          yourPlayerId_ = visitor.visitInt(
              hasYourPlayerId(), yourPlayerId_,
              other.hasYourPlayerId(), other.yourPlayerId_);
          yourAvatarHash_ = visitor.visitByteString(
              hasYourAvatarHash(), yourAvatarHash_,
              other.hasYourAvatarHash(), other.yourAvatarHash_);
          rejoinGameId_ = visitor.visitInt(
              hasRejoinGameId(), rejoinGameId_,
              other.hasRejoinGameId(), other.rejoinGameId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  bitField0_ |= 0x00000001;
                  yourSessionId_ = input.readBytes();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  yourPlayerId_ = input.readUInt32();
                  break;
                }
                case 26: {
                  bitField0_ |= 0x00000004;
                  yourAvatarHash_ = input.readBytes();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  rejoinGameId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.InitAckMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:InitAckMessage)
    private static final de.pokerth.protocol.ProtoBuf.InitAckMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new InitAckMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.InitAckMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<InitAckMessage> PARSER;

    public static com.google.protobuf.Parser<InitAckMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AvatarRequestMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AvatarRequestMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 requestId = 1;</code>
     */
    boolean hasRequestId();
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    int getRequestId();

    /**
     * <code>required bytes avatarHash = 2;</code>
     */
    boolean hasAvatarHash();
    /**
     * <code>required bytes avatarHash = 2;</code>
     */
    com.google.protobuf.ByteString getAvatarHash();
  }
  /**
   * Protobuf type {@code AvatarRequestMessage}
   */
  public  static final class AvatarRequestMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AvatarRequestMessage, AvatarRequestMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AvatarRequestMessage)
      AvatarRequestMessageOrBuilder {
    private AvatarRequestMessage() {
      avatarHash_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int REQUESTID_FIELD_NUMBER = 1;
    private int requestId_;
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    public boolean hasRequestId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    public int getRequestId() {
      return requestId_;
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    private void setRequestId(int value) {
      bitField0_ |= 0x00000001;
      requestId_ = value;
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    private void clearRequestId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      requestId_ = 0;
    }

    public static final int AVATARHASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString avatarHash_;
    /**
     * <code>required bytes avatarHash = 2;</code>
     */
    public boolean hasAvatarHash() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes avatarHash = 2;</code>
     */
    public com.google.protobuf.ByteString getAvatarHash() {
      return avatarHash_;
    }
    /**
     * <code>required bytes avatarHash = 2;</code>
     */
    private void setAvatarHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      avatarHash_ = value;
    }
    /**
     * <code>required bytes avatarHash = 2;</code>
     */
    private void clearAvatarHash() {
      bitField0_ = (bitField0_ & ~0x00000002);
      avatarHash_ = getDefaultInstance().getAvatarHash();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, requestId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, avatarHash_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, requestId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, avatarHash_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AvatarRequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarRequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarRequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarRequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarRequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarRequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarRequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarRequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AvatarRequestMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AvatarRequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AvatarRequestMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AvatarRequestMessage)
        de.pokerth.protocol.ProtoBuf.AvatarRequestMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AvatarRequestMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public boolean hasRequestId() {
        return instance.hasRequestId();
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public int getRequestId() {
        return instance.getRequestId();
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public Builder setRequestId(int value) {
        copyOnWrite();
        instance.setRequestId(value);
        return this;
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public Builder clearRequestId() {
        copyOnWrite();
        instance.clearRequestId();
        return this;
      }

      /**
       * <code>required bytes avatarHash = 2;</code>
       */
      public boolean hasAvatarHash() {
        return instance.hasAvatarHash();
      }
      /**
       * <code>required bytes avatarHash = 2;</code>
       */
      public com.google.protobuf.ByteString getAvatarHash() {
        return instance.getAvatarHash();
      }
      /**
       * <code>required bytes avatarHash = 2;</code>
       */
      public Builder setAvatarHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAvatarHash(value);
        return this;
      }
      /**
       * <code>required bytes avatarHash = 2;</code>
       */
      public Builder clearAvatarHash() {
        copyOnWrite();
        instance.clearAvatarHash();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AvatarRequestMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AvatarRequestMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRequestId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAvatarHash()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AvatarRequestMessage other = (de.pokerth.protocol.ProtoBuf.AvatarRequestMessage) arg1;
          requestId_ = visitor.visitInt(
              hasRequestId(), requestId_,
              other.hasRequestId(), other.requestId_);
          avatarHash_ = visitor.visitByteString(
              hasAvatarHash(), avatarHash_,
              other.hasAvatarHash(), other.avatarHash_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  requestId_ = input.readUInt32();
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  avatarHash_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AvatarRequestMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AvatarRequestMessage)
    private static final de.pokerth.protocol.ProtoBuf.AvatarRequestMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AvatarRequestMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AvatarRequestMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AvatarRequestMessage> PARSER;

    public static com.google.protobuf.Parser<AvatarRequestMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AvatarHeaderMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AvatarHeaderMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 requestId = 1;</code>
     */
    boolean hasRequestId();
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    int getRequestId();

    /**
     * <code>required .NetAvatarType avatarType = 2;</code>
     */
    boolean hasAvatarType();
    /**
     * <code>required .NetAvatarType avatarType = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetAvatarType getAvatarType();

    /**
     * <code>required uint32 avatarSize = 3;</code>
     */
    boolean hasAvatarSize();
    /**
     * <code>required uint32 avatarSize = 3;</code>
     */
    int getAvatarSize();
  }
  /**
   * Protobuf type {@code AvatarHeaderMessage}
   */
  public  static final class AvatarHeaderMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AvatarHeaderMessage, AvatarHeaderMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AvatarHeaderMessage)
      AvatarHeaderMessageOrBuilder {
    private AvatarHeaderMessage() {
      avatarType_ = 1;
    }
    private int bitField0_;
    public static final int REQUESTID_FIELD_NUMBER = 1;
    private int requestId_;
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    public boolean hasRequestId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    public int getRequestId() {
      return requestId_;
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    private void setRequestId(int value) {
      bitField0_ |= 0x00000001;
      requestId_ = value;
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    private void clearRequestId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      requestId_ = 0;
    }

    public static final int AVATARTYPE_FIELD_NUMBER = 2;
    private int avatarType_;
    /**
     * <code>required .NetAvatarType avatarType = 2;</code>
     */
    public boolean hasAvatarType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .NetAvatarType avatarType = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetAvatarType getAvatarType() {
      de.pokerth.protocol.ProtoBuf.NetAvatarType result = de.pokerth.protocol.ProtoBuf.NetAvatarType.forNumber(avatarType_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetAvatarType.netAvatarImagePng : result;
    }
    /**
     * <code>required .NetAvatarType avatarType = 2;</code>
     */
    private void setAvatarType(de.pokerth.protocol.ProtoBuf.NetAvatarType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      avatarType_ = value.getNumber();
    }
    /**
     * <code>required .NetAvatarType avatarType = 2;</code>
     */
    private void clearAvatarType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      avatarType_ = 1;
    }

    public static final int AVATARSIZE_FIELD_NUMBER = 3;
    private int avatarSize_;
    /**
     * <code>required uint32 avatarSize = 3;</code>
     */
    public boolean hasAvatarSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 avatarSize = 3;</code>
     */
    public int getAvatarSize() {
      return avatarSize_;
    }
    /**
     * <code>required uint32 avatarSize = 3;</code>
     */
    private void setAvatarSize(int value) {
      bitField0_ |= 0x00000004;
      avatarSize_ = value;
    }
    /**
     * <code>required uint32 avatarSize = 3;</code>
     */
    private void clearAvatarSize() {
      bitField0_ = (bitField0_ & ~0x00000004);
      avatarSize_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, requestId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, avatarType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, avatarSize_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, requestId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, avatarType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, avatarSize_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AvatarHeaderMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AvatarHeaderMessage)
        de.pokerth.protocol.ProtoBuf.AvatarHeaderMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public boolean hasRequestId() {
        return instance.hasRequestId();
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public int getRequestId() {
        return instance.getRequestId();
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public Builder setRequestId(int value) {
        copyOnWrite();
        instance.setRequestId(value);
        return this;
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public Builder clearRequestId() {
        copyOnWrite();
        instance.clearRequestId();
        return this;
      }

      /**
       * <code>required .NetAvatarType avatarType = 2;</code>
       */
      public boolean hasAvatarType() {
        return instance.hasAvatarType();
      }
      /**
       * <code>required .NetAvatarType avatarType = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetAvatarType getAvatarType() {
        return instance.getAvatarType();
      }
      /**
       * <code>required .NetAvatarType avatarType = 2;</code>
       */
      public Builder setAvatarType(de.pokerth.protocol.ProtoBuf.NetAvatarType value) {
        copyOnWrite();
        instance.setAvatarType(value);
        return this;
      }
      /**
       * <code>required .NetAvatarType avatarType = 2;</code>
       */
      public Builder clearAvatarType() {
        copyOnWrite();
        instance.clearAvatarType();
        return this;
      }

      /**
       * <code>required uint32 avatarSize = 3;</code>
       */
      public boolean hasAvatarSize() {
        return instance.hasAvatarSize();
      }
      /**
       * <code>required uint32 avatarSize = 3;</code>
       */
      public int getAvatarSize() {
        return instance.getAvatarSize();
      }
      /**
       * <code>required uint32 avatarSize = 3;</code>
       */
      public Builder setAvatarSize(int value) {
        copyOnWrite();
        instance.setAvatarSize(value);
        return this;
      }
      /**
       * <code>required uint32 avatarSize = 3;</code>
       */
      public Builder clearAvatarSize() {
        copyOnWrite();
        instance.clearAvatarSize();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AvatarHeaderMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRequestId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAvatarType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAvatarSize()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage other = (de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage) arg1;
          requestId_ = visitor.visitInt(
              hasRequestId(), requestId_,
              other.hasRequestId(), other.requestId_);
          avatarType_ = visitor.visitInt(hasAvatarType(), avatarType_,
              other.hasAvatarType(), other.avatarType_);
          avatarSize_ = visitor.visitInt(
              hasAvatarSize(), avatarSize_,
              other.hasAvatarSize(), other.avatarSize_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  requestId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetAvatarType value = de.pokerth.protocol.ProtoBuf.NetAvatarType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    avatarType_ = rawValue;
                  }
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  avatarSize_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AvatarHeaderMessage)
    private static final de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AvatarHeaderMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AvatarHeaderMessage> PARSER;

    public static com.google.protobuf.Parser<AvatarHeaderMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AvatarDataMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AvatarDataMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 requestId = 1;</code>
     */
    boolean hasRequestId();
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    int getRequestId();

    /**
     * <code>required bytes avatarBlock = 2;</code>
     */
    boolean hasAvatarBlock();
    /**
     * <code>required bytes avatarBlock = 2;</code>
     */
    com.google.protobuf.ByteString getAvatarBlock();
  }
  /**
   * Protobuf type {@code AvatarDataMessage}
   */
  public  static final class AvatarDataMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AvatarDataMessage, AvatarDataMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AvatarDataMessage)
      AvatarDataMessageOrBuilder {
    private AvatarDataMessage() {
      avatarBlock_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int REQUESTID_FIELD_NUMBER = 1;
    private int requestId_;
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    public boolean hasRequestId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    public int getRequestId() {
      return requestId_;
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    private void setRequestId(int value) {
      bitField0_ |= 0x00000001;
      requestId_ = value;
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    private void clearRequestId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      requestId_ = 0;
    }

    public static final int AVATARBLOCK_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString avatarBlock_;
    /**
     * <code>required bytes avatarBlock = 2;</code>
     */
    public boolean hasAvatarBlock() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes avatarBlock = 2;</code>
     */
    public com.google.protobuf.ByteString getAvatarBlock() {
      return avatarBlock_;
    }
    /**
     * <code>required bytes avatarBlock = 2;</code>
     */
    private void setAvatarBlock(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      avatarBlock_ = value;
    }
    /**
     * <code>required bytes avatarBlock = 2;</code>
     */
    private void clearAvatarBlock() {
      bitField0_ = (bitField0_ & ~0x00000002);
      avatarBlock_ = getDefaultInstance().getAvatarBlock();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, requestId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, avatarBlock_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, requestId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, avatarBlock_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AvatarDataMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarDataMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarDataMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarDataMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarDataMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarDataMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarDataMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarDataMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarDataMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarDataMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AvatarDataMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AvatarDataMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AvatarDataMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AvatarDataMessage)
        de.pokerth.protocol.ProtoBuf.AvatarDataMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AvatarDataMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public boolean hasRequestId() {
        return instance.hasRequestId();
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public int getRequestId() {
        return instance.getRequestId();
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public Builder setRequestId(int value) {
        copyOnWrite();
        instance.setRequestId(value);
        return this;
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public Builder clearRequestId() {
        copyOnWrite();
        instance.clearRequestId();
        return this;
      }

      /**
       * <code>required bytes avatarBlock = 2;</code>
       */
      public boolean hasAvatarBlock() {
        return instance.hasAvatarBlock();
      }
      /**
       * <code>required bytes avatarBlock = 2;</code>
       */
      public com.google.protobuf.ByteString getAvatarBlock() {
        return instance.getAvatarBlock();
      }
      /**
       * <code>required bytes avatarBlock = 2;</code>
       */
      public Builder setAvatarBlock(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAvatarBlock(value);
        return this;
      }
      /**
       * <code>required bytes avatarBlock = 2;</code>
       */
      public Builder clearAvatarBlock() {
        copyOnWrite();
        instance.clearAvatarBlock();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AvatarDataMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AvatarDataMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRequestId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAvatarBlock()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AvatarDataMessage other = (de.pokerth.protocol.ProtoBuf.AvatarDataMessage) arg1;
          requestId_ = visitor.visitInt(
              hasRequestId(), requestId_,
              other.hasRequestId(), other.requestId_);
          avatarBlock_ = visitor.visitByteString(
              hasAvatarBlock(), avatarBlock_,
              other.hasAvatarBlock(), other.avatarBlock_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  requestId_ = input.readUInt32();
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  avatarBlock_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AvatarDataMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AvatarDataMessage)
    private static final de.pokerth.protocol.ProtoBuf.AvatarDataMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AvatarDataMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AvatarDataMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AvatarDataMessage> PARSER;

    public static com.google.protobuf.Parser<AvatarDataMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AvatarEndMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AvatarEndMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 requestId = 1;</code>
     */
    boolean hasRequestId();
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    int getRequestId();
  }
  /**
   * Protobuf type {@code AvatarEndMessage}
   */
  public  static final class AvatarEndMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AvatarEndMessage, AvatarEndMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AvatarEndMessage)
      AvatarEndMessageOrBuilder {
    private AvatarEndMessage() {
    }
    private int bitField0_;
    public static final int REQUESTID_FIELD_NUMBER = 1;
    private int requestId_;
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    public boolean hasRequestId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    public int getRequestId() {
      return requestId_;
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    private void setRequestId(int value) {
      bitField0_ |= 0x00000001;
      requestId_ = value;
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    private void clearRequestId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      requestId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, requestId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, requestId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AvatarEndMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarEndMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarEndMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarEndMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarEndMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarEndMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarEndMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarEndMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarEndMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AvatarEndMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AvatarEndMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AvatarEndMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AvatarEndMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AvatarEndMessage)
        de.pokerth.protocol.ProtoBuf.AvatarEndMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AvatarEndMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public boolean hasRequestId() {
        return instance.hasRequestId();
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public int getRequestId() {
        return instance.getRequestId();
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public Builder setRequestId(int value) {
        copyOnWrite();
        instance.setRequestId(value);
        return this;
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public Builder clearRequestId() {
        copyOnWrite();
        instance.clearRequestId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AvatarEndMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AvatarEndMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRequestId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AvatarEndMessage other = (de.pokerth.protocol.ProtoBuf.AvatarEndMessage) arg1;
          requestId_ = visitor.visitInt(
              hasRequestId(), requestId_,
              other.hasRequestId(), other.requestId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  requestId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AvatarEndMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AvatarEndMessage)
    private static final de.pokerth.protocol.ProtoBuf.AvatarEndMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AvatarEndMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AvatarEndMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AvatarEndMessage> PARSER;

    public static com.google.protobuf.Parser<AvatarEndMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UnknownAvatarMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UnknownAvatarMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 requestId = 1;</code>
     */
    boolean hasRequestId();
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    int getRequestId();
  }
  /**
   * Protobuf type {@code UnknownAvatarMessage}
   */
  public  static final class UnknownAvatarMessage extends
      com.google.protobuf.GeneratedMessageLite<
          UnknownAvatarMessage, UnknownAvatarMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:UnknownAvatarMessage)
      UnknownAvatarMessageOrBuilder {
    private UnknownAvatarMessage() {
    }
    private int bitField0_;
    public static final int REQUESTID_FIELD_NUMBER = 1;
    private int requestId_;
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    public boolean hasRequestId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    public int getRequestId() {
      return requestId_;
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    private void setRequestId(int value) {
      bitField0_ |= 0x00000001;
      requestId_ = value;
    }
    /**
     * <code>required uint32 requestId = 1;</code>
     */
    private void clearRequestId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      requestId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, requestId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, requestId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code UnknownAvatarMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:UnknownAvatarMessage)
        de.pokerth.protocol.ProtoBuf.UnknownAvatarMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public boolean hasRequestId() {
        return instance.hasRequestId();
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public int getRequestId() {
        return instance.getRequestId();
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public Builder setRequestId(int value) {
        copyOnWrite();
        instance.setRequestId(value);
        return this;
      }
      /**
       * <code>required uint32 requestId = 1;</code>
       */
      public Builder clearRequestId() {
        copyOnWrite();
        instance.clearRequestId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UnknownAvatarMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRequestId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage other = (de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage) arg1;
          requestId_ = visitor.visitInt(
              hasRequestId(), requestId_,
              other.hasRequestId(), other.requestId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  requestId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:UnknownAvatarMessage)
    private static final de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UnknownAvatarMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UnknownAvatarMessage> PARSER;

    public static com.google.protobuf.Parser<UnknownAvatarMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PlayerListMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayerListMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 playerId = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>required .PlayerListMessage.PlayerListNotification playerListNotification = 2;</code>
     */
    boolean hasPlayerListNotification();
    /**
     * <code>required .PlayerListMessage.PlayerListNotification playerListNotification = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.PlayerListMessage.PlayerListNotification getPlayerListNotification();
  }
  /**
   * Protobuf type {@code PlayerListMessage}
   */
  public  static final class PlayerListMessage extends
      com.google.protobuf.GeneratedMessageLite<
          PlayerListMessage, PlayerListMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:PlayerListMessage)
      PlayerListMessageOrBuilder {
    private PlayerListMessage() {
    }
    /**
     * Protobuf enum {@code PlayerListMessage.PlayerListNotification}
     */
    public enum PlayerListNotification
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>playerListNew = 0;</code>
       */
      playerListNew(0),
      /**
       * <code>playerListLeft = 1;</code>
       */
      playerListLeft(1),
      ;

      /**
       * <code>playerListNew = 0;</code>
       */
      public static final int playerListNew_VALUE = 0;
      /**
       * <code>playerListLeft = 1;</code>
       */
      public static final int playerListLeft_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PlayerListNotification valueOf(int value) {
        return forNumber(value);
      }

      public static PlayerListNotification forNumber(int value) {
        switch (value) {
          case 0: return playerListNew;
          case 1: return playerListLeft;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PlayerListNotification>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PlayerListNotification> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PlayerListNotification>() {
              public PlayerListNotification findValueByNumber(int number) {
                return PlayerListNotification.forNumber(number);
              }
            };

      private final int value;

      private PlayerListNotification(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:PlayerListMessage.PlayerListNotification)
    }

    private int bitField0_;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000001;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      playerId_ = 0;
    }

    public static final int PLAYERLISTNOTIFICATION_FIELD_NUMBER = 2;
    private int playerListNotification_;
    /**
     * <code>required .PlayerListMessage.PlayerListNotification playerListNotification = 2;</code>
     */
    public boolean hasPlayerListNotification() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .PlayerListMessage.PlayerListNotification playerListNotification = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PlayerListMessage.PlayerListNotification getPlayerListNotification() {
      de.pokerth.protocol.ProtoBuf.PlayerListMessage.PlayerListNotification result = de.pokerth.protocol.ProtoBuf.PlayerListMessage.PlayerListNotification.forNumber(playerListNotification_);
      return result == null ? de.pokerth.protocol.ProtoBuf.PlayerListMessage.PlayerListNotification.playerListNew : result;
    }
    /**
     * <code>required .PlayerListMessage.PlayerListNotification playerListNotification = 2;</code>
     */
    private void setPlayerListNotification(de.pokerth.protocol.ProtoBuf.PlayerListMessage.PlayerListNotification value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      playerListNotification_ = value.getNumber();
    }
    /**
     * <code>required .PlayerListMessage.PlayerListNotification playerListNotification = 2;</code>
     */
    private void clearPlayerListNotification() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerListNotification_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, playerListNotification_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, playerListNotification_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.PlayerListMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerListMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerListMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerListMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerListMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerListMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerListMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerListMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerListMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerListMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.PlayerListMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PlayerListMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.PlayerListMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayerListMessage)
        de.pokerth.protocol.ProtoBuf.PlayerListMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.PlayerListMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>required .PlayerListMessage.PlayerListNotification playerListNotification = 2;</code>
       */
      public boolean hasPlayerListNotification() {
        return instance.hasPlayerListNotification();
      }
      /**
       * <code>required .PlayerListMessage.PlayerListNotification playerListNotification = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PlayerListMessage.PlayerListNotification getPlayerListNotification() {
        return instance.getPlayerListNotification();
      }
      /**
       * <code>required .PlayerListMessage.PlayerListNotification playerListNotification = 2;</code>
       */
      public Builder setPlayerListNotification(de.pokerth.protocol.ProtoBuf.PlayerListMessage.PlayerListNotification value) {
        copyOnWrite();
        instance.setPlayerListNotification(value);
        return this;
      }
      /**
       * <code>required .PlayerListMessage.PlayerListNotification playerListNotification = 2;</code>
       */
      public Builder clearPlayerListNotification() {
        copyOnWrite();
        instance.clearPlayerListNotification();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerListMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.PlayerListMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerListNotification()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.PlayerListMessage other = (de.pokerth.protocol.ProtoBuf.PlayerListMessage) arg1;
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          playerListNotification_ = visitor.visitInt(hasPlayerListNotification(), playerListNotification_,
              other.hasPlayerListNotification(), other.playerListNotification_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.PlayerListMessage.PlayerListNotification value = de.pokerth.protocol.ProtoBuf.PlayerListMessage.PlayerListNotification.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    playerListNotification_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.PlayerListMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PlayerListMessage)
    private static final de.pokerth.protocol.ProtoBuf.PlayerListMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlayerListMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.PlayerListMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PlayerListMessage> PARSER;

    public static com.google.protobuf.Parser<PlayerListMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameListNewMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameListNewMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    boolean hasGameMode();
    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameMode getGameMode();

    /**
     * <code>required bool isPrivate = 3;</code>
     */
    boolean hasIsPrivate();
    /**
     * <code>required bool isPrivate = 3;</code>
     */
    boolean getIsPrivate();

    /**
     * <code>repeated uint32 playerIds = 4 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getPlayerIdsList();
    /**
     * <code>repeated uint32 playerIds = 4 [packed = true];</code>
     */
    int getPlayerIdsCount();
    /**
     * <code>repeated uint32 playerIds = 4 [packed = true];</code>
     */
    int getPlayerIds(int index);

    /**
     * <code>required uint32 adminPlayerId = 5;</code>
     */
    boolean hasAdminPlayerId();
    /**
     * <code>required uint32 adminPlayerId = 5;</code>
     */
    int getAdminPlayerId();

    /**
     * <code>required .NetGameInfo gameInfo = 6;</code>
     */
    boolean hasGameInfo();
    /**
     * <code>required .NetGameInfo gameInfo = 6;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameInfo getGameInfo();

    /**
     * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getSpectatorIdsList();
    /**
     * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
     */
    int getSpectatorIdsCount();
    /**
     * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
     */
    int getSpectatorIds(int index);
  }
  /**
   * Protobuf type {@code GameListNewMessage}
   */
  public  static final class GameListNewMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameListNewMessage, GameListNewMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameListNewMessage)
      GameListNewMessageOrBuilder {
    private GameListNewMessage() {
      gameMode_ = 1;
      playerIds_ = emptyIntList();
      spectatorIds_ = emptyIntList();
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int GAMEMODE_FIELD_NUMBER = 2;
    private int gameMode_;
    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    public boolean hasGameMode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameMode getGameMode() {
      de.pokerth.protocol.ProtoBuf.NetGameMode result = de.pokerth.protocol.ProtoBuf.NetGameMode.forNumber(gameMode_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetGameMode.netGameCreated : result;
    }
    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    private void setGameMode(de.pokerth.protocol.ProtoBuf.NetGameMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      gameMode_ = value.getNumber();
    }
    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    private void clearGameMode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      gameMode_ = 1;
    }

    public static final int ISPRIVATE_FIELD_NUMBER = 3;
    private boolean isPrivate_;
    /**
     * <code>required bool isPrivate = 3;</code>
     */
    public boolean hasIsPrivate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool isPrivate = 3;</code>
     */
    public boolean getIsPrivate() {
      return isPrivate_;
    }
    /**
     * <code>required bool isPrivate = 3;</code>
     */
    private void setIsPrivate(boolean value) {
      bitField0_ |= 0x00000004;
      isPrivate_ = value;
    }
    /**
     * <code>required bool isPrivate = 3;</code>
     */
    private void clearIsPrivate() {
      bitField0_ = (bitField0_ & ~0x00000004);
      isPrivate_ = false;
    }

    public static final int PLAYERIDS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList playerIds_;
    /**
     * <code>repeated uint32 playerIds = 4 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getPlayerIdsList() {
      return playerIds_;
    }
    /**
     * <code>repeated uint32 playerIds = 4 [packed = true];</code>
     */
    public int getPlayerIdsCount() {
      return playerIds_.size();
    }
    /**
     * <code>repeated uint32 playerIds = 4 [packed = true];</code>
     */
    public int getPlayerIds(int index) {
      return playerIds_.getInt(index);
    }
    private int playerIdsMemoizedSerializedSize = -1;
    private void ensurePlayerIdsIsMutable() {
      if (!playerIds_.isModifiable()) {
        playerIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(playerIds_);
       }
    }
    /**
     * <code>repeated uint32 playerIds = 4 [packed = true];</code>
     */
    private void setPlayerIds(
        int index, int value) {
      ensurePlayerIdsIsMutable();
      playerIds_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 playerIds = 4 [packed = true];</code>
     */
    private void addPlayerIds(int value) {
      ensurePlayerIdsIsMutable();
      playerIds_.addInt(value);
    }
    /**
     * <code>repeated uint32 playerIds = 4 [packed = true];</code>
     */
    private void addAllPlayerIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensurePlayerIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, playerIds_);
    }
    /**
     * <code>repeated uint32 playerIds = 4 [packed = true];</code>
     */
    private void clearPlayerIds() {
      playerIds_ = emptyIntList();
    }

    public static final int ADMINPLAYERID_FIELD_NUMBER = 5;
    private int adminPlayerId_;
    /**
     * <code>required uint32 adminPlayerId = 5;</code>
     */
    public boolean hasAdminPlayerId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 adminPlayerId = 5;</code>
     */
    public int getAdminPlayerId() {
      return adminPlayerId_;
    }
    /**
     * <code>required uint32 adminPlayerId = 5;</code>
     */
    private void setAdminPlayerId(int value) {
      bitField0_ |= 0x00000008;
      adminPlayerId_ = value;
    }
    /**
     * <code>required uint32 adminPlayerId = 5;</code>
     */
    private void clearAdminPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000008);
      adminPlayerId_ = 0;
    }

    public static final int GAMEINFO_FIELD_NUMBER = 6;
    private de.pokerth.protocol.ProtoBuf.NetGameInfo gameInfo_;
    /**
     * <code>required .NetGameInfo gameInfo = 6;</code>
     */
    public boolean hasGameInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .NetGameInfo gameInfo = 6;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameInfo getGameInfo() {
      return gameInfo_ == null ? de.pokerth.protocol.ProtoBuf.NetGameInfo.getDefaultInstance() : gameInfo_;
    }
    /**
     * <code>required .NetGameInfo gameInfo = 6;</code>
     */
    private void setGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameInfo_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <code>required .NetGameInfo gameInfo = 6;</code>
     */
    private void setGameInfo(
        de.pokerth.protocol.ProtoBuf.NetGameInfo.Builder builderForValue) {
      gameInfo_ = builderForValue.build();
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>required .NetGameInfo gameInfo = 6;</code>
     */
    private void mergeGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
      if (gameInfo_ != null &&
          gameInfo_ != de.pokerth.protocol.ProtoBuf.NetGameInfo.getDefaultInstance()) {
        gameInfo_ =
          de.pokerth.protocol.ProtoBuf.NetGameInfo.newBuilder(gameInfo_).mergeFrom(value).buildPartial();
      } else {
        gameInfo_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>required .NetGameInfo gameInfo = 6;</code>
     */
    private void clearGameInfo() {  gameInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int SPECTATORIDS_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.IntList spectatorIds_;
    /**
     * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getSpectatorIdsList() {
      return spectatorIds_;
    }
    /**
     * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
     */
    public int getSpectatorIdsCount() {
      return spectatorIds_.size();
    }
    /**
     * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
     */
    public int getSpectatorIds(int index) {
      return spectatorIds_.getInt(index);
    }
    private int spectatorIdsMemoizedSerializedSize = -1;
    private void ensureSpectatorIdsIsMutable() {
      if (!spectatorIds_.isModifiable()) {
        spectatorIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(spectatorIds_);
       }
    }
    /**
     * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
     */
    private void setSpectatorIds(
        int index, int value) {
      ensureSpectatorIdsIsMutable();
      spectatorIds_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
     */
    private void addSpectatorIds(int value) {
      ensureSpectatorIdsIsMutable();
      spectatorIds_.addInt(value);
    }
    /**
     * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
     */
    private void addAllSpectatorIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSpectatorIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, spectatorIds_);
    }
    /**
     * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
     */
    private void clearSpectatorIds() {
      spectatorIds_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, gameMode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isPrivate_);
      }
      if (getPlayerIdsList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(playerIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < playerIds_.size(); i++) {
        output.writeUInt32NoTag(playerIds_.getInt(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, adminPlayerId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, getGameInfo());
      }
      if (getSpectatorIdsList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(spectatorIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < spectatorIds_.size(); i++) {
        output.writeUInt32NoTag(spectatorIds_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, gameMode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isPrivate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(playerIds_.getInt(i));
        }
        size += dataSize;
        if (!getPlayerIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        playerIdsMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, adminPlayerId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getGameInfo());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < spectatorIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(spectatorIds_.getInt(i));
        }
        size += dataSize;
        if (!getSpectatorIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        spectatorIdsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameListNewMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListNewMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListNewMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListNewMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListNewMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListNewMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListNewMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListNewMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListNewMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListNewMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameListNewMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameListNewMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameListNewMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameListNewMessage)
        de.pokerth.protocol.ProtoBuf.GameListNewMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameListNewMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required .NetGameMode gameMode = 2;</code>
       */
      public boolean hasGameMode() {
        return instance.hasGameMode();
      }
      /**
       * <code>required .NetGameMode gameMode = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameMode getGameMode() {
        return instance.getGameMode();
      }
      /**
       * <code>required .NetGameMode gameMode = 2;</code>
       */
      public Builder setGameMode(de.pokerth.protocol.ProtoBuf.NetGameMode value) {
        copyOnWrite();
        instance.setGameMode(value);
        return this;
      }
      /**
       * <code>required .NetGameMode gameMode = 2;</code>
       */
      public Builder clearGameMode() {
        copyOnWrite();
        instance.clearGameMode();
        return this;
      }

      /**
       * <code>required bool isPrivate = 3;</code>
       */
      public boolean hasIsPrivate() {
        return instance.hasIsPrivate();
      }
      /**
       * <code>required bool isPrivate = 3;</code>
       */
      public boolean getIsPrivate() {
        return instance.getIsPrivate();
      }
      /**
       * <code>required bool isPrivate = 3;</code>
       */
      public Builder setIsPrivate(boolean value) {
        copyOnWrite();
        instance.setIsPrivate(value);
        return this;
      }
      /**
       * <code>required bool isPrivate = 3;</code>
       */
      public Builder clearIsPrivate() {
        copyOnWrite();
        instance.clearIsPrivate();
        return this;
      }

      /**
       * <code>repeated uint32 playerIds = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayerIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getPlayerIdsList());
      }
      /**
       * <code>repeated uint32 playerIds = 4 [packed = true];</code>
       */
      public int getPlayerIdsCount() {
        return instance.getPlayerIdsCount();
      }
      /**
       * <code>repeated uint32 playerIds = 4 [packed = true];</code>
       */
      public int getPlayerIds(int index) {
        return instance.getPlayerIds(index);
      }
      /**
       * <code>repeated uint32 playerIds = 4 [packed = true];</code>
       */
      public Builder setPlayerIds(
          int index, int value) {
        copyOnWrite();
        instance.setPlayerIds(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 playerIds = 4 [packed = true];</code>
       */
      public Builder addPlayerIds(int value) {
        copyOnWrite();
        instance.addPlayerIds(value);
        return this;
      }
      /**
       * <code>repeated uint32 playerIds = 4 [packed = true];</code>
       */
      public Builder addAllPlayerIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllPlayerIds(values);
        return this;
      }
      /**
       * <code>repeated uint32 playerIds = 4 [packed = true];</code>
       */
      public Builder clearPlayerIds() {
        copyOnWrite();
        instance.clearPlayerIds();
        return this;
      }

      /**
       * <code>required uint32 adminPlayerId = 5;</code>
       */
      public boolean hasAdminPlayerId() {
        return instance.hasAdminPlayerId();
      }
      /**
       * <code>required uint32 adminPlayerId = 5;</code>
       */
      public int getAdminPlayerId() {
        return instance.getAdminPlayerId();
      }
      /**
       * <code>required uint32 adminPlayerId = 5;</code>
       */
      public Builder setAdminPlayerId(int value) {
        copyOnWrite();
        instance.setAdminPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 adminPlayerId = 5;</code>
       */
      public Builder clearAdminPlayerId() {
        copyOnWrite();
        instance.clearAdminPlayerId();
        return this;
      }

      /**
       * <code>required .NetGameInfo gameInfo = 6;</code>
       */
      public boolean hasGameInfo() {
        return instance.hasGameInfo();
      }
      /**
       * <code>required .NetGameInfo gameInfo = 6;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameInfo getGameInfo() {
        return instance.getGameInfo();
      }
      /**
       * <code>required .NetGameInfo gameInfo = 6;</code>
       */
      public Builder setGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
        copyOnWrite();
        instance.setGameInfo(value);
        return this;
        }
      /**
       * <code>required .NetGameInfo gameInfo = 6;</code>
       */
      public Builder setGameInfo(
          de.pokerth.protocol.ProtoBuf.NetGameInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setGameInfo(builderForValue);
        return this;
      }
      /**
       * <code>required .NetGameInfo gameInfo = 6;</code>
       */
      public Builder mergeGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
        copyOnWrite();
        instance.mergeGameInfo(value);
        return this;
      }
      /**
       * <code>required .NetGameInfo gameInfo = 6;</code>
       */
      public Builder clearGameInfo() {  copyOnWrite();
        instance.clearGameInfo();
        return this;
      }

      /**
       * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getSpectatorIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getSpectatorIdsList());
      }
      /**
       * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
       */
      public int getSpectatorIdsCount() {
        return instance.getSpectatorIdsCount();
      }
      /**
       * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
       */
      public int getSpectatorIds(int index) {
        return instance.getSpectatorIds(index);
      }
      /**
       * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
       */
      public Builder setSpectatorIds(
          int index, int value) {
        copyOnWrite();
        instance.setSpectatorIds(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
       */
      public Builder addSpectatorIds(int value) {
        copyOnWrite();
        instance.addSpectatorIds(value);
        return this;
      }
      /**
       * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
       */
      public Builder addAllSpectatorIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllSpectatorIds(values);
        return this;
      }
      /**
       * <code>repeated uint32 spectatorIds = 7 [packed = true];</code>
       */
      public Builder clearSpectatorIds() {
        copyOnWrite();
        instance.clearSpectatorIds();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameListNewMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameListNewMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGameMode()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasIsPrivate()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAdminPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGameInfo()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getGameInfo().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          playerIds_.makeImmutable();
          spectatorIds_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameListNewMessage other = (de.pokerth.protocol.ProtoBuf.GameListNewMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          gameMode_ = visitor.visitInt(hasGameMode(), gameMode_,
              other.hasGameMode(), other.gameMode_);
          isPrivate_ = visitor.visitBoolean(
              hasIsPrivate(), isPrivate_,
              other.hasIsPrivate(), other.isPrivate_);
          playerIds_= visitor.visitIntList(playerIds_, other.playerIds_);
          adminPlayerId_ = visitor.visitInt(
              hasAdminPlayerId(), adminPlayerId_,
              other.hasAdminPlayerId(), other.adminPlayerId_);
          gameInfo_ = visitor.visitMessage(gameInfo_, other.gameInfo_);
          spectatorIds_= visitor.visitIntList(spectatorIds_, other.spectatorIds_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetGameMode value = de.pokerth.protocol.ProtoBuf.NetGameMode.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    gameMode_ = rawValue;
                  }
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  isPrivate_ = input.readBool();
                  break;
                }
                case 32: {
                  if (!playerIds_.isModifiable()) {
                    playerIds_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(playerIds_);
                  }
                  playerIds_.addInt(input.readUInt32());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!playerIds_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    playerIds_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(playerIds_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    playerIds_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000008;
                  adminPlayerId_ = input.readUInt32();
                  break;
                }
                case 50: {
                  de.pokerth.protocol.ProtoBuf.NetGameInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = gameInfo_.toBuilder();
                  }
                  gameInfo_ = input.readMessage(de.pokerth.protocol.ProtoBuf.NetGameInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameInfo_);
                    gameInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 56: {
                  if (!spectatorIds_.isModifiable()) {
                    spectatorIds_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(spectatorIds_);
                  }
                  spectatorIds_.addInt(input.readUInt32());
                  break;
                }
                case 58: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!spectatorIds_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    spectatorIds_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(spectatorIds_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    spectatorIds_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameListNewMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameListNewMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameListNewMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameListNewMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameListNewMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameListNewMessage> PARSER;

    public static com.google.protobuf.Parser<GameListNewMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameListUpdateMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameListUpdateMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    boolean hasGameMode();
    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameMode getGameMode();
  }
  /**
   * Protobuf type {@code GameListUpdateMessage}
   */
  public  static final class GameListUpdateMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameListUpdateMessage, GameListUpdateMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameListUpdateMessage)
      GameListUpdateMessageOrBuilder {
    private GameListUpdateMessage() {
      gameMode_ = 1;
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int GAMEMODE_FIELD_NUMBER = 2;
    private int gameMode_;
    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    public boolean hasGameMode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameMode getGameMode() {
      de.pokerth.protocol.ProtoBuf.NetGameMode result = de.pokerth.protocol.ProtoBuf.NetGameMode.forNumber(gameMode_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetGameMode.netGameCreated : result;
    }
    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    private void setGameMode(de.pokerth.protocol.ProtoBuf.NetGameMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      gameMode_ = value.getNumber();
    }
    /**
     * <code>required .NetGameMode gameMode = 2;</code>
     */
    private void clearGameMode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      gameMode_ = 1;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, gameMode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, gameMode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameListUpdateMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListUpdateMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListUpdateMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListUpdateMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListUpdateMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListUpdateMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListUpdateMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListUpdateMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListUpdateMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListUpdateMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameListUpdateMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameListUpdateMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameListUpdateMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameListUpdateMessage)
        de.pokerth.protocol.ProtoBuf.GameListUpdateMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameListUpdateMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required .NetGameMode gameMode = 2;</code>
       */
      public boolean hasGameMode() {
        return instance.hasGameMode();
      }
      /**
       * <code>required .NetGameMode gameMode = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameMode getGameMode() {
        return instance.getGameMode();
      }
      /**
       * <code>required .NetGameMode gameMode = 2;</code>
       */
      public Builder setGameMode(de.pokerth.protocol.ProtoBuf.NetGameMode value) {
        copyOnWrite();
        instance.setGameMode(value);
        return this;
      }
      /**
       * <code>required .NetGameMode gameMode = 2;</code>
       */
      public Builder clearGameMode() {
        copyOnWrite();
        instance.clearGameMode();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameListUpdateMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameListUpdateMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGameMode()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameListUpdateMessage other = (de.pokerth.protocol.ProtoBuf.GameListUpdateMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          gameMode_ = visitor.visitInt(hasGameMode(), gameMode_,
              other.hasGameMode(), other.gameMode_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetGameMode value = de.pokerth.protocol.ProtoBuf.NetGameMode.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    gameMode_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameListUpdateMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameListUpdateMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameListUpdateMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameListUpdateMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameListUpdateMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameListUpdateMessage> PARSER;

    public static com.google.protobuf.Parser<GameListUpdateMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameListPlayerJoinedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameListPlayerJoinedMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code GameListPlayerJoinedMessage}
   */
  public  static final class GameListPlayerJoinedMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameListPlayerJoinedMessage, GameListPlayerJoinedMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameListPlayerJoinedMessage)
      GameListPlayerJoinedMessageOrBuilder {
    private GameListPlayerJoinedMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameListPlayerJoinedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameListPlayerJoinedMessage)
        de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameListPlayerJoinedMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage other = (de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameListPlayerJoinedMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameListPlayerJoinedMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameListPlayerJoinedMessage> PARSER;

    public static com.google.protobuf.Parser<GameListPlayerJoinedMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameListPlayerLeftMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameListPlayerLeftMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code GameListPlayerLeftMessage}
   */
  public  static final class GameListPlayerLeftMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameListPlayerLeftMessage, GameListPlayerLeftMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameListPlayerLeftMessage)
      GameListPlayerLeftMessageOrBuilder {
    private GameListPlayerLeftMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameListPlayerLeftMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameListPlayerLeftMessage)
        de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameListPlayerLeftMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage other = (de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameListPlayerLeftMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameListPlayerLeftMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameListPlayerLeftMessage> PARSER;

    public static com.google.protobuf.Parser<GameListPlayerLeftMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameListSpectatorJoinedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameListSpectatorJoinedMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code GameListSpectatorJoinedMessage}
   */
  public  static final class GameListSpectatorJoinedMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameListSpectatorJoinedMessage, GameListSpectatorJoinedMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameListSpectatorJoinedMessage)
      GameListSpectatorJoinedMessageOrBuilder {
    private GameListSpectatorJoinedMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameListSpectatorJoinedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameListSpectatorJoinedMessage)
        de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameListSpectatorJoinedMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage other = (de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameListSpectatorJoinedMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameListSpectatorJoinedMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameListSpectatorJoinedMessage> PARSER;

    public static com.google.protobuf.Parser<GameListSpectatorJoinedMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameListSpectatorLeftMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameListSpectatorLeftMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code GameListSpectatorLeftMessage}
   */
  public  static final class GameListSpectatorLeftMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameListSpectatorLeftMessage, GameListSpectatorLeftMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameListSpectatorLeftMessage)
      GameListSpectatorLeftMessageOrBuilder {
    private GameListSpectatorLeftMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameListSpectatorLeftMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameListSpectatorLeftMessage)
        de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameListSpectatorLeftMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage other = (de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameListSpectatorLeftMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameListSpectatorLeftMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameListSpectatorLeftMessage> PARSER;

    public static com.google.protobuf.Parser<GameListSpectatorLeftMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameListAdminChangedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameListAdminChangedMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    boolean hasNewAdminPlayerId();
    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    int getNewAdminPlayerId();
  }
  /**
   * Protobuf type {@code GameListAdminChangedMessage}
   */
  public  static final class GameListAdminChangedMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameListAdminChangedMessage, GameListAdminChangedMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameListAdminChangedMessage)
      GameListAdminChangedMessageOrBuilder {
    private GameListAdminChangedMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int NEWADMINPLAYERID_FIELD_NUMBER = 2;
    private int newAdminPlayerId_;
    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    public boolean hasNewAdminPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    public int getNewAdminPlayerId() {
      return newAdminPlayerId_;
    }
    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    private void setNewAdminPlayerId(int value) {
      bitField0_ |= 0x00000002;
      newAdminPlayerId_ = value;
    }
    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    private void clearNewAdminPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      newAdminPlayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, newAdminPlayerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, newAdminPlayerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameListAdminChangedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameListAdminChangedMessage)
        de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 newAdminPlayerId = 2;</code>
       */
      public boolean hasNewAdminPlayerId() {
        return instance.hasNewAdminPlayerId();
      }
      /**
       * <code>required uint32 newAdminPlayerId = 2;</code>
       */
      public int getNewAdminPlayerId() {
        return instance.getNewAdminPlayerId();
      }
      /**
       * <code>required uint32 newAdminPlayerId = 2;</code>
       */
      public Builder setNewAdminPlayerId(int value) {
        copyOnWrite();
        instance.setNewAdminPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 newAdminPlayerId = 2;</code>
       */
      public Builder clearNewAdminPlayerId() {
        copyOnWrite();
        instance.clearNewAdminPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameListAdminChangedMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNewAdminPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage other = (de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          newAdminPlayerId_ = visitor.visitInt(
              hasNewAdminPlayerId(), newAdminPlayerId_,
              other.hasNewAdminPlayerId(), other.newAdminPlayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  newAdminPlayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameListAdminChangedMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameListAdminChangedMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameListAdminChangedMessage> PARSER;

    public static com.google.protobuf.Parser<GameListAdminChangedMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PlayerInfoRequestMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayerInfoRequestMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated uint32 playerId = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getPlayerIdList();
    /**
     * <code>repeated uint32 playerId = 1 [packed = true];</code>
     */
    int getPlayerIdCount();
    /**
     * <code>repeated uint32 playerId = 1 [packed = true];</code>
     */
    int getPlayerId(int index);
  }
  /**
   * Protobuf type {@code PlayerInfoRequestMessage}
   */
  public  static final class PlayerInfoRequestMessage extends
      com.google.protobuf.GeneratedMessageLite<
          PlayerInfoRequestMessage, PlayerInfoRequestMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:PlayerInfoRequestMessage)
      PlayerInfoRequestMessageOrBuilder {
    private PlayerInfoRequestMessage() {
      playerId_ = emptyIntList();
    }
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList playerId_;
    /**
     * <code>repeated uint32 playerId = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getPlayerIdList() {
      return playerId_;
    }
    /**
     * <code>repeated uint32 playerId = 1 [packed = true];</code>
     */
    public int getPlayerIdCount() {
      return playerId_.size();
    }
    /**
     * <code>repeated uint32 playerId = 1 [packed = true];</code>
     */
    public int getPlayerId(int index) {
      return playerId_.getInt(index);
    }
    private int playerIdMemoizedSerializedSize = -1;
    private void ensurePlayerIdIsMutable() {
      if (!playerId_.isModifiable()) {
        playerId_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(playerId_);
       }
    }
    /**
     * <code>repeated uint32 playerId = 1 [packed = true];</code>
     */
    private void setPlayerId(
        int index, int value) {
      ensurePlayerIdIsMutable();
      playerId_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 playerId = 1 [packed = true];</code>
     */
    private void addPlayerId(int value) {
      ensurePlayerIdIsMutable();
      playerId_.addInt(value);
    }
    /**
     * <code>repeated uint32 playerId = 1 [packed = true];</code>
     */
    private void addAllPlayerId(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensurePlayerIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, playerId_);
    }
    /**
     * <code>repeated uint32 playerId = 1 [packed = true];</code>
     */
    private void clearPlayerId() {
      playerId_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getPlayerIdList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(playerIdMemoizedSerializedSize);
      }
      for (int i = 0; i < playerId_.size(); i++) {
        output.writeUInt32NoTag(playerId_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < playerId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(playerId_.getInt(i));
        }
        size += dataSize;
        if (!getPlayerIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        playerIdMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PlayerInfoRequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayerInfoRequestMessage)
        de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated uint32 playerId = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayerIdList() {
        return java.util.Collections.unmodifiableList(
            instance.getPlayerIdList());
      }
      /**
       * <code>repeated uint32 playerId = 1 [packed = true];</code>
       */
      public int getPlayerIdCount() {
        return instance.getPlayerIdCount();
      }
      /**
       * <code>repeated uint32 playerId = 1 [packed = true];</code>
       */
      public int getPlayerId(int index) {
        return instance.getPlayerId(index);
      }
      /**
       * <code>repeated uint32 playerId = 1 [packed = true];</code>
       */
      public Builder setPlayerId(
          int index, int value) {
        copyOnWrite();
        instance.setPlayerId(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 playerId = 1 [packed = true];</code>
       */
      public Builder addPlayerId(int value) {
        copyOnWrite();
        instance.addPlayerId(value);
        return this;
      }
      /**
       * <code>repeated uint32 playerId = 1 [packed = true];</code>
       */
      public Builder addAllPlayerId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllPlayerId(values);
        return this;
      }
      /**
       * <code>repeated uint32 playerId = 1 [packed = true];</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerInfoRequestMessage)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          playerId_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage other = (de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage) arg1;
          playerId_= visitor.visitIntList(playerId_, other.playerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  if (!playerId_.isModifiable()) {
                    playerId_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(playerId_);
                  }
                  playerId_.addInt(input.readUInt32());
                  break;
                }
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!playerId_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    playerId_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(playerId_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    playerId_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PlayerInfoRequestMessage)
    private static final de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlayerInfoRequestMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PlayerInfoRequestMessage> PARSER;

    public static com.google.protobuf.Parser<PlayerInfoRequestMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PlayerInfoReplyMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayerInfoReplyMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 playerId = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    int getPlayerId();

    /**
     * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
     */
    boolean hasPlayerInfoData();
    /**
     * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData getPlayerInfoData();
  }
  /**
   * Protobuf type {@code PlayerInfoReplyMessage}
   */
  public  static final class PlayerInfoReplyMessage extends
      com.google.protobuf.GeneratedMessageLite<
          PlayerInfoReplyMessage, PlayerInfoReplyMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:PlayerInfoReplyMessage)
      PlayerInfoReplyMessageOrBuilder {
    private PlayerInfoReplyMessage() {
    }
    public interface PlayerInfoDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:PlayerInfoReplyMessage.PlayerInfoData)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required string playerName = 1;</code>
       */
      boolean hasPlayerName();
      /**
       * <code>required string playerName = 1;</code>
       */
      java.lang.String getPlayerName();
      /**
       * <code>required string playerName = 1;</code>
       */
      com.google.protobuf.ByteString
          getPlayerNameBytes();

      /**
       * <code>required bool isHuman = 2;</code>
       */
      boolean hasIsHuman();
      /**
       * <code>required bool isHuman = 2;</code>
       */
      boolean getIsHuman();

      /**
       * <code>required .NetPlayerInfoRights playerRights = 3;</code>
       */
      boolean hasPlayerRights();
      /**
       * <code>required .NetPlayerInfoRights playerRights = 3;</code>
       */
      de.pokerth.protocol.ProtoBuf.NetPlayerInfoRights getPlayerRights();

      /**
       * <code>optional string countryCode = 4;</code>
       */
      boolean hasCountryCode();
      /**
       * <code>optional string countryCode = 4;</code>
       */
      java.lang.String getCountryCode();
      /**
       * <code>optional string countryCode = 4;</code>
       */
      com.google.protobuf.ByteString
          getCountryCodeBytes();

      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
       */
      boolean hasAvatarData();
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
       */
      de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData getAvatarData();
    }
    /**
     * Protobuf type {@code PlayerInfoReplyMessage.PlayerInfoData}
     */
    public  static final class PlayerInfoData extends
        com.google.protobuf.GeneratedMessageLite<
            PlayerInfoData, PlayerInfoData.Builder> implements
        // @@protoc_insertion_point(message_implements:PlayerInfoReplyMessage.PlayerInfoData)
        PlayerInfoDataOrBuilder {
      private PlayerInfoData() {
        playerName_ = "";
        playerRights_ = 1;
        countryCode_ = "";
      }
      public interface AvatarDataOrBuilder extends
          // @@protoc_insertion_point(interface_extends:PlayerInfoReplyMessage.PlayerInfoData.AvatarData)
          com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>required .NetAvatarType avatarType = 1;</code>
         */
        boolean hasAvatarType();
        /**
         * <code>required .NetAvatarType avatarType = 1;</code>
         */
        de.pokerth.protocol.ProtoBuf.NetAvatarType getAvatarType();

        /**
         * <code>required bytes avatarHash = 2;</code>
         */
        boolean hasAvatarHash();
        /**
         * <code>required bytes avatarHash = 2;</code>
         */
        com.google.protobuf.ByteString getAvatarHash();
      }
      /**
       * Protobuf type {@code PlayerInfoReplyMessage.PlayerInfoData.AvatarData}
       */
      public  static final class AvatarData extends
          com.google.protobuf.GeneratedMessageLite<
              AvatarData, AvatarData.Builder> implements
          // @@protoc_insertion_point(message_implements:PlayerInfoReplyMessage.PlayerInfoData.AvatarData)
          AvatarDataOrBuilder {
        private AvatarData() {
          avatarType_ = 1;
          avatarHash_ = com.google.protobuf.ByteString.EMPTY;
        }
        private int bitField0_;
        public static final int AVATARTYPE_FIELD_NUMBER = 1;
        private int avatarType_;
        /**
         * <code>required .NetAvatarType avatarType = 1;</code>
         */
        public boolean hasAvatarType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .NetAvatarType avatarType = 1;</code>
         */
        public de.pokerth.protocol.ProtoBuf.NetAvatarType getAvatarType() {
          de.pokerth.protocol.ProtoBuf.NetAvatarType result = de.pokerth.protocol.ProtoBuf.NetAvatarType.forNumber(avatarType_);
          return result == null ? de.pokerth.protocol.ProtoBuf.NetAvatarType.netAvatarImagePng : result;
        }
        /**
         * <code>required .NetAvatarType avatarType = 1;</code>
         */
        private void setAvatarType(de.pokerth.protocol.ProtoBuf.NetAvatarType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          avatarType_ = value.getNumber();
        }
        /**
         * <code>required .NetAvatarType avatarType = 1;</code>
         */
        private void clearAvatarType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          avatarType_ = 1;
        }

        public static final int AVATARHASH_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString avatarHash_;
        /**
         * <code>required bytes avatarHash = 2;</code>
         */
        public boolean hasAvatarHash() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bytes avatarHash = 2;</code>
         */
        public com.google.protobuf.ByteString getAvatarHash() {
          return avatarHash_;
        }
        /**
         * <code>required bytes avatarHash = 2;</code>
         */
        private void setAvatarHash(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          avatarHash_ = value;
        }
        /**
         * <code>required bytes avatarHash = 2;</code>
         */
        private void clearAvatarHash() {
          bitField0_ = (bitField0_ & ~0x00000002);
          avatarHash_ = getDefaultInstance().getAvatarHash();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, avatarType_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(2, avatarHash_);
          }
          unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, avatarType_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, avatarHash_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
        }
        public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
        }
        public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
        }
        public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
        }
        public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * Protobuf type {@code PlayerInfoReplyMessage.PlayerInfoData.AvatarData}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData, Builder> implements
            // @@protoc_insertion_point(builder_implements:PlayerInfoReplyMessage.PlayerInfoData.AvatarData)
            de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarDataOrBuilder {
          // Construct using de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData.newBuilder()
          private Builder() {
            super(DEFAULT_INSTANCE);
          }


          /**
           * <code>required .NetAvatarType avatarType = 1;</code>
           */
          public boolean hasAvatarType() {
            return instance.hasAvatarType();
          }
          /**
           * <code>required .NetAvatarType avatarType = 1;</code>
           */
          public de.pokerth.protocol.ProtoBuf.NetAvatarType getAvatarType() {
            return instance.getAvatarType();
          }
          /**
           * <code>required .NetAvatarType avatarType = 1;</code>
           */
          public Builder setAvatarType(de.pokerth.protocol.ProtoBuf.NetAvatarType value) {
            copyOnWrite();
            instance.setAvatarType(value);
            return this;
          }
          /**
           * <code>required .NetAvatarType avatarType = 1;</code>
           */
          public Builder clearAvatarType() {
            copyOnWrite();
            instance.clearAvatarType();
            return this;
          }

          /**
           * <code>required bytes avatarHash = 2;</code>
           */
          public boolean hasAvatarHash() {
            return instance.hasAvatarHash();
          }
          /**
           * <code>required bytes avatarHash = 2;</code>
           */
          public com.google.protobuf.ByteString getAvatarHash() {
            return instance.getAvatarHash();
          }
          /**
           * <code>required bytes avatarHash = 2;</code>
           */
          public Builder setAvatarHash(com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setAvatarHash(value);
            return this;
          }
          /**
           * <code>required bytes avatarHash = 2;</code>
           */
          public Builder clearAvatarHash() {
            copyOnWrite();
            instance.clearAvatarHash();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:PlayerInfoReplyMessage.PlayerInfoData.AvatarData)
        }
        private byte memoizedIsInitialized = -1;
        protected final Object dynamicMethod(
            com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
            Object arg0, Object arg1) {
          switch (method) {
            case NEW_MUTABLE_INSTANCE: {
              return new de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData();
            }
            case IS_INITIALIZED: {
              byte isInitialized = memoizedIsInitialized;
              if (isInitialized == 1) return DEFAULT_INSTANCE;
              if (isInitialized == 0) return null;

              boolean shouldMemoize = ((Boolean) arg0).booleanValue();
              if (!hasAvatarType()) {
                if (shouldMemoize) {
                  memoizedIsInitialized = 0;
                }
                return null;
              }
              if (!hasAvatarHash()) {
                if (shouldMemoize) {
                  memoizedIsInitialized = 0;
                }
                return null;
              }
              if (shouldMemoize) memoizedIsInitialized = 1;
              return DEFAULT_INSTANCE;

            }
            case MAKE_IMMUTABLE: {
              return null;
            }
            case NEW_BUILDER: {
              return new Builder();
            }
            case VISIT: {
              Visitor visitor = (Visitor) arg0;
              de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData other = (de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData) arg1;
              avatarType_ = visitor.visitInt(hasAvatarType(), avatarType_,
                  other.hasAvatarType(), other.avatarType_);
              avatarHash_ = visitor.visitByteString(
                  hasAvatarHash(), avatarHash_,
                  other.hasAvatarHash(), other.avatarHash_);
              if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                  .INSTANCE) {
                bitField0_ |= other.bitField0_;
              }
              return this;
            }
            case MERGE_FROM_STREAM: {
              com.google.protobuf.CodedInputStream input =
                  (com.google.protobuf.CodedInputStream) arg0;
              com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                  (com.google.protobuf.ExtensionRegistryLite) arg1;
              try {
                boolean done = false;
                while (!done) {
                  int tag = input.readTag();
                  switch (tag) {
                    case 0:
                      done = true;
                      break;
                    default: {
                      if (!parseUnknownField(tag, input)) {
                        done = true;
                      }
                      break;
                    }
                    case 8: {
                      int rawValue = input.readEnum();
                      de.pokerth.protocol.ProtoBuf.NetAvatarType value = de.pokerth.protocol.ProtoBuf.NetAvatarType.forNumber(rawValue);
                      if (value == null) {
                        super.mergeVarintField(1, rawValue);
                      } else {
                        bitField0_ |= 0x00000001;
                        avatarType_ = rawValue;
                      }
                      break;
                    }
                    case 18: {
                      bitField0_ |= 0x00000002;
                      avatarHash_ = input.readBytes();
                      break;
                    }
                  }
                }
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw new RuntimeException(e.setUnfinishedMessage(this));
              } catch (java.io.IOException e) {
                throw new RuntimeException(
                    new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this));
              } finally {
              }
            }
            case GET_DEFAULT_INSTANCE: {
              return DEFAULT_INSTANCE;
            }
            case GET_PARSER: {
              if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData.class) {
                  if (PARSER == null) {
                    PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  }
                }
              }
              return PARSER;
            }
          }
          throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:PlayerInfoReplyMessage.PlayerInfoData.AvatarData)
        private static final de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new AvatarData();
          DEFAULT_INSTANCE.makeImmutable();
        }

        public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<AvatarData> PARSER;

        public static com.google.protobuf.Parser<AvatarData> parser() {
          return DEFAULT_INSTANCE.getParserForType();
        }
      }

      private int bitField0_;
      public static final int PLAYERNAME_FIELD_NUMBER = 1;
      private java.lang.String playerName_;
      /**
       * <code>required string playerName = 1;</code>
       */
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string playerName = 1;</code>
       */
      public java.lang.String getPlayerName() {
        return playerName_;
      }
      /**
       * <code>required string playerName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(playerName_);
      }
      /**
       * <code>required string playerName = 1;</code>
       */
      private void setPlayerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        playerName_ = value;
      }
      /**
       * <code>required string playerName = 1;</code>
       */
      private void clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerName_ = getDefaultInstance().getPlayerName();
      }
      /**
       * <code>required string playerName = 1;</code>
       */
      private void setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        playerName_ = value.toStringUtf8();
      }

      public static final int ISHUMAN_FIELD_NUMBER = 2;
      private boolean isHuman_;
      /**
       * <code>required bool isHuman = 2;</code>
       */
      public boolean hasIsHuman() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool isHuman = 2;</code>
       */
      public boolean getIsHuman() {
        return isHuman_;
      }
      /**
       * <code>required bool isHuman = 2;</code>
       */
      private void setIsHuman(boolean value) {
        bitField0_ |= 0x00000002;
        isHuman_ = value;
      }
      /**
       * <code>required bool isHuman = 2;</code>
       */
      private void clearIsHuman() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isHuman_ = false;
      }

      public static final int PLAYERRIGHTS_FIELD_NUMBER = 3;
      private int playerRights_;
      /**
       * <code>required .NetPlayerInfoRights playerRights = 3;</code>
       */
      public boolean hasPlayerRights() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .NetPlayerInfoRights playerRights = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetPlayerInfoRights getPlayerRights() {
        de.pokerth.protocol.ProtoBuf.NetPlayerInfoRights result = de.pokerth.protocol.ProtoBuf.NetPlayerInfoRights.forNumber(playerRights_);
        return result == null ? de.pokerth.protocol.ProtoBuf.NetPlayerInfoRights.netPlayerRightsGuest : result;
      }
      /**
       * <code>required .NetPlayerInfoRights playerRights = 3;</code>
       */
      private void setPlayerRights(de.pokerth.protocol.ProtoBuf.NetPlayerInfoRights value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        playerRights_ = value.getNumber();
      }
      /**
       * <code>required .NetPlayerInfoRights playerRights = 3;</code>
       */
      private void clearPlayerRights() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerRights_ = 1;
      }

      public static final int COUNTRYCODE_FIELD_NUMBER = 4;
      private java.lang.String countryCode_;
      /**
       * <code>optional string countryCode = 4;</code>
       */
      public boolean hasCountryCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string countryCode = 4;</code>
       */
      public java.lang.String getCountryCode() {
        return countryCode_;
      }
      /**
       * <code>optional string countryCode = 4;</code>
       */
      public com.google.protobuf.ByteString
          getCountryCodeBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(countryCode_);
      }
      /**
       * <code>optional string countryCode = 4;</code>
       */
      private void setCountryCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        countryCode_ = value;
      }
      /**
       * <code>optional string countryCode = 4;</code>
       */
      private void clearCountryCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        countryCode_ = getDefaultInstance().getCountryCode();
      }
      /**
       * <code>optional string countryCode = 4;</code>
       */
      private void setCountryCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        countryCode_ = value.toStringUtf8();
      }

      public static final int AVATARDATA_FIELD_NUMBER = 5;
      private de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData_;
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
       */
      public boolean hasAvatarData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData getAvatarData() {
        return avatarData_ == null ? de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData.getDefaultInstance() : avatarData_;
      }
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
       */
      private void setAvatarData(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        avatarData_ = value;
        bitField0_ |= 0x00000010;
        }
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
       */
      private void setAvatarData(
          de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData.Builder builderForValue) {
        avatarData_ = builderForValue.build();
        bitField0_ |= 0x00000010;
      }
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
       */
      private void mergeAvatarData(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData value) {
        if (avatarData_ != null &&
            avatarData_ != de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData.getDefaultInstance()) {
          avatarData_ =
            de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData.newBuilder(avatarData_).mergeFrom(value).buildPartial();
        } else {
          avatarData_ = value;
        }
        bitField0_ |= 0x00000010;
      }
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
       */
      private void clearAvatarData() {  avatarData_ = null;
        bitField0_ = (bitField0_ & ~0x00000010);
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeString(1, getPlayerName());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, isHuman_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(3, playerRights_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeString(4, getCountryCode());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeMessage(5, getAvatarData());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getPlayerName());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, isHuman_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, playerRights_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(4, getCountryCode());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getAvatarData());
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code PlayerInfoReplyMessage.PlayerInfoData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData, Builder> implements
          // @@protoc_insertion_point(builder_implements:PlayerInfoReplyMessage.PlayerInfoData)
          de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoDataOrBuilder {
        // Construct using de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required string playerName = 1;</code>
         */
        public boolean hasPlayerName() {
          return instance.hasPlayerName();
        }
        /**
         * <code>required string playerName = 1;</code>
         */
        public java.lang.String getPlayerName() {
          return instance.getPlayerName();
        }
        /**
         * <code>required string playerName = 1;</code>
         */
        public com.google.protobuf.ByteString
            getPlayerNameBytes() {
          return instance.getPlayerNameBytes();
        }
        /**
         * <code>required string playerName = 1;</code>
         */
        public Builder setPlayerName(
            java.lang.String value) {
          copyOnWrite();
          instance.setPlayerName(value);
          return this;
        }
        /**
         * <code>required string playerName = 1;</code>
         */
        public Builder clearPlayerName() {
          copyOnWrite();
          instance.clearPlayerName();
          return this;
        }
        /**
         * <code>required string playerName = 1;</code>
         */
        public Builder setPlayerNameBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setPlayerNameBytes(value);
          return this;
        }

        /**
         * <code>required bool isHuman = 2;</code>
         */
        public boolean hasIsHuman() {
          return instance.hasIsHuman();
        }
        /**
         * <code>required bool isHuman = 2;</code>
         */
        public boolean getIsHuman() {
          return instance.getIsHuman();
        }
        /**
         * <code>required bool isHuman = 2;</code>
         */
        public Builder setIsHuman(boolean value) {
          copyOnWrite();
          instance.setIsHuman(value);
          return this;
        }
        /**
         * <code>required bool isHuman = 2;</code>
         */
        public Builder clearIsHuman() {
          copyOnWrite();
          instance.clearIsHuman();
          return this;
        }

        /**
         * <code>required .NetPlayerInfoRights playerRights = 3;</code>
         */
        public boolean hasPlayerRights() {
          return instance.hasPlayerRights();
        }
        /**
         * <code>required .NetPlayerInfoRights playerRights = 3;</code>
         */
        public de.pokerth.protocol.ProtoBuf.NetPlayerInfoRights getPlayerRights() {
          return instance.getPlayerRights();
        }
        /**
         * <code>required .NetPlayerInfoRights playerRights = 3;</code>
         */
        public Builder setPlayerRights(de.pokerth.protocol.ProtoBuf.NetPlayerInfoRights value) {
          copyOnWrite();
          instance.setPlayerRights(value);
          return this;
        }
        /**
         * <code>required .NetPlayerInfoRights playerRights = 3;</code>
         */
        public Builder clearPlayerRights() {
          copyOnWrite();
          instance.clearPlayerRights();
          return this;
        }

        /**
         * <code>optional string countryCode = 4;</code>
         */
        public boolean hasCountryCode() {
          return instance.hasCountryCode();
        }
        /**
         * <code>optional string countryCode = 4;</code>
         */
        public java.lang.String getCountryCode() {
          return instance.getCountryCode();
        }
        /**
         * <code>optional string countryCode = 4;</code>
         */
        public com.google.protobuf.ByteString
            getCountryCodeBytes() {
          return instance.getCountryCodeBytes();
        }
        /**
         * <code>optional string countryCode = 4;</code>
         */
        public Builder setCountryCode(
            java.lang.String value) {
          copyOnWrite();
          instance.setCountryCode(value);
          return this;
        }
        /**
         * <code>optional string countryCode = 4;</code>
         */
        public Builder clearCountryCode() {
          copyOnWrite();
          instance.clearCountryCode();
          return this;
        }
        /**
         * <code>optional string countryCode = 4;</code>
         */
        public Builder setCountryCodeBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setCountryCodeBytes(value);
          return this;
        }

        /**
         * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
         */
        public boolean hasAvatarData() {
          return instance.hasAvatarData();
        }
        /**
         * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
         */
        public de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData getAvatarData() {
          return instance.getAvatarData();
        }
        /**
         * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
         */
        public Builder setAvatarData(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData value) {
          copyOnWrite();
          instance.setAvatarData(value);
          return this;
          }
        /**
         * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
         */
        public Builder setAvatarData(
            de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData.Builder builderForValue) {
          copyOnWrite();
          instance.setAvatarData(builderForValue);
          return this;
        }
        /**
         * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
         */
        public Builder mergeAvatarData(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData value) {
          copyOnWrite();
          instance.mergeAvatarData(value);
          return this;
        }
        /**
         * <code>optional .PlayerInfoReplyMessage.PlayerInfoData.AvatarData avatarData = 5;</code>
         */
        public Builder clearAvatarData() {  copyOnWrite();
          instance.clearAvatarData();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:PlayerInfoReplyMessage.PlayerInfoData)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasPlayerName()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasIsHuman()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasPlayerRights()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (hasAvatarData()) {
              if (!getAvatarData().isInitialized()) {
                if (shouldMemoize) {
                  memoizedIsInitialized = 0;
                }
                return null;
              }
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData other = (de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData) arg1;
            playerName_ = visitor.visitString(
                hasPlayerName(), playerName_,
                other.hasPlayerName(), other.playerName_);
            isHuman_ = visitor.visitBoolean(
                hasIsHuman(), isHuman_,
                other.hasIsHuman(), other.isHuman_);
            playerRights_ = visitor.visitInt(hasPlayerRights(), playerRights_,
                other.hasPlayerRights(), other.playerRights_);
            countryCode_ = visitor.visitString(
                hasCountryCode(), countryCode_,
                other.hasCountryCode(), other.countryCode_);
            avatarData_ = visitor.visitMessage(avatarData_, other.avatarData_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    String s = input.readString();
                    bitField0_ |= 0x00000001;
                    playerName_ = s;
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    isHuman_ = input.readBool();
                    break;
                  }
                  case 24: {
                    int rawValue = input.readEnum();
                    de.pokerth.protocol.ProtoBuf.NetPlayerInfoRights value = de.pokerth.protocol.ProtoBuf.NetPlayerInfoRights.forNumber(rawValue);
                    if (value == null) {
                      super.mergeVarintField(3, rawValue);
                    } else {
                      bitField0_ |= 0x00000004;
                      playerRights_ = rawValue;
                    }
                    break;
                  }
                  case 34: {
                    String s = input.readString();
                    bitField0_ |= 0x00000008;
                    countryCode_ = s;
                    break;
                  }
                  case 42: {
                    de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData.Builder subBuilder = null;
                    if (((bitField0_ & 0x00000010) == 0x00000010)) {
                      subBuilder = avatarData_.toBuilder();
                    }
                    avatarData_ = input.readMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.AvatarData.parser(), extensionRegistry);
                    if (subBuilder != null) {
                      subBuilder.mergeFrom(avatarData_);
                      avatarData_ = subBuilder.buildPartial();
                    }
                    bitField0_ |= 0x00000010;
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:PlayerInfoReplyMessage.PlayerInfoData)
      private static final de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new PlayerInfoData();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<PlayerInfoData> PARSER;

      public static com.google.protobuf.Parser<PlayerInfoData> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000001;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 1;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      playerId_ = 0;
    }

    public static final int PLAYERINFODATA_FIELD_NUMBER = 2;
    private de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData playerInfoData_;
    /**
     * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
     */
    public boolean hasPlayerInfoData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData getPlayerInfoData() {
      return playerInfoData_ == null ? de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.getDefaultInstance() : playerInfoData_;
    }
    /**
     * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
     */
    private void setPlayerInfoData(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      playerInfoData_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
     */
    private void setPlayerInfoData(
        de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.Builder builderForValue) {
      playerInfoData_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
     */
    private void mergePlayerInfoData(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData value) {
      if (playerInfoData_ != null &&
          playerInfoData_ != de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.getDefaultInstance()) {
        playerInfoData_ =
          de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.newBuilder(playerInfoData_).mergeFrom(value).buildPartial();
      } else {
        playerInfoData_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
     */
    private void clearPlayerInfoData() {  playerInfoData_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getPlayerInfoData());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPlayerInfoData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PlayerInfoReplyMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayerInfoReplyMessage)
        de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
       */
      public boolean hasPlayerInfoData() {
        return instance.hasPlayerInfoData();
      }
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData getPlayerInfoData() {
        return instance.getPlayerInfoData();
      }
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
       */
      public Builder setPlayerInfoData(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData value) {
        copyOnWrite();
        instance.setPlayerInfoData(value);
        return this;
        }
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
       */
      public Builder setPlayerInfoData(
          de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.Builder builderForValue) {
        copyOnWrite();
        instance.setPlayerInfoData(builderForValue);
        return this;
      }
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
       */
      public Builder mergePlayerInfoData(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData value) {
        copyOnWrite();
        instance.mergePlayerInfoData(value);
        return this;
      }
      /**
       * <code>optional .PlayerInfoReplyMessage.PlayerInfoData playerInfoData = 2;</code>
       */
      public Builder clearPlayerInfoData() {  copyOnWrite();
        instance.clearPlayerInfoData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerInfoReplyMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (hasPlayerInfoData()) {
            if (!getPlayerInfoData().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage other = (de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage) arg1;
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          playerInfoData_ = visitor.visitMessage(playerInfoData_, other.playerInfoData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 18: {
                  de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = playerInfoData_.toBuilder();
                  }
                  playerInfoData_ = input.readMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.PlayerInfoData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(playerInfoData_);
                    playerInfoData_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PlayerInfoReplyMessage)
    private static final de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlayerInfoReplyMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PlayerInfoReplyMessage> PARSER;

    public static com.google.protobuf.Parser<PlayerInfoReplyMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubscriptionRequestMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SubscriptionRequestMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .SubscriptionRequestMessage.SubscriptionAction subscriptionAction = 1;</code>
     */
    boolean hasSubscriptionAction();
    /**
     * <code>required .SubscriptionRequestMessage.SubscriptionAction subscriptionAction = 1;</code>
     */
    de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.SubscriptionAction getSubscriptionAction();
  }
  /**
   * <pre>
   * The following request will not be confirmed by the server. It is used,
   * optionally, to reduce server traffic. The server might ignore it.
   * </pre>
   *
   * Protobuf type {@code SubscriptionRequestMessage}
   */
  public  static final class SubscriptionRequestMessage extends
      com.google.protobuf.GeneratedMessageLite<
          SubscriptionRequestMessage, SubscriptionRequestMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:SubscriptionRequestMessage)
      SubscriptionRequestMessageOrBuilder {
    private SubscriptionRequestMessage() {
      subscriptionAction_ = 1;
    }
    /**
     * Protobuf enum {@code SubscriptionRequestMessage.SubscriptionAction}
     */
    public enum SubscriptionAction
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>unsubscribeGameList = 1;</code>
       */
      unsubscribeGameList(1),
      /**
       * <code>resubscribeGameList = 2;</code>
       */
      resubscribeGameList(2),
      ;

      /**
       * <code>unsubscribeGameList = 1;</code>
       */
      public static final int unsubscribeGameList_VALUE = 1;
      /**
       * <code>resubscribeGameList = 2;</code>
       */
      public static final int resubscribeGameList_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SubscriptionAction valueOf(int value) {
        return forNumber(value);
      }

      public static SubscriptionAction forNumber(int value) {
        switch (value) {
          case 1: return unsubscribeGameList;
          case 2: return resubscribeGameList;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SubscriptionAction>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SubscriptionAction> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SubscriptionAction>() {
              public SubscriptionAction findValueByNumber(int number) {
                return SubscriptionAction.forNumber(number);
              }
            };

      private final int value;

      private SubscriptionAction(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SubscriptionRequestMessage.SubscriptionAction)
    }

    private int bitField0_;
    public static final int SUBSCRIPTIONACTION_FIELD_NUMBER = 1;
    private int subscriptionAction_;
    /**
     * <code>required .SubscriptionRequestMessage.SubscriptionAction subscriptionAction = 1;</code>
     */
    public boolean hasSubscriptionAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .SubscriptionRequestMessage.SubscriptionAction subscriptionAction = 1;</code>
     */
    public de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.SubscriptionAction getSubscriptionAction() {
      de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.SubscriptionAction result = de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.SubscriptionAction.forNumber(subscriptionAction_);
      return result == null ? de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.SubscriptionAction.unsubscribeGameList : result;
    }
    /**
     * <code>required .SubscriptionRequestMessage.SubscriptionAction subscriptionAction = 1;</code>
     */
    private void setSubscriptionAction(de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.SubscriptionAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      subscriptionAction_ = value.getNumber();
    }
    /**
     * <code>required .SubscriptionRequestMessage.SubscriptionAction subscriptionAction = 1;</code>
     */
    private void clearSubscriptionAction() {
      bitField0_ = (bitField0_ & ~0x00000001);
      subscriptionAction_ = 1;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, subscriptionAction_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, subscriptionAction_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * The following request will not be confirmed by the server. It is used,
     * optionally, to reduce server traffic. The server might ignore it.
     * </pre>
     *
     * Protobuf type {@code SubscriptionRequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:SubscriptionRequestMessage)
        de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .SubscriptionRequestMessage.SubscriptionAction subscriptionAction = 1;</code>
       */
      public boolean hasSubscriptionAction() {
        return instance.hasSubscriptionAction();
      }
      /**
       * <code>required .SubscriptionRequestMessage.SubscriptionAction subscriptionAction = 1;</code>
       */
      public de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.SubscriptionAction getSubscriptionAction() {
        return instance.getSubscriptionAction();
      }
      /**
       * <code>required .SubscriptionRequestMessage.SubscriptionAction subscriptionAction = 1;</code>
       */
      public Builder setSubscriptionAction(de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.SubscriptionAction value) {
        copyOnWrite();
        instance.setSubscriptionAction(value);
        return this;
      }
      /**
       * <code>required .SubscriptionRequestMessage.SubscriptionAction subscriptionAction = 1;</code>
       */
      public Builder clearSubscriptionAction() {
        copyOnWrite();
        instance.clearSubscriptionAction();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SubscriptionRequestMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasSubscriptionAction()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage other = (de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage) arg1;
          subscriptionAction_ = visitor.visitInt(hasSubscriptionAction(), subscriptionAction_,
              other.hasSubscriptionAction(), other.subscriptionAction_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.SubscriptionAction value = de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.SubscriptionAction.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    subscriptionAction_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:SubscriptionRequestMessage)
    private static final de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SubscriptionRequestMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubscriptionRequestMessage> PARSER;

    public static com.google.protobuf.Parser<SubscriptionRequestMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface JoinExistingGameMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:JoinExistingGameMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>optional string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>optional bool autoLeave = 3 [default = false];</code>
     */
    boolean hasAutoLeave();
    /**
     * <code>optional bool autoLeave = 3 [default = false];</code>
     */
    boolean getAutoLeave();

    /**
     * <code>optional bool spectateOnly = 4 [default = false];</code>
     */
    boolean hasSpectateOnly();
    /**
     * <code>optional bool spectateOnly = 4 [default = false];</code>
     */
    boolean getSpectateOnly();
  }
  /**
   * Protobuf type {@code JoinExistingGameMessage}
   */
  public  static final class JoinExistingGameMessage extends
      com.google.protobuf.GeneratedMessageLite<
          JoinExistingGameMessage, JoinExistingGameMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:JoinExistingGameMessage)
      JoinExistingGameMessageOrBuilder {
    private JoinExistingGameMessage() {
      password_ = "";
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private java.lang.String password_;
    /**
     * <code>optional string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public java.lang.String getPassword() {
      return password_;
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(password_);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    private void setPassword(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value;
    }
    /**
     * <code>optional string password = 2;</code>
     */
    private void clearPassword() {
      bitField0_ = (bitField0_ & ~0x00000002);
      password_ = getDefaultInstance().getPassword();
    }
    /**
     * <code>optional string password = 2;</code>
     */
    private void setPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value.toStringUtf8();
    }

    public static final int AUTOLEAVE_FIELD_NUMBER = 3;
    private boolean autoLeave_;
    /**
     * <code>optional bool autoLeave = 3 [default = false];</code>
     */
    public boolean hasAutoLeave() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool autoLeave = 3 [default = false];</code>
     */
    public boolean getAutoLeave() {
      return autoLeave_;
    }
    /**
     * <code>optional bool autoLeave = 3 [default = false];</code>
     */
    private void setAutoLeave(boolean value) {
      bitField0_ |= 0x00000004;
      autoLeave_ = value;
    }
    /**
     * <code>optional bool autoLeave = 3 [default = false];</code>
     */
    private void clearAutoLeave() {
      bitField0_ = (bitField0_ & ~0x00000004);
      autoLeave_ = false;
    }

    public static final int SPECTATEONLY_FIELD_NUMBER = 4;
    private boolean spectateOnly_;
    /**
     * <code>optional bool spectateOnly = 4 [default = false];</code>
     */
    public boolean hasSpectateOnly() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool spectateOnly = 4 [default = false];</code>
     */
    public boolean getSpectateOnly() {
      return spectateOnly_;
    }
    /**
     * <code>optional bool spectateOnly = 4 [default = false];</code>
     */
    private void setSpectateOnly(boolean value) {
      bitField0_ |= 0x00000008;
      spectateOnly_ = value;
    }
    /**
     * <code>optional bool spectateOnly = 4 [default = false];</code>
     */
    private void clearSpectateOnly() {
      bitField0_ = (bitField0_ & ~0x00000008);
      spectateOnly_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getPassword());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, autoLeave_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, spectateOnly_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPassword());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, autoLeave_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, spectateOnly_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code JoinExistingGameMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:JoinExistingGameMessage)
        de.pokerth.protocol.ProtoBuf.JoinExistingGameMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>optional string password = 2;</code>
       */
      public boolean hasPassword() {
        return instance.hasPassword();
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public java.lang.String getPassword() {
        return instance.getPassword();
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        return instance.getPasswordBytes();
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        copyOnWrite();
        instance.setPassword(value);
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder clearPassword() {
        copyOnWrite();
        instance.clearPassword();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPasswordBytes(value);
        return this;
      }

      /**
       * <code>optional bool autoLeave = 3 [default = false];</code>
       */
      public boolean hasAutoLeave() {
        return instance.hasAutoLeave();
      }
      /**
       * <code>optional bool autoLeave = 3 [default = false];</code>
       */
      public boolean getAutoLeave() {
        return instance.getAutoLeave();
      }
      /**
       * <code>optional bool autoLeave = 3 [default = false];</code>
       */
      public Builder setAutoLeave(boolean value) {
        copyOnWrite();
        instance.setAutoLeave(value);
        return this;
      }
      /**
       * <code>optional bool autoLeave = 3 [default = false];</code>
       */
      public Builder clearAutoLeave() {
        copyOnWrite();
        instance.clearAutoLeave();
        return this;
      }

      /**
       * <code>optional bool spectateOnly = 4 [default = false];</code>
       */
      public boolean hasSpectateOnly() {
        return instance.hasSpectateOnly();
      }
      /**
       * <code>optional bool spectateOnly = 4 [default = false];</code>
       */
      public boolean getSpectateOnly() {
        return instance.getSpectateOnly();
      }
      /**
       * <code>optional bool spectateOnly = 4 [default = false];</code>
       */
      public Builder setSpectateOnly(boolean value) {
        copyOnWrite();
        instance.setSpectateOnly(value);
        return this;
      }
      /**
       * <code>optional bool spectateOnly = 4 [default = false];</code>
       */
      public Builder clearSpectateOnly() {
        copyOnWrite();
        instance.clearSpectateOnly();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:JoinExistingGameMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage other = (de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          password_ = visitor.visitString(
              hasPassword(), password_,
              other.hasPassword(), other.password_);
          autoLeave_ = visitor.visitBoolean(
              hasAutoLeave(), autoLeave_,
              other.hasAutoLeave(), other.autoLeave_);
          spectateOnly_ = visitor.visitBoolean(
              hasSpectateOnly(), spectateOnly_,
              other.hasSpectateOnly(), other.spectateOnly_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  password_ = s;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  autoLeave_ = input.readBool();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  spectateOnly_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:JoinExistingGameMessage)
    private static final de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new JoinExistingGameMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<JoinExistingGameMessage> PARSER;

    public static com.google.protobuf.Parser<JoinExistingGameMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface JoinNewGameMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:JoinNewGameMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .NetGameInfo gameInfo = 1;</code>
     */
    boolean hasGameInfo();
    /**
     * <code>required .NetGameInfo gameInfo = 1;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameInfo getGameInfo();

    /**
     * <code>optional string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>optional bool autoLeave = 3;</code>
     */
    boolean hasAutoLeave();
    /**
     * <code>optional bool autoLeave = 3;</code>
     */
    boolean getAutoLeave();
  }
  /**
   * Protobuf type {@code JoinNewGameMessage}
   */
  public  static final class JoinNewGameMessage extends
      com.google.protobuf.GeneratedMessageLite<
          JoinNewGameMessage, JoinNewGameMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:JoinNewGameMessage)
      JoinNewGameMessageOrBuilder {
    private JoinNewGameMessage() {
      password_ = "";
    }
    private int bitField0_;
    public static final int GAMEINFO_FIELD_NUMBER = 1;
    private de.pokerth.protocol.ProtoBuf.NetGameInfo gameInfo_;
    /**
     * <code>required .NetGameInfo gameInfo = 1;</code>
     */
    public boolean hasGameInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .NetGameInfo gameInfo = 1;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameInfo getGameInfo() {
      return gameInfo_ == null ? de.pokerth.protocol.ProtoBuf.NetGameInfo.getDefaultInstance() : gameInfo_;
    }
    /**
     * <code>required .NetGameInfo gameInfo = 1;</code>
     */
    private void setGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameInfo_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>required .NetGameInfo gameInfo = 1;</code>
     */
    private void setGameInfo(
        de.pokerth.protocol.ProtoBuf.NetGameInfo.Builder builderForValue) {
      gameInfo_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .NetGameInfo gameInfo = 1;</code>
     */
    private void mergeGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
      if (gameInfo_ != null &&
          gameInfo_ != de.pokerth.protocol.ProtoBuf.NetGameInfo.getDefaultInstance()) {
        gameInfo_ =
          de.pokerth.protocol.ProtoBuf.NetGameInfo.newBuilder(gameInfo_).mergeFrom(value).buildPartial();
      } else {
        gameInfo_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .NetGameInfo gameInfo = 1;</code>
     */
    private void clearGameInfo() {  gameInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private java.lang.String password_;
    /**
     * <code>optional string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public java.lang.String getPassword() {
      return password_;
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(password_);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    private void setPassword(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value;
    }
    /**
     * <code>optional string password = 2;</code>
     */
    private void clearPassword() {
      bitField0_ = (bitField0_ & ~0x00000002);
      password_ = getDefaultInstance().getPassword();
    }
    /**
     * <code>optional string password = 2;</code>
     */
    private void setPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value.toStringUtf8();
    }

    public static final int AUTOLEAVE_FIELD_NUMBER = 3;
    private boolean autoLeave_;
    /**
     * <code>optional bool autoLeave = 3;</code>
     */
    public boolean hasAutoLeave() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool autoLeave = 3;</code>
     */
    public boolean getAutoLeave() {
      return autoLeave_;
    }
    /**
     * <code>optional bool autoLeave = 3;</code>
     */
    private void setAutoLeave(boolean value) {
      bitField0_ |= 0x00000004;
      autoLeave_ = value;
    }
    /**
     * <code>optional bool autoLeave = 3;</code>
     */
    private void clearAutoLeave() {
      bitField0_ = (bitField0_ & ~0x00000004);
      autoLeave_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getGameInfo());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getPassword());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, autoLeave_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGameInfo());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPassword());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, autoLeave_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.JoinNewGameMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinNewGameMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinNewGameMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinNewGameMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinNewGameMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinNewGameMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinNewGameMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinNewGameMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinNewGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinNewGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.JoinNewGameMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code JoinNewGameMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.JoinNewGameMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:JoinNewGameMessage)
        de.pokerth.protocol.ProtoBuf.JoinNewGameMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.JoinNewGameMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .NetGameInfo gameInfo = 1;</code>
       */
      public boolean hasGameInfo() {
        return instance.hasGameInfo();
      }
      /**
       * <code>required .NetGameInfo gameInfo = 1;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameInfo getGameInfo() {
        return instance.getGameInfo();
      }
      /**
       * <code>required .NetGameInfo gameInfo = 1;</code>
       */
      public Builder setGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
        copyOnWrite();
        instance.setGameInfo(value);
        return this;
        }
      /**
       * <code>required .NetGameInfo gameInfo = 1;</code>
       */
      public Builder setGameInfo(
          de.pokerth.protocol.ProtoBuf.NetGameInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setGameInfo(builderForValue);
        return this;
      }
      /**
       * <code>required .NetGameInfo gameInfo = 1;</code>
       */
      public Builder mergeGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
        copyOnWrite();
        instance.mergeGameInfo(value);
        return this;
      }
      /**
       * <code>required .NetGameInfo gameInfo = 1;</code>
       */
      public Builder clearGameInfo() {  copyOnWrite();
        instance.clearGameInfo();
        return this;
      }

      /**
       * <code>optional string password = 2;</code>
       */
      public boolean hasPassword() {
        return instance.hasPassword();
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public java.lang.String getPassword() {
        return instance.getPassword();
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        return instance.getPasswordBytes();
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        copyOnWrite();
        instance.setPassword(value);
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder clearPassword() {
        copyOnWrite();
        instance.clearPassword();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPasswordBytes(value);
        return this;
      }

      /**
       * <code>optional bool autoLeave = 3;</code>
       */
      public boolean hasAutoLeave() {
        return instance.hasAutoLeave();
      }
      /**
       * <code>optional bool autoLeave = 3;</code>
       */
      public boolean getAutoLeave() {
        return instance.getAutoLeave();
      }
      /**
       * <code>optional bool autoLeave = 3;</code>
       */
      public Builder setAutoLeave(boolean value) {
        copyOnWrite();
        instance.setAutoLeave(value);
        return this;
      }
      /**
       * <code>optional bool autoLeave = 3;</code>
       */
      public Builder clearAutoLeave() {
        copyOnWrite();
        instance.clearAutoLeave();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:JoinNewGameMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.JoinNewGameMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameInfo()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getGameInfo().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.JoinNewGameMessage other = (de.pokerth.protocol.ProtoBuf.JoinNewGameMessage) arg1;
          gameInfo_ = visitor.visitMessage(gameInfo_, other.gameInfo_);
          password_ = visitor.visitString(
              hasPassword(), password_,
              other.hasPassword(), other.password_);
          autoLeave_ = visitor.visitBoolean(
              hasAutoLeave(), autoLeave_,
              other.hasAutoLeave(), other.autoLeave_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  de.pokerth.protocol.ProtoBuf.NetGameInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = gameInfo_.toBuilder();
                  }
                  gameInfo_ = input.readMessage(de.pokerth.protocol.ProtoBuf.NetGameInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameInfo_);
                    gameInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  password_ = s;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  autoLeave_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.JoinNewGameMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:JoinNewGameMessage)
    private static final de.pokerth.protocol.ProtoBuf.JoinNewGameMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new JoinNewGameMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.JoinNewGameMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<JoinNewGameMessage> PARSER;

    public static com.google.protobuf.Parser<JoinNewGameMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RejoinExistingGameMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RejoinExistingGameMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>optional bool autoLeave = 2;</code>
     */
    boolean hasAutoLeave();
    /**
     * <code>optional bool autoLeave = 2;</code>
     */
    boolean getAutoLeave();
  }
  /**
   * Protobuf type {@code RejoinExistingGameMessage}
   */
  public  static final class RejoinExistingGameMessage extends
      com.google.protobuf.GeneratedMessageLite<
          RejoinExistingGameMessage, RejoinExistingGameMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:RejoinExistingGameMessage)
      RejoinExistingGameMessageOrBuilder {
    private RejoinExistingGameMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int AUTOLEAVE_FIELD_NUMBER = 2;
    private boolean autoLeave_;
    /**
     * <code>optional bool autoLeave = 2;</code>
     */
    public boolean hasAutoLeave() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool autoLeave = 2;</code>
     */
    public boolean getAutoLeave() {
      return autoLeave_;
    }
    /**
     * <code>optional bool autoLeave = 2;</code>
     */
    private void setAutoLeave(boolean value) {
      bitField0_ |= 0x00000002;
      autoLeave_ = value;
    }
    /**
     * <code>optional bool autoLeave = 2;</code>
     */
    private void clearAutoLeave() {
      bitField0_ = (bitField0_ & ~0x00000002);
      autoLeave_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, autoLeave_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, autoLeave_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code RejoinExistingGameMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:RejoinExistingGameMessage)
        de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>optional bool autoLeave = 2;</code>
       */
      public boolean hasAutoLeave() {
        return instance.hasAutoLeave();
      }
      /**
       * <code>optional bool autoLeave = 2;</code>
       */
      public boolean getAutoLeave() {
        return instance.getAutoLeave();
      }
      /**
       * <code>optional bool autoLeave = 2;</code>
       */
      public Builder setAutoLeave(boolean value) {
        copyOnWrite();
        instance.setAutoLeave(value);
        return this;
      }
      /**
       * <code>optional bool autoLeave = 2;</code>
       */
      public Builder clearAutoLeave() {
        copyOnWrite();
        instance.clearAutoLeave();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RejoinExistingGameMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage other = (de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          autoLeave_ = visitor.visitBoolean(
              hasAutoLeave(), autoLeave_,
              other.hasAutoLeave(), other.autoLeave_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  autoLeave_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:RejoinExistingGameMessage)
    private static final de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RejoinExistingGameMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RejoinExistingGameMessage> PARSER;

    public static com.google.protobuf.Parser<RejoinExistingGameMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface JoinGameAckMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:JoinGameAckMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required bool areYouGameAdmin = 2;</code>
     */
    boolean hasAreYouGameAdmin();
    /**
     * <code>required bool areYouGameAdmin = 2;</code>
     */
    boolean getAreYouGameAdmin();

    /**
     * <code>required .NetGameInfo gameInfo = 3;</code>
     */
    boolean hasGameInfo();
    /**
     * <code>required .NetGameInfo gameInfo = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameInfo getGameInfo();

    /**
     * <code>optional bool spectateOnly = 4;</code>
     */
    boolean hasSpectateOnly();
    /**
     * <code>optional bool spectateOnly = 4;</code>
     */
    boolean getSpectateOnly();
  }
  /**
   * Protobuf type {@code JoinGameAckMessage}
   */
  public  static final class JoinGameAckMessage extends
      com.google.protobuf.GeneratedMessageLite<
          JoinGameAckMessage, JoinGameAckMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:JoinGameAckMessage)
      JoinGameAckMessageOrBuilder {
    private JoinGameAckMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int AREYOUGAMEADMIN_FIELD_NUMBER = 2;
    private boolean areYouGameAdmin_;
    /**
     * <code>required bool areYouGameAdmin = 2;</code>
     */
    public boolean hasAreYouGameAdmin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool areYouGameAdmin = 2;</code>
     */
    public boolean getAreYouGameAdmin() {
      return areYouGameAdmin_;
    }
    /**
     * <code>required bool areYouGameAdmin = 2;</code>
     */
    private void setAreYouGameAdmin(boolean value) {
      bitField0_ |= 0x00000002;
      areYouGameAdmin_ = value;
    }
    /**
     * <code>required bool areYouGameAdmin = 2;</code>
     */
    private void clearAreYouGameAdmin() {
      bitField0_ = (bitField0_ & ~0x00000002);
      areYouGameAdmin_ = false;
    }

    public static final int GAMEINFO_FIELD_NUMBER = 3;
    private de.pokerth.protocol.ProtoBuf.NetGameInfo gameInfo_;
    /**
     * <code>required .NetGameInfo gameInfo = 3;</code>
     */
    public boolean hasGameInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .NetGameInfo gameInfo = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameInfo getGameInfo() {
      return gameInfo_ == null ? de.pokerth.protocol.ProtoBuf.NetGameInfo.getDefaultInstance() : gameInfo_;
    }
    /**
     * <code>required .NetGameInfo gameInfo = 3;</code>
     */
    private void setGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameInfo_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>required .NetGameInfo gameInfo = 3;</code>
     */
    private void setGameInfo(
        de.pokerth.protocol.ProtoBuf.NetGameInfo.Builder builderForValue) {
      gameInfo_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>required .NetGameInfo gameInfo = 3;</code>
     */
    private void mergeGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
      if (gameInfo_ != null &&
          gameInfo_ != de.pokerth.protocol.ProtoBuf.NetGameInfo.getDefaultInstance()) {
        gameInfo_ =
          de.pokerth.protocol.ProtoBuf.NetGameInfo.newBuilder(gameInfo_).mergeFrom(value).buildPartial();
      } else {
        gameInfo_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>required .NetGameInfo gameInfo = 3;</code>
     */
    private void clearGameInfo() {  gameInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int SPECTATEONLY_FIELD_NUMBER = 4;
    private boolean spectateOnly_;
    /**
     * <code>optional bool spectateOnly = 4;</code>
     */
    public boolean hasSpectateOnly() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool spectateOnly = 4;</code>
     */
    public boolean getSpectateOnly() {
      return spectateOnly_;
    }
    /**
     * <code>optional bool spectateOnly = 4;</code>
     */
    private void setSpectateOnly(boolean value) {
      bitField0_ |= 0x00000008;
      spectateOnly_ = value;
    }
    /**
     * <code>optional bool spectateOnly = 4;</code>
     */
    private void clearSpectateOnly() {
      bitField0_ = (bitField0_ & ~0x00000008);
      spectateOnly_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, areYouGameAdmin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getGameInfo());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, spectateOnly_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, areYouGameAdmin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGameInfo());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, spectateOnly_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.JoinGameAckMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameAckMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameAckMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameAckMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameAckMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameAckMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameAckMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameAckMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.JoinGameAckMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code JoinGameAckMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.JoinGameAckMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:JoinGameAckMessage)
        de.pokerth.protocol.ProtoBuf.JoinGameAckMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.JoinGameAckMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required bool areYouGameAdmin = 2;</code>
       */
      public boolean hasAreYouGameAdmin() {
        return instance.hasAreYouGameAdmin();
      }
      /**
       * <code>required bool areYouGameAdmin = 2;</code>
       */
      public boolean getAreYouGameAdmin() {
        return instance.getAreYouGameAdmin();
      }
      /**
       * <code>required bool areYouGameAdmin = 2;</code>
       */
      public Builder setAreYouGameAdmin(boolean value) {
        copyOnWrite();
        instance.setAreYouGameAdmin(value);
        return this;
      }
      /**
       * <code>required bool areYouGameAdmin = 2;</code>
       */
      public Builder clearAreYouGameAdmin() {
        copyOnWrite();
        instance.clearAreYouGameAdmin();
        return this;
      }

      /**
       * <code>required .NetGameInfo gameInfo = 3;</code>
       */
      public boolean hasGameInfo() {
        return instance.hasGameInfo();
      }
      /**
       * <code>required .NetGameInfo gameInfo = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameInfo getGameInfo() {
        return instance.getGameInfo();
      }
      /**
       * <code>required .NetGameInfo gameInfo = 3;</code>
       */
      public Builder setGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
        copyOnWrite();
        instance.setGameInfo(value);
        return this;
        }
      /**
       * <code>required .NetGameInfo gameInfo = 3;</code>
       */
      public Builder setGameInfo(
          de.pokerth.protocol.ProtoBuf.NetGameInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setGameInfo(builderForValue);
        return this;
      }
      /**
       * <code>required .NetGameInfo gameInfo = 3;</code>
       */
      public Builder mergeGameInfo(de.pokerth.protocol.ProtoBuf.NetGameInfo value) {
        copyOnWrite();
        instance.mergeGameInfo(value);
        return this;
      }
      /**
       * <code>required .NetGameInfo gameInfo = 3;</code>
       */
      public Builder clearGameInfo() {  copyOnWrite();
        instance.clearGameInfo();
        return this;
      }

      /**
       * <code>optional bool spectateOnly = 4;</code>
       */
      public boolean hasSpectateOnly() {
        return instance.hasSpectateOnly();
      }
      /**
       * <code>optional bool spectateOnly = 4;</code>
       */
      public boolean getSpectateOnly() {
        return instance.getSpectateOnly();
      }
      /**
       * <code>optional bool spectateOnly = 4;</code>
       */
      public Builder setSpectateOnly(boolean value) {
        copyOnWrite();
        instance.setSpectateOnly(value);
        return this;
      }
      /**
       * <code>optional bool spectateOnly = 4;</code>
       */
      public Builder clearSpectateOnly() {
        copyOnWrite();
        instance.clearSpectateOnly();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:JoinGameAckMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.JoinGameAckMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAreYouGameAdmin()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGameInfo()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getGameInfo().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.JoinGameAckMessage other = (de.pokerth.protocol.ProtoBuf.JoinGameAckMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          areYouGameAdmin_ = visitor.visitBoolean(
              hasAreYouGameAdmin(), areYouGameAdmin_,
              other.hasAreYouGameAdmin(), other.areYouGameAdmin_);
          gameInfo_ = visitor.visitMessage(gameInfo_, other.gameInfo_);
          spectateOnly_ = visitor.visitBoolean(
              hasSpectateOnly(), spectateOnly_,
              other.hasSpectateOnly(), other.spectateOnly_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  areYouGameAdmin_ = input.readBool();
                  break;
                }
                case 26: {
                  de.pokerth.protocol.ProtoBuf.NetGameInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = gameInfo_.toBuilder();
                  }
                  gameInfo_ = input.readMessage(de.pokerth.protocol.ProtoBuf.NetGameInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameInfo_);
                    gameInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  spectateOnly_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.JoinGameAckMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:JoinGameAckMessage)
    private static final de.pokerth.protocol.ProtoBuf.JoinGameAckMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new JoinGameAckMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.JoinGameAckMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<JoinGameAckMessage> PARSER;

    public static com.google.protobuf.Parser<JoinGameAckMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface JoinGameFailedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:JoinGameFailedMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required .JoinGameFailedMessage.JoinGameFailureReason joinGameFailureReason = 2;</code>
     */
    boolean hasJoinGameFailureReason();
    /**
     * <code>required .JoinGameFailedMessage.JoinGameFailureReason joinGameFailureReason = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.JoinGameFailureReason getJoinGameFailureReason();
  }
  /**
   * Protobuf type {@code JoinGameFailedMessage}
   */
  public  static final class JoinGameFailedMessage extends
      com.google.protobuf.GeneratedMessageLite<
          JoinGameFailedMessage, JoinGameFailedMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:JoinGameFailedMessage)
      JoinGameFailedMessageOrBuilder {
    private JoinGameFailedMessage() {
      joinGameFailureReason_ = 1;
    }
    /**
     * Protobuf enum {@code JoinGameFailedMessage.JoinGameFailureReason}
     */
    public enum JoinGameFailureReason
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>invalidGame = 1;</code>
       */
      invalidGame(1),
      /**
       * <code>gameIsFull = 2;</code>
       */
      gameIsFull(2),
      /**
       * <code>gameIsRunning = 3;</code>
       */
      gameIsRunning(3),
      /**
       * <code>invalidPassword = 4;</code>
       */
      invalidPassword(4),
      /**
       * <code>notAllowedAsGuest = 5;</code>
       */
      notAllowedAsGuest(5),
      /**
       * <code>notInvited = 6;</code>
       */
      notInvited(6),
      /**
       * <code>gameNameInUse = 7;</code>
       */
      gameNameInUse(7),
      /**
       * <code>badGameName = 8;</code>
       */
      badGameName(8),
      /**
       * <code>invalidSettings = 9;</code>
       */
      invalidSettings(9),
      /**
       * <code>ipAddressBlocked = 10;</code>
       */
      ipAddressBlocked(10),
      /**
       * <code>rejoinFailed = 11;</code>
       */
      rejoinFailed(11),
      /**
       * <code>noSpectatorsAllowed = 12;</code>
       */
      noSpectatorsAllowed(12),
      ;

      /**
       * <code>invalidGame = 1;</code>
       */
      public static final int invalidGame_VALUE = 1;
      /**
       * <code>gameIsFull = 2;</code>
       */
      public static final int gameIsFull_VALUE = 2;
      /**
       * <code>gameIsRunning = 3;</code>
       */
      public static final int gameIsRunning_VALUE = 3;
      /**
       * <code>invalidPassword = 4;</code>
       */
      public static final int invalidPassword_VALUE = 4;
      /**
       * <code>notAllowedAsGuest = 5;</code>
       */
      public static final int notAllowedAsGuest_VALUE = 5;
      /**
       * <code>notInvited = 6;</code>
       */
      public static final int notInvited_VALUE = 6;
      /**
       * <code>gameNameInUse = 7;</code>
       */
      public static final int gameNameInUse_VALUE = 7;
      /**
       * <code>badGameName = 8;</code>
       */
      public static final int badGameName_VALUE = 8;
      /**
       * <code>invalidSettings = 9;</code>
       */
      public static final int invalidSettings_VALUE = 9;
      /**
       * <code>ipAddressBlocked = 10;</code>
       */
      public static final int ipAddressBlocked_VALUE = 10;
      /**
       * <code>rejoinFailed = 11;</code>
       */
      public static final int rejoinFailed_VALUE = 11;
      /**
       * <code>noSpectatorsAllowed = 12;</code>
       */
      public static final int noSpectatorsAllowed_VALUE = 12;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static JoinGameFailureReason valueOf(int value) {
        return forNumber(value);
      }

      public static JoinGameFailureReason forNumber(int value) {
        switch (value) {
          case 1: return invalidGame;
          case 2: return gameIsFull;
          case 3: return gameIsRunning;
          case 4: return invalidPassword;
          case 5: return notAllowedAsGuest;
          case 6: return notInvited;
          case 7: return gameNameInUse;
          case 8: return badGameName;
          case 9: return invalidSettings;
          case 10: return ipAddressBlocked;
          case 11: return rejoinFailed;
          case 12: return noSpectatorsAllowed;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<JoinGameFailureReason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          JoinGameFailureReason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<JoinGameFailureReason>() {
              public JoinGameFailureReason findValueByNumber(int number) {
                return JoinGameFailureReason.forNumber(number);
              }
            };

      private final int value;

      private JoinGameFailureReason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:JoinGameFailedMessage.JoinGameFailureReason)
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int JOINGAMEFAILUREREASON_FIELD_NUMBER = 2;
    private int joinGameFailureReason_;
    /**
     * <code>required .JoinGameFailedMessage.JoinGameFailureReason joinGameFailureReason = 2;</code>
     */
    public boolean hasJoinGameFailureReason() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .JoinGameFailedMessage.JoinGameFailureReason joinGameFailureReason = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.JoinGameFailureReason getJoinGameFailureReason() {
      de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.JoinGameFailureReason result = de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.JoinGameFailureReason.forNumber(joinGameFailureReason_);
      return result == null ? de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.JoinGameFailureReason.invalidGame : result;
    }
    /**
     * <code>required .JoinGameFailedMessage.JoinGameFailureReason joinGameFailureReason = 2;</code>
     */
    private void setJoinGameFailureReason(de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.JoinGameFailureReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      joinGameFailureReason_ = value.getNumber();
    }
    /**
     * <code>required .JoinGameFailedMessage.JoinGameFailureReason joinGameFailureReason = 2;</code>
     */
    private void clearJoinGameFailureReason() {
      bitField0_ = (bitField0_ & ~0x00000002);
      joinGameFailureReason_ = 1;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, joinGameFailureReason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, joinGameFailureReason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code JoinGameFailedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:JoinGameFailedMessage)
        de.pokerth.protocol.ProtoBuf.JoinGameFailedMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required .JoinGameFailedMessage.JoinGameFailureReason joinGameFailureReason = 2;</code>
       */
      public boolean hasJoinGameFailureReason() {
        return instance.hasJoinGameFailureReason();
      }
      /**
       * <code>required .JoinGameFailedMessage.JoinGameFailureReason joinGameFailureReason = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.JoinGameFailureReason getJoinGameFailureReason() {
        return instance.getJoinGameFailureReason();
      }
      /**
       * <code>required .JoinGameFailedMessage.JoinGameFailureReason joinGameFailureReason = 2;</code>
       */
      public Builder setJoinGameFailureReason(de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.JoinGameFailureReason value) {
        copyOnWrite();
        instance.setJoinGameFailureReason(value);
        return this;
      }
      /**
       * <code>required .JoinGameFailedMessage.JoinGameFailureReason joinGameFailureReason = 2;</code>
       */
      public Builder clearJoinGameFailureReason() {
        copyOnWrite();
        instance.clearJoinGameFailureReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:JoinGameFailedMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasJoinGameFailureReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage other = (de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          joinGameFailureReason_ = visitor.visitInt(hasJoinGameFailureReason(), joinGameFailureReason_,
              other.hasJoinGameFailureReason(), other.joinGameFailureReason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.JoinGameFailureReason value = de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.JoinGameFailureReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    joinGameFailureReason_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:JoinGameFailedMessage)
    private static final de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new JoinGameFailedMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<JoinGameFailedMessage> PARSER;

    public static com.google.protobuf.Parser<JoinGameFailedMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GamePlayerJoinedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GamePlayerJoinedMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>required bool isGameAdmin = 3;</code>
     */
    boolean hasIsGameAdmin();
    /**
     * <code>required bool isGameAdmin = 3;</code>
     */
    boolean getIsGameAdmin();
  }
  /**
   * Protobuf type {@code GamePlayerJoinedMessage}
   */
  public  static final class GamePlayerJoinedMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GamePlayerJoinedMessage, GamePlayerJoinedMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GamePlayerJoinedMessage)
      GamePlayerJoinedMessageOrBuilder {
    private GamePlayerJoinedMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public static final int ISGAMEADMIN_FIELD_NUMBER = 3;
    private boolean isGameAdmin_;
    /**
     * <code>required bool isGameAdmin = 3;</code>
     */
    public boolean hasIsGameAdmin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool isGameAdmin = 3;</code>
     */
    public boolean getIsGameAdmin() {
      return isGameAdmin_;
    }
    /**
     * <code>required bool isGameAdmin = 3;</code>
     */
    private void setIsGameAdmin(boolean value) {
      bitField0_ |= 0x00000004;
      isGameAdmin_ = value;
    }
    /**
     * <code>required bool isGameAdmin = 3;</code>
     */
    private void clearIsGameAdmin() {
      bitField0_ = (bitField0_ & ~0x00000004);
      isGameAdmin_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isGameAdmin_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isGameAdmin_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GamePlayerJoinedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GamePlayerJoinedMessage)
        de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>required bool isGameAdmin = 3;</code>
       */
      public boolean hasIsGameAdmin() {
        return instance.hasIsGameAdmin();
      }
      /**
       * <code>required bool isGameAdmin = 3;</code>
       */
      public boolean getIsGameAdmin() {
        return instance.getIsGameAdmin();
      }
      /**
       * <code>required bool isGameAdmin = 3;</code>
       */
      public Builder setIsGameAdmin(boolean value) {
        copyOnWrite();
        instance.setIsGameAdmin(value);
        return this;
      }
      /**
       * <code>required bool isGameAdmin = 3;</code>
       */
      public Builder clearIsGameAdmin() {
        copyOnWrite();
        instance.clearIsGameAdmin();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GamePlayerJoinedMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasIsGameAdmin()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage other = (de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          isGameAdmin_ = visitor.visitBoolean(
              hasIsGameAdmin(), isGameAdmin_,
              other.hasIsGameAdmin(), other.isGameAdmin_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  isGameAdmin_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GamePlayerJoinedMessage)
    private static final de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GamePlayerJoinedMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GamePlayerJoinedMessage> PARSER;

    public static com.google.protobuf.Parser<GamePlayerJoinedMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GamePlayerLeftMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GamePlayerLeftMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gamePlayerLeftReason = 3;</code>
     */
    boolean hasGamePlayerLeftReason();
    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gamePlayerLeftReason = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason getGamePlayerLeftReason();
  }
  /**
   * Protobuf type {@code GamePlayerLeftMessage}
   */
  public  static final class GamePlayerLeftMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GamePlayerLeftMessage, GamePlayerLeftMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GamePlayerLeftMessage)
      GamePlayerLeftMessageOrBuilder {
    private GamePlayerLeftMessage() {
    }
    /**
     * Protobuf enum {@code GamePlayerLeftMessage.GamePlayerLeftReason}
     */
    public enum GamePlayerLeftReason
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>leftOnRequest = 0;</code>
       */
      leftOnRequest(0),
      /**
       * <code>leftKicked = 1;</code>
       */
      leftKicked(1),
      /**
       * <code>leftError = 2;</code>
       */
      leftError(2),
      ;

      /**
       * <code>leftOnRequest = 0;</code>
       */
      public static final int leftOnRequest_VALUE = 0;
      /**
       * <code>leftKicked = 1;</code>
       */
      public static final int leftKicked_VALUE = 1;
      /**
       * <code>leftError = 2;</code>
       */
      public static final int leftError_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static GamePlayerLeftReason valueOf(int value) {
        return forNumber(value);
      }

      public static GamePlayerLeftReason forNumber(int value) {
        switch (value) {
          case 0: return leftOnRequest;
          case 1: return leftKicked;
          case 2: return leftError;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<GamePlayerLeftReason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          GamePlayerLeftReason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<GamePlayerLeftReason>() {
              public GamePlayerLeftReason findValueByNumber(int number) {
                return GamePlayerLeftReason.forNumber(number);
              }
            };

      private final int value;

      private GamePlayerLeftReason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:GamePlayerLeftMessage.GamePlayerLeftReason)
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public static final int GAMEPLAYERLEFTREASON_FIELD_NUMBER = 3;
    private int gamePlayerLeftReason_;
    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gamePlayerLeftReason = 3;</code>
     */
    public boolean hasGamePlayerLeftReason() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gamePlayerLeftReason = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason getGamePlayerLeftReason() {
      de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason result = de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason.forNumber(gamePlayerLeftReason_);
      return result == null ? de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason.leftOnRequest : result;
    }
    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gamePlayerLeftReason = 3;</code>
     */
    private void setGamePlayerLeftReason(de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      gamePlayerLeftReason_ = value.getNumber();
    }
    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gamePlayerLeftReason = 3;</code>
     */
    private void clearGamePlayerLeftReason() {
      bitField0_ = (bitField0_ & ~0x00000004);
      gamePlayerLeftReason_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, gamePlayerLeftReason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, gamePlayerLeftReason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GamePlayerLeftMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GamePlayerLeftMessage)
        de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gamePlayerLeftReason = 3;</code>
       */
      public boolean hasGamePlayerLeftReason() {
        return instance.hasGamePlayerLeftReason();
      }
      /**
       * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gamePlayerLeftReason = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason getGamePlayerLeftReason() {
        return instance.getGamePlayerLeftReason();
      }
      /**
       * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gamePlayerLeftReason = 3;</code>
       */
      public Builder setGamePlayerLeftReason(de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason value) {
        copyOnWrite();
        instance.setGamePlayerLeftReason(value);
        return this;
      }
      /**
       * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gamePlayerLeftReason = 3;</code>
       */
      public Builder clearGamePlayerLeftReason() {
        copyOnWrite();
        instance.clearGamePlayerLeftReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GamePlayerLeftMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGamePlayerLeftReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage other = (de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          gamePlayerLeftReason_ = visitor.visitInt(hasGamePlayerLeftReason(), gamePlayerLeftReason_,
              other.hasGamePlayerLeftReason(), other.gamePlayerLeftReason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason value = de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    gamePlayerLeftReason_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GamePlayerLeftMessage)
    private static final de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GamePlayerLeftMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GamePlayerLeftMessage> PARSER;

    public static com.google.protobuf.Parser<GamePlayerLeftMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameSpectatorJoinedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameSpectatorJoinedMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code GameSpectatorJoinedMessage}
   */
  public  static final class GameSpectatorJoinedMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameSpectatorJoinedMessage, GameSpectatorJoinedMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameSpectatorJoinedMessage)
      GameSpectatorJoinedMessageOrBuilder {
    private GameSpectatorJoinedMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameSpectatorJoinedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameSpectatorJoinedMessage)
        de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameSpectatorJoinedMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage other = (de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameSpectatorJoinedMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameSpectatorJoinedMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameSpectatorJoinedMessage> PARSER;

    public static com.google.protobuf.Parser<GameSpectatorJoinedMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameSpectatorLeftMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameSpectatorLeftMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gameSpectatorLeftReason = 3;</code>
     */
    boolean hasGameSpectatorLeftReason();
    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gameSpectatorLeftReason = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason getGameSpectatorLeftReason();
  }
  /**
   * Protobuf type {@code GameSpectatorLeftMessage}
   */
  public  static final class GameSpectatorLeftMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameSpectatorLeftMessage, GameSpectatorLeftMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameSpectatorLeftMessage)
      GameSpectatorLeftMessageOrBuilder {
    private GameSpectatorLeftMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public static final int GAMESPECTATORLEFTREASON_FIELD_NUMBER = 3;
    private int gameSpectatorLeftReason_;
    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gameSpectatorLeftReason = 3;</code>
     */
    public boolean hasGameSpectatorLeftReason() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gameSpectatorLeftReason = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason getGameSpectatorLeftReason() {
      de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason result = de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason.forNumber(gameSpectatorLeftReason_);
      return result == null ? de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason.leftOnRequest : result;
    }
    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gameSpectatorLeftReason = 3;</code>
     */
    private void setGameSpectatorLeftReason(de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      gameSpectatorLeftReason_ = value.getNumber();
    }
    /**
     * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gameSpectatorLeftReason = 3;</code>
     */
    private void clearGameSpectatorLeftReason() {
      bitField0_ = (bitField0_ & ~0x00000004);
      gameSpectatorLeftReason_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, gameSpectatorLeftReason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, gameSpectatorLeftReason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameSpectatorLeftMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameSpectatorLeftMessage)
        de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gameSpectatorLeftReason = 3;</code>
       */
      public boolean hasGameSpectatorLeftReason() {
        return instance.hasGameSpectatorLeftReason();
      }
      /**
       * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gameSpectatorLeftReason = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason getGameSpectatorLeftReason() {
        return instance.getGameSpectatorLeftReason();
      }
      /**
       * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gameSpectatorLeftReason = 3;</code>
       */
      public Builder setGameSpectatorLeftReason(de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason value) {
        copyOnWrite();
        instance.setGameSpectatorLeftReason(value);
        return this;
      }
      /**
       * <code>required .GamePlayerLeftMessage.GamePlayerLeftReason gameSpectatorLeftReason = 3;</code>
       */
      public Builder clearGameSpectatorLeftReason() {
        copyOnWrite();
        instance.clearGameSpectatorLeftReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameSpectatorLeftMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGameSpectatorLeftReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage other = (de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          gameSpectatorLeftReason_ = visitor.visitInt(hasGameSpectatorLeftReason(), gameSpectatorLeftReason_,
              other.hasGameSpectatorLeftReason(), other.gameSpectatorLeftReason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason value = de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.GamePlayerLeftReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    gameSpectatorLeftReason_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameSpectatorLeftMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameSpectatorLeftMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameSpectatorLeftMessage> PARSER;

    public static com.google.protobuf.Parser<GameSpectatorLeftMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameAdminChangedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameAdminChangedMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    boolean hasNewAdminPlayerId();
    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    int getNewAdminPlayerId();
  }
  /**
   * Protobuf type {@code GameAdminChangedMessage}
   */
  public  static final class GameAdminChangedMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameAdminChangedMessage, GameAdminChangedMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameAdminChangedMessage)
      GameAdminChangedMessageOrBuilder {
    private GameAdminChangedMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int NEWADMINPLAYERID_FIELD_NUMBER = 2;
    private int newAdminPlayerId_;
    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    public boolean hasNewAdminPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    public int getNewAdminPlayerId() {
      return newAdminPlayerId_;
    }
    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    private void setNewAdminPlayerId(int value) {
      bitField0_ |= 0x00000002;
      newAdminPlayerId_ = value;
    }
    /**
     * <code>required uint32 newAdminPlayerId = 2;</code>
     */
    private void clearNewAdminPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      newAdminPlayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, newAdminPlayerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, newAdminPlayerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameAdminChangedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameAdminChangedMessage)
        de.pokerth.protocol.ProtoBuf.GameAdminChangedMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 newAdminPlayerId = 2;</code>
       */
      public boolean hasNewAdminPlayerId() {
        return instance.hasNewAdminPlayerId();
      }
      /**
       * <code>required uint32 newAdminPlayerId = 2;</code>
       */
      public int getNewAdminPlayerId() {
        return instance.getNewAdminPlayerId();
      }
      /**
       * <code>required uint32 newAdminPlayerId = 2;</code>
       */
      public Builder setNewAdminPlayerId(int value) {
        copyOnWrite();
        instance.setNewAdminPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 newAdminPlayerId = 2;</code>
       */
      public Builder clearNewAdminPlayerId() {
        copyOnWrite();
        instance.clearNewAdminPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameAdminChangedMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNewAdminPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage other = (de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          newAdminPlayerId_ = visitor.visitInt(
              hasNewAdminPlayerId(), newAdminPlayerId_,
              other.hasNewAdminPlayerId(), other.newAdminPlayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  newAdminPlayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameAdminChangedMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameAdminChangedMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameAdminChangedMessage> PARSER;

    public static com.google.protobuf.Parser<GameAdminChangedMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RemovedFromGameMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemovedFromGameMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required .RemovedFromGameMessage.RemovedFromGameReason removedFromGameReason = 2;</code>
     */
    boolean hasRemovedFromGameReason();
    /**
     * <code>required .RemovedFromGameMessage.RemovedFromGameReason removedFromGameReason = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.RemovedFromGameReason getRemovedFromGameReason();
  }
  /**
   * Protobuf type {@code RemovedFromGameMessage}
   */
  public  static final class RemovedFromGameMessage extends
      com.google.protobuf.GeneratedMessageLite<
          RemovedFromGameMessage, RemovedFromGameMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:RemovedFromGameMessage)
      RemovedFromGameMessageOrBuilder {
    private RemovedFromGameMessage() {
    }
    /**
     * Protobuf enum {@code RemovedFromGameMessage.RemovedFromGameReason}
     */
    public enum RemovedFromGameReason
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * No error, client wished to leave.
       * </pre>
       *
       * <code>removedOnRequest = 0;</code>
       */
      removedOnRequest(0),
      /**
       * <code>kickedFromGame = 1;</code>
       */
      kickedFromGame(1),
      /**
       * <code>gameIsFull = 2;</code>
       */
      gameIsFull(2),
      /**
       * <code>gameIsRunning = 3;</code>
       */
      gameIsRunning(3),
      /**
       * <code>gameTimeout = 4;</code>
       */
      gameTimeout(4),
      /**
       * <code>removedStartFailed = 5;</code>
       */
      removedStartFailed(5),
      /**
       * <code>gameClosed = 6;</code>
       */
      gameClosed(6),
      ;

      /**
       * <pre>
       * No error, client wished to leave.
       * </pre>
       *
       * <code>removedOnRequest = 0;</code>
       */
      public static final int removedOnRequest_VALUE = 0;
      /**
       * <code>kickedFromGame = 1;</code>
       */
      public static final int kickedFromGame_VALUE = 1;
      /**
       * <code>gameIsFull = 2;</code>
       */
      public static final int gameIsFull_VALUE = 2;
      /**
       * <code>gameIsRunning = 3;</code>
       */
      public static final int gameIsRunning_VALUE = 3;
      /**
       * <code>gameTimeout = 4;</code>
       */
      public static final int gameTimeout_VALUE = 4;
      /**
       * <code>removedStartFailed = 5;</code>
       */
      public static final int removedStartFailed_VALUE = 5;
      /**
       * <code>gameClosed = 6;</code>
       */
      public static final int gameClosed_VALUE = 6;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RemovedFromGameReason valueOf(int value) {
        return forNumber(value);
      }

      public static RemovedFromGameReason forNumber(int value) {
        switch (value) {
          case 0: return removedOnRequest;
          case 1: return kickedFromGame;
          case 2: return gameIsFull;
          case 3: return gameIsRunning;
          case 4: return gameTimeout;
          case 5: return removedStartFailed;
          case 6: return gameClosed;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RemovedFromGameReason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RemovedFromGameReason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RemovedFromGameReason>() {
              public RemovedFromGameReason findValueByNumber(int number) {
                return RemovedFromGameReason.forNumber(number);
              }
            };

      private final int value;

      private RemovedFromGameReason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:RemovedFromGameMessage.RemovedFromGameReason)
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int REMOVEDFROMGAMEREASON_FIELD_NUMBER = 2;
    private int removedFromGameReason_;
    /**
     * <code>required .RemovedFromGameMessage.RemovedFromGameReason removedFromGameReason = 2;</code>
     */
    public boolean hasRemovedFromGameReason() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .RemovedFromGameMessage.RemovedFromGameReason removedFromGameReason = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.RemovedFromGameReason getRemovedFromGameReason() {
      de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.RemovedFromGameReason result = de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.RemovedFromGameReason.forNumber(removedFromGameReason_);
      return result == null ? de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.RemovedFromGameReason.removedOnRequest : result;
    }
    /**
     * <code>required .RemovedFromGameMessage.RemovedFromGameReason removedFromGameReason = 2;</code>
     */
    private void setRemovedFromGameReason(de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.RemovedFromGameReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      removedFromGameReason_ = value.getNumber();
    }
    /**
     * <code>required .RemovedFromGameMessage.RemovedFromGameReason removedFromGameReason = 2;</code>
     */
    private void clearRemovedFromGameReason() {
      bitField0_ = (bitField0_ & ~0x00000002);
      removedFromGameReason_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, removedFromGameReason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, removedFromGameReason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code RemovedFromGameMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:RemovedFromGameMessage)
        de.pokerth.protocol.ProtoBuf.RemovedFromGameMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required .RemovedFromGameMessage.RemovedFromGameReason removedFromGameReason = 2;</code>
       */
      public boolean hasRemovedFromGameReason() {
        return instance.hasRemovedFromGameReason();
      }
      /**
       * <code>required .RemovedFromGameMessage.RemovedFromGameReason removedFromGameReason = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.RemovedFromGameReason getRemovedFromGameReason() {
        return instance.getRemovedFromGameReason();
      }
      /**
       * <code>required .RemovedFromGameMessage.RemovedFromGameReason removedFromGameReason = 2;</code>
       */
      public Builder setRemovedFromGameReason(de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.RemovedFromGameReason value) {
        copyOnWrite();
        instance.setRemovedFromGameReason(value);
        return this;
      }
      /**
       * <code>required .RemovedFromGameMessage.RemovedFromGameReason removedFromGameReason = 2;</code>
       */
      public Builder clearRemovedFromGameReason() {
        copyOnWrite();
        instance.clearRemovedFromGameReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RemovedFromGameMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasRemovedFromGameReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage other = (de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          removedFromGameReason_ = visitor.visitInt(hasRemovedFromGameReason(), removedFromGameReason_,
              other.hasRemovedFromGameReason(), other.removedFromGameReason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.RemovedFromGameReason value = de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.RemovedFromGameReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    removedFromGameReason_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:RemovedFromGameMessage)
    private static final de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemovedFromGameMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RemovedFromGameMessage> PARSER;

    public static com.google.protobuf.Parser<RemovedFromGameMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface KickPlayerRequestMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KickPlayerRequestMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code KickPlayerRequestMessage}
   */
  public  static final class KickPlayerRequestMessage extends
      com.google.protobuf.GeneratedMessageLite<
          KickPlayerRequestMessage, KickPlayerRequestMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:KickPlayerRequestMessage)
      KickPlayerRequestMessageOrBuilder {
    private KickPlayerRequestMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code KickPlayerRequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:KickPlayerRequestMessage)
        de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:KickPlayerRequestMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage other = (de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:KickPlayerRequestMessage)
    private static final de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new KickPlayerRequestMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<KickPlayerRequestMessage> PARSER;

    public static com.google.protobuf.Parser<KickPlayerRequestMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LeaveGameRequestMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LeaveGameRequestMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();
  }
  /**
   * Protobuf type {@code LeaveGameRequestMessage}
   */
  public  static final class LeaveGameRequestMessage extends
      com.google.protobuf.GeneratedMessageLite<
          LeaveGameRequestMessage, LeaveGameRequestMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:LeaveGameRequestMessage)
      LeaveGameRequestMessageOrBuilder {
    private LeaveGameRequestMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code LeaveGameRequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:LeaveGameRequestMessage)
        de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LeaveGameRequestMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage other = (de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:LeaveGameRequestMessage)
    private static final de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LeaveGameRequestMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LeaveGameRequestMessage> PARSER;

    public static com.google.protobuf.Parser<LeaveGameRequestMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface InvitePlayerToGameMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:InvitePlayerToGameMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code InvitePlayerToGameMessage}
   */
  public  static final class InvitePlayerToGameMessage extends
      com.google.protobuf.GeneratedMessageLite<
          InvitePlayerToGameMessage, InvitePlayerToGameMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:InvitePlayerToGameMessage)
      InvitePlayerToGameMessageOrBuilder {
    private InvitePlayerToGameMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code InvitePlayerToGameMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:InvitePlayerToGameMessage)
        de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:InvitePlayerToGameMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage other = (de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:InvitePlayerToGameMessage)
    private static final de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new InvitePlayerToGameMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<InvitePlayerToGameMessage> PARSER;

    public static com.google.protobuf.Parser<InvitePlayerToGameMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface InviteNotifyMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:InviteNotifyMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerIdWho = 2;</code>
     */
    boolean hasPlayerIdWho();
    /**
     * <code>required uint32 playerIdWho = 2;</code>
     */
    int getPlayerIdWho();

    /**
     * <code>required uint32 playerIdByWhom = 3;</code>
     */
    boolean hasPlayerIdByWhom();
    /**
     * <code>required uint32 playerIdByWhom = 3;</code>
     */
    int getPlayerIdByWhom();
  }
  /**
   * Protobuf type {@code InviteNotifyMessage}
   */
  public  static final class InviteNotifyMessage extends
      com.google.protobuf.GeneratedMessageLite<
          InviteNotifyMessage, InviteNotifyMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:InviteNotifyMessage)
      InviteNotifyMessageOrBuilder {
    private InviteNotifyMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERIDWHO_FIELD_NUMBER = 2;
    private int playerIdWho_;
    /**
     * <code>required uint32 playerIdWho = 2;</code>
     */
    public boolean hasPlayerIdWho() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerIdWho = 2;</code>
     */
    public int getPlayerIdWho() {
      return playerIdWho_;
    }
    /**
     * <code>required uint32 playerIdWho = 2;</code>
     */
    private void setPlayerIdWho(int value) {
      bitField0_ |= 0x00000002;
      playerIdWho_ = value;
    }
    /**
     * <code>required uint32 playerIdWho = 2;</code>
     */
    private void clearPlayerIdWho() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerIdWho_ = 0;
    }

    public static final int PLAYERIDBYWHOM_FIELD_NUMBER = 3;
    private int playerIdByWhom_;
    /**
     * <code>required uint32 playerIdByWhom = 3;</code>
     */
    public boolean hasPlayerIdByWhom() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 playerIdByWhom = 3;</code>
     */
    public int getPlayerIdByWhom() {
      return playerIdByWhom_;
    }
    /**
     * <code>required uint32 playerIdByWhom = 3;</code>
     */
    private void setPlayerIdByWhom(int value) {
      bitField0_ |= 0x00000004;
      playerIdByWhom_ = value;
    }
    /**
     * <code>required uint32 playerIdByWhom = 3;</code>
     */
    private void clearPlayerIdByWhom() {
      bitField0_ = (bitField0_ & ~0x00000004);
      playerIdByWhom_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerIdWho_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, playerIdByWhom_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerIdWho_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, playerIdByWhom_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.InviteNotifyMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.InviteNotifyMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InviteNotifyMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.InviteNotifyMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InviteNotifyMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InviteNotifyMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InviteNotifyMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InviteNotifyMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.InviteNotifyMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.InviteNotifyMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.InviteNotifyMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code InviteNotifyMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.InviteNotifyMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:InviteNotifyMessage)
        de.pokerth.protocol.ProtoBuf.InviteNotifyMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.InviteNotifyMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerIdWho = 2;</code>
       */
      public boolean hasPlayerIdWho() {
        return instance.hasPlayerIdWho();
      }
      /**
       * <code>required uint32 playerIdWho = 2;</code>
       */
      public int getPlayerIdWho() {
        return instance.getPlayerIdWho();
      }
      /**
       * <code>required uint32 playerIdWho = 2;</code>
       */
      public Builder setPlayerIdWho(int value) {
        copyOnWrite();
        instance.setPlayerIdWho(value);
        return this;
      }
      /**
       * <code>required uint32 playerIdWho = 2;</code>
       */
      public Builder clearPlayerIdWho() {
        copyOnWrite();
        instance.clearPlayerIdWho();
        return this;
      }

      /**
       * <code>required uint32 playerIdByWhom = 3;</code>
       */
      public boolean hasPlayerIdByWhom() {
        return instance.hasPlayerIdByWhom();
      }
      /**
       * <code>required uint32 playerIdByWhom = 3;</code>
       */
      public int getPlayerIdByWhom() {
        return instance.getPlayerIdByWhom();
      }
      /**
       * <code>required uint32 playerIdByWhom = 3;</code>
       */
      public Builder setPlayerIdByWhom(int value) {
        copyOnWrite();
        instance.setPlayerIdByWhom(value);
        return this;
      }
      /**
       * <code>required uint32 playerIdByWhom = 3;</code>
       */
      public Builder clearPlayerIdByWhom() {
        copyOnWrite();
        instance.clearPlayerIdByWhom();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:InviteNotifyMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.InviteNotifyMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerIdWho()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerIdByWhom()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.InviteNotifyMessage other = (de.pokerth.protocol.ProtoBuf.InviteNotifyMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerIdWho_ = visitor.visitInt(
              hasPlayerIdWho(), playerIdWho_,
              other.hasPlayerIdWho(), other.playerIdWho_);
          playerIdByWhom_ = visitor.visitInt(
              hasPlayerIdByWhom(), playerIdByWhom_,
              other.hasPlayerIdByWhom(), other.playerIdByWhom_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerIdWho_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  playerIdByWhom_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.InviteNotifyMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:InviteNotifyMessage)
    private static final de.pokerth.protocol.ProtoBuf.InviteNotifyMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new InviteNotifyMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.InviteNotifyMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<InviteNotifyMessage> PARSER;

    public static com.google.protobuf.Parser<InviteNotifyMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RejectGameInvitationMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RejectGameInvitationMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason myRejectReason = 2;</code>
     */
    boolean hasMyRejectReason();
    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason myRejectReason = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason getMyRejectReason();
  }
  /**
   * Protobuf type {@code RejectGameInvitationMessage}
   */
  public  static final class RejectGameInvitationMessage extends
      com.google.protobuf.GeneratedMessageLite<
          RejectGameInvitationMessage, RejectGameInvitationMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:RejectGameInvitationMessage)
      RejectGameInvitationMessageOrBuilder {
    private RejectGameInvitationMessage() {
    }
    /**
     * Protobuf enum {@code RejectGameInvitationMessage.RejectGameInvReason}
     */
    public enum RejectGameInvReason
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>rejectReasonNo = 0;</code>
       */
      rejectReasonNo(0),
      /**
       * <code>rejectReasonBusy = 1;</code>
       */
      rejectReasonBusy(1),
      ;

      /**
       * <code>rejectReasonNo = 0;</code>
       */
      public static final int rejectReasonNo_VALUE = 0;
      /**
       * <code>rejectReasonBusy = 1;</code>
       */
      public static final int rejectReasonBusy_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RejectGameInvReason valueOf(int value) {
        return forNumber(value);
      }

      public static RejectGameInvReason forNumber(int value) {
        switch (value) {
          case 0: return rejectReasonNo;
          case 1: return rejectReasonBusy;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RejectGameInvReason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RejectGameInvReason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RejectGameInvReason>() {
              public RejectGameInvReason findValueByNumber(int number) {
                return RejectGameInvReason.forNumber(number);
              }
            };

      private final int value;

      private RejectGameInvReason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:RejectGameInvitationMessage.RejectGameInvReason)
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int MYREJECTREASON_FIELD_NUMBER = 2;
    private int myRejectReason_;
    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason myRejectReason = 2;</code>
     */
    public boolean hasMyRejectReason() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason myRejectReason = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason getMyRejectReason() {
      de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason result = de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason.forNumber(myRejectReason_);
      return result == null ? de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason.rejectReasonNo : result;
    }
    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason myRejectReason = 2;</code>
     */
    private void setMyRejectReason(de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      myRejectReason_ = value.getNumber();
    }
    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason myRejectReason = 2;</code>
     */
    private void clearMyRejectReason() {
      bitField0_ = (bitField0_ & ~0x00000002);
      myRejectReason_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, myRejectReason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, myRejectReason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code RejectGameInvitationMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:RejectGameInvitationMessage)
        de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required .RejectGameInvitationMessage.RejectGameInvReason myRejectReason = 2;</code>
       */
      public boolean hasMyRejectReason() {
        return instance.hasMyRejectReason();
      }
      /**
       * <code>required .RejectGameInvitationMessage.RejectGameInvReason myRejectReason = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason getMyRejectReason() {
        return instance.getMyRejectReason();
      }
      /**
       * <code>required .RejectGameInvitationMessage.RejectGameInvReason myRejectReason = 2;</code>
       */
      public Builder setMyRejectReason(de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason value) {
        copyOnWrite();
        instance.setMyRejectReason(value);
        return this;
      }
      /**
       * <code>required .RejectGameInvitationMessage.RejectGameInvReason myRejectReason = 2;</code>
       */
      public Builder clearMyRejectReason() {
        copyOnWrite();
        instance.clearMyRejectReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RejectGameInvitationMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMyRejectReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage other = (de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          myRejectReason_ = visitor.visitInt(hasMyRejectReason(), myRejectReason_,
              other.hasMyRejectReason(), other.myRejectReason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason value = de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    myRejectReason_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:RejectGameInvitationMessage)
    private static final de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RejectGameInvitationMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RejectGameInvitationMessage> PARSER;

    public static com.google.protobuf.Parser<RejectGameInvitationMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RejectInvNotifyMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RejectInvNotifyMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason playerRejectReason = 3;</code>
     */
    boolean hasPlayerRejectReason();
    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason playerRejectReason = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason getPlayerRejectReason();
  }
  /**
   * Protobuf type {@code RejectInvNotifyMessage}
   */
  public  static final class RejectInvNotifyMessage extends
      com.google.protobuf.GeneratedMessageLite<
          RejectInvNotifyMessage, RejectInvNotifyMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:RejectInvNotifyMessage)
      RejectInvNotifyMessageOrBuilder {
    private RejectInvNotifyMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public static final int PLAYERREJECTREASON_FIELD_NUMBER = 3;
    private int playerRejectReason_;
    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason playerRejectReason = 3;</code>
     */
    public boolean hasPlayerRejectReason() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason playerRejectReason = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason getPlayerRejectReason() {
      de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason result = de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason.forNumber(playerRejectReason_);
      return result == null ? de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason.rejectReasonNo : result;
    }
    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason playerRejectReason = 3;</code>
     */
    private void setPlayerRejectReason(de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      playerRejectReason_ = value.getNumber();
    }
    /**
     * <code>required .RejectGameInvitationMessage.RejectGameInvReason playerRejectReason = 3;</code>
     */
    private void clearPlayerRejectReason() {
      bitField0_ = (bitField0_ & ~0x00000004);
      playerRejectReason_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, playerRejectReason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, playerRejectReason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code RejectInvNotifyMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:RejectInvNotifyMessage)
        de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>required .RejectGameInvitationMessage.RejectGameInvReason playerRejectReason = 3;</code>
       */
      public boolean hasPlayerRejectReason() {
        return instance.hasPlayerRejectReason();
      }
      /**
       * <code>required .RejectGameInvitationMessage.RejectGameInvReason playerRejectReason = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason getPlayerRejectReason() {
        return instance.getPlayerRejectReason();
      }
      /**
       * <code>required .RejectGameInvitationMessage.RejectGameInvReason playerRejectReason = 3;</code>
       */
      public Builder setPlayerRejectReason(de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason value) {
        copyOnWrite();
        instance.setPlayerRejectReason(value);
        return this;
      }
      /**
       * <code>required .RejectGameInvitationMessage.RejectGameInvReason playerRejectReason = 3;</code>
       */
      public Builder clearPlayerRejectReason() {
        copyOnWrite();
        instance.clearPlayerRejectReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RejectInvNotifyMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerRejectReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage other = (de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          playerRejectReason_ = visitor.visitInt(hasPlayerRejectReason(), playerRejectReason_,
              other.hasPlayerRejectReason(), other.playerRejectReason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason value = de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.RejectGameInvReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    playerRejectReason_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:RejectInvNotifyMessage)
    private static final de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RejectInvNotifyMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RejectInvNotifyMessage> PARSER;

    public static com.google.protobuf.Parser<RejectInvNotifyMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StartEventMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StartEventMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required .StartEventMessage.StartEventType startEventType = 2;</code>
     */
    boolean hasStartEventType();
    /**
     * <code>required .StartEventMessage.StartEventType startEventType = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.StartEventMessage.StartEventType getStartEventType();

    /**
     * <code>optional bool fillWithComputerPlayers = 3;</code>
     */
    boolean hasFillWithComputerPlayers();
    /**
     * <code>optional bool fillWithComputerPlayers = 3;</code>
     */
    boolean getFillWithComputerPlayers();
  }
  /**
   * Protobuf type {@code StartEventMessage}
   */
  public  static final class StartEventMessage extends
      com.google.protobuf.GeneratedMessageLite<
          StartEventMessage, StartEventMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:StartEventMessage)
      StartEventMessageOrBuilder {
    private StartEventMessage() {
    }
    /**
     * Protobuf enum {@code StartEventMessage.StartEventType}
     */
    public enum StartEventType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>startEvent = 0;</code>
       */
      startEvent(0),
      /**
       * <code>rejoinEvent = 1;</code>
       */
      rejoinEvent(1),
      ;

      /**
       * <code>startEvent = 0;</code>
       */
      public static final int startEvent_VALUE = 0;
      /**
       * <code>rejoinEvent = 1;</code>
       */
      public static final int rejoinEvent_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static StartEventType valueOf(int value) {
        return forNumber(value);
      }

      public static StartEventType forNumber(int value) {
        switch (value) {
          case 0: return startEvent;
          case 1: return rejoinEvent;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<StartEventType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          StartEventType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<StartEventType>() {
              public StartEventType findValueByNumber(int number) {
                return StartEventType.forNumber(number);
              }
            };

      private final int value;

      private StartEventType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:StartEventMessage.StartEventType)
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int STARTEVENTTYPE_FIELD_NUMBER = 2;
    private int startEventType_;
    /**
     * <code>required .StartEventMessage.StartEventType startEventType = 2;</code>
     */
    public boolean hasStartEventType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .StartEventMessage.StartEventType startEventType = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.StartEventMessage.StartEventType getStartEventType() {
      de.pokerth.protocol.ProtoBuf.StartEventMessage.StartEventType result = de.pokerth.protocol.ProtoBuf.StartEventMessage.StartEventType.forNumber(startEventType_);
      return result == null ? de.pokerth.protocol.ProtoBuf.StartEventMessage.StartEventType.startEvent : result;
    }
    /**
     * <code>required .StartEventMessage.StartEventType startEventType = 2;</code>
     */
    private void setStartEventType(de.pokerth.protocol.ProtoBuf.StartEventMessage.StartEventType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      startEventType_ = value.getNumber();
    }
    /**
     * <code>required .StartEventMessage.StartEventType startEventType = 2;</code>
     */
    private void clearStartEventType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      startEventType_ = 0;
    }

    public static final int FILLWITHCOMPUTERPLAYERS_FIELD_NUMBER = 3;
    private boolean fillWithComputerPlayers_;
    /**
     * <code>optional bool fillWithComputerPlayers = 3;</code>
     */
    public boolean hasFillWithComputerPlayers() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool fillWithComputerPlayers = 3;</code>
     */
    public boolean getFillWithComputerPlayers() {
      return fillWithComputerPlayers_;
    }
    /**
     * <code>optional bool fillWithComputerPlayers = 3;</code>
     */
    private void setFillWithComputerPlayers(boolean value) {
      bitField0_ |= 0x00000004;
      fillWithComputerPlayers_ = value;
    }
    /**
     * <code>optional bool fillWithComputerPlayers = 3;</code>
     */
    private void clearFillWithComputerPlayers() {
      bitField0_ = (bitField0_ & ~0x00000004);
      fillWithComputerPlayers_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, startEventType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, fillWithComputerPlayers_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, startEventType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, fillWithComputerPlayers_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.StartEventMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.StartEventMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code StartEventMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.StartEventMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:StartEventMessage)
        de.pokerth.protocol.ProtoBuf.StartEventMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.StartEventMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required .StartEventMessage.StartEventType startEventType = 2;</code>
       */
      public boolean hasStartEventType() {
        return instance.hasStartEventType();
      }
      /**
       * <code>required .StartEventMessage.StartEventType startEventType = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.StartEventMessage.StartEventType getStartEventType() {
        return instance.getStartEventType();
      }
      /**
       * <code>required .StartEventMessage.StartEventType startEventType = 2;</code>
       */
      public Builder setStartEventType(de.pokerth.protocol.ProtoBuf.StartEventMessage.StartEventType value) {
        copyOnWrite();
        instance.setStartEventType(value);
        return this;
      }
      /**
       * <code>required .StartEventMessage.StartEventType startEventType = 2;</code>
       */
      public Builder clearStartEventType() {
        copyOnWrite();
        instance.clearStartEventType();
        return this;
      }

      /**
       * <code>optional bool fillWithComputerPlayers = 3;</code>
       */
      public boolean hasFillWithComputerPlayers() {
        return instance.hasFillWithComputerPlayers();
      }
      /**
       * <code>optional bool fillWithComputerPlayers = 3;</code>
       */
      public boolean getFillWithComputerPlayers() {
        return instance.getFillWithComputerPlayers();
      }
      /**
       * <code>optional bool fillWithComputerPlayers = 3;</code>
       */
      public Builder setFillWithComputerPlayers(boolean value) {
        copyOnWrite();
        instance.setFillWithComputerPlayers(value);
        return this;
      }
      /**
       * <code>optional bool fillWithComputerPlayers = 3;</code>
       */
      public Builder clearFillWithComputerPlayers() {
        copyOnWrite();
        instance.clearFillWithComputerPlayers();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StartEventMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.StartEventMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasStartEventType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.StartEventMessage other = (de.pokerth.protocol.ProtoBuf.StartEventMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          startEventType_ = visitor.visitInt(hasStartEventType(), startEventType_,
              other.hasStartEventType(), other.startEventType_);
          fillWithComputerPlayers_ = visitor.visitBoolean(
              hasFillWithComputerPlayers(), fillWithComputerPlayers_,
              other.hasFillWithComputerPlayers(), other.fillWithComputerPlayers_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.StartEventMessage.StartEventType value = de.pokerth.protocol.ProtoBuf.StartEventMessage.StartEventType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    startEventType_ = rawValue;
                  }
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  fillWithComputerPlayers_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.StartEventMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:StartEventMessage)
    private static final de.pokerth.protocol.ProtoBuf.StartEventMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StartEventMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.StartEventMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StartEventMessage> PARSER;

    public static com.google.protobuf.Parser<StartEventMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StartEventAckMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StartEventAckMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();
  }
  /**
   * Protobuf type {@code StartEventAckMessage}
   */
  public  static final class StartEventAckMessage extends
      com.google.protobuf.GeneratedMessageLite<
          StartEventAckMessage, StartEventAckMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:StartEventAckMessage)
      StartEventAckMessageOrBuilder {
    private StartEventAckMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.StartEventAckMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventAckMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventAckMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventAckMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventAckMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventAckMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventAckMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventAckMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StartEventAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.StartEventAckMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code StartEventAckMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.StartEventAckMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:StartEventAckMessage)
        de.pokerth.protocol.ProtoBuf.StartEventAckMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.StartEventAckMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StartEventAckMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.StartEventAckMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.StartEventAckMessage other = (de.pokerth.protocol.ProtoBuf.StartEventAckMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.StartEventAckMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:StartEventAckMessage)
    private static final de.pokerth.protocol.ProtoBuf.StartEventAckMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StartEventAckMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.StartEventAckMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StartEventAckMessage> PARSER;

    public static com.google.protobuf.Parser<StartEventAckMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameStartInitialMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameStartInitialMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    boolean hasStartDealerPlayerId();
    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    int getStartDealerPlayerId();

    /**
     * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getPlayerSeatsList();
    /**
     * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
     */
    int getPlayerSeatsCount();
    /**
     * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
     */
    int getPlayerSeats(int index);
  }
  /**
   * Protobuf type {@code GameStartInitialMessage}
   */
  public  static final class GameStartInitialMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameStartInitialMessage, GameStartInitialMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameStartInitialMessage)
      GameStartInitialMessageOrBuilder {
    private GameStartInitialMessage() {
      playerSeats_ = emptyIntList();
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int STARTDEALERPLAYERID_FIELD_NUMBER = 2;
    private int startDealerPlayerId_;
    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    public boolean hasStartDealerPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    public int getStartDealerPlayerId() {
      return startDealerPlayerId_;
    }
    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    private void setStartDealerPlayerId(int value) {
      bitField0_ |= 0x00000002;
      startDealerPlayerId_ = value;
    }
    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    private void clearStartDealerPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      startDealerPlayerId_ = 0;
    }

    public static final int PLAYERSEATS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList playerSeats_;
    /**
     * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getPlayerSeatsList() {
      return playerSeats_;
    }
    /**
     * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
     */
    public int getPlayerSeatsCount() {
      return playerSeats_.size();
    }
    /**
     * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
     */
    public int getPlayerSeats(int index) {
      return playerSeats_.getInt(index);
    }
    private int playerSeatsMemoizedSerializedSize = -1;
    private void ensurePlayerSeatsIsMutable() {
      if (!playerSeats_.isModifiable()) {
        playerSeats_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(playerSeats_);
       }
    }
    /**
     * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
     */
    private void setPlayerSeats(
        int index, int value) {
      ensurePlayerSeatsIsMutable();
      playerSeats_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
     */
    private void addPlayerSeats(int value) {
      ensurePlayerSeatsIsMutable();
      playerSeats_.addInt(value);
    }
    /**
     * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
     */
    private void addAllPlayerSeats(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensurePlayerSeatsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, playerSeats_);
    }
    /**
     * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
     */
    private void clearPlayerSeats() {
      playerSeats_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, startDealerPlayerId_);
      }
      if (getPlayerSeatsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(playerSeatsMemoizedSerializedSize);
      }
      for (int i = 0; i < playerSeats_.size(); i++) {
        output.writeUInt32NoTag(playerSeats_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, startDealerPlayerId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerSeats_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(playerSeats_.getInt(i));
        }
        size += dataSize;
        if (!getPlayerSeatsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        playerSeatsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameStartInitialMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartInitialMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartInitialMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartInitialMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartInitialMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartInitialMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartInitialMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartInitialMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartInitialMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartInitialMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameStartInitialMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameStartInitialMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameStartInitialMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameStartInitialMessage)
        de.pokerth.protocol.ProtoBuf.GameStartInitialMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameStartInitialMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 startDealerPlayerId = 2;</code>
       */
      public boolean hasStartDealerPlayerId() {
        return instance.hasStartDealerPlayerId();
      }
      /**
       * <code>required uint32 startDealerPlayerId = 2;</code>
       */
      public int getStartDealerPlayerId() {
        return instance.getStartDealerPlayerId();
      }
      /**
       * <code>required uint32 startDealerPlayerId = 2;</code>
       */
      public Builder setStartDealerPlayerId(int value) {
        copyOnWrite();
        instance.setStartDealerPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 startDealerPlayerId = 2;</code>
       */
      public Builder clearStartDealerPlayerId() {
        copyOnWrite();
        instance.clearStartDealerPlayerId();
        return this;
      }

      /**
       * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayerSeatsList() {
        return java.util.Collections.unmodifiableList(
            instance.getPlayerSeatsList());
      }
      /**
       * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
       */
      public int getPlayerSeatsCount() {
        return instance.getPlayerSeatsCount();
      }
      /**
       * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
       */
      public int getPlayerSeats(int index) {
        return instance.getPlayerSeats(index);
      }
      /**
       * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
       */
      public Builder setPlayerSeats(
          int index, int value) {
        copyOnWrite();
        instance.setPlayerSeats(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
       */
      public Builder addPlayerSeats(int value) {
        copyOnWrite();
        instance.addPlayerSeats(value);
        return this;
      }
      /**
       * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
       */
      public Builder addAllPlayerSeats(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllPlayerSeats(values);
        return this;
      }
      /**
       * <code>repeated uint32 playerSeats = 3 [packed = true];</code>
       */
      public Builder clearPlayerSeats() {
        copyOnWrite();
        instance.clearPlayerSeats();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameStartInitialMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameStartInitialMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasStartDealerPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          playerSeats_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameStartInitialMessage other = (de.pokerth.protocol.ProtoBuf.GameStartInitialMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          startDealerPlayerId_ = visitor.visitInt(
              hasStartDealerPlayerId(), startDealerPlayerId_,
              other.hasStartDealerPlayerId(), other.startDealerPlayerId_);
          playerSeats_= visitor.visitIntList(playerSeats_, other.playerSeats_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  startDealerPlayerId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  if (!playerSeats_.isModifiable()) {
                    playerSeats_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(playerSeats_);
                  }
                  playerSeats_.addInt(input.readUInt32());
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!playerSeats_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    playerSeats_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(playerSeats_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    playerSeats_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameStartInitialMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameStartInitialMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameStartInitialMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameStartInitialMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameStartInitialMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameStartInitialMessage> PARSER;

    public static com.google.protobuf.Parser<GameStartInitialMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GameStartRejoinMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameStartRejoinMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    boolean hasStartDealerPlayerId();
    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    int getStartDealerPlayerId();

    /**
     * <code>required uint32 handNum = 3;</code>
     */
    boolean hasHandNum();
    /**
     * <code>required uint32 handNum = 3;</code>
     */
    int getHandNum();

    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    java.util.List<de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData> 
        getRejoinPlayerDataList();
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData getRejoinPlayerData(int index);
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    int getRejoinPlayerDataCount();
  }
  /**
   * Protobuf type {@code GameStartRejoinMessage}
   */
  public  static final class GameStartRejoinMessage extends
      com.google.protobuf.GeneratedMessageLite<
          GameStartRejoinMessage, GameStartRejoinMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:GameStartRejoinMessage)
      GameStartRejoinMessageOrBuilder {
    private GameStartRejoinMessage() {
      rejoinPlayerData_ = emptyProtobufList();
    }
    public interface RejoinPlayerDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:GameStartRejoinMessage.RejoinPlayerData)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required uint32 playerId = 1;</code>
       */
      boolean hasPlayerId();
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      int getPlayerId();

      /**
       * <code>required uint32 playerMoney = 2;</code>
       */
      boolean hasPlayerMoney();
      /**
       * <code>required uint32 playerMoney = 2;</code>
       */
      int getPlayerMoney();
    }
    /**
     * Protobuf type {@code GameStartRejoinMessage.RejoinPlayerData}
     */
    public  static final class RejoinPlayerData extends
        com.google.protobuf.GeneratedMessageLite<
            RejoinPlayerData, RejoinPlayerData.Builder> implements
        // @@protoc_insertion_point(message_implements:GameStartRejoinMessage.RejoinPlayerData)
        RejoinPlayerDataOrBuilder {
      private RejoinPlayerData() {
      }
      private int bitField0_;
      public static final int PLAYERID_FIELD_NUMBER = 1;
      private int playerId_;
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      private void setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      private void clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
      }

      public static final int PLAYERMONEY_FIELD_NUMBER = 2;
      private int playerMoney_;
      /**
       * <code>required uint32 playerMoney = 2;</code>
       */
      public boolean hasPlayerMoney() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 playerMoney = 2;</code>
       */
      public int getPlayerMoney() {
        return playerMoney_;
      }
      /**
       * <code>required uint32 playerMoney = 2;</code>
       */
      private void setPlayerMoney(int value) {
        bitField0_ |= 0x00000002;
        playerMoney_ = value;
      }
      /**
       * <code>required uint32 playerMoney = 2;</code>
       */
      private void clearPlayerMoney() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerMoney_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, playerMoney_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, playerMoney_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code GameStartRejoinMessage.RejoinPlayerData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData, Builder> implements
          // @@protoc_insertion_point(builder_implements:GameStartRejoinMessage.RejoinPlayerData)
          de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerDataOrBuilder {
        // Construct using de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required uint32 playerId = 1;</code>
         */
        public boolean hasPlayerId() {
          return instance.hasPlayerId();
        }
        /**
         * <code>required uint32 playerId = 1;</code>
         */
        public int getPlayerId() {
          return instance.getPlayerId();
        }
        /**
         * <code>required uint32 playerId = 1;</code>
         */
        public Builder setPlayerId(int value) {
          copyOnWrite();
          instance.setPlayerId(value);
          return this;
        }
        /**
         * <code>required uint32 playerId = 1;</code>
         */
        public Builder clearPlayerId() {
          copyOnWrite();
          instance.clearPlayerId();
          return this;
        }

        /**
         * <code>required uint32 playerMoney = 2;</code>
         */
        public boolean hasPlayerMoney() {
          return instance.hasPlayerMoney();
        }
        /**
         * <code>required uint32 playerMoney = 2;</code>
         */
        public int getPlayerMoney() {
          return instance.getPlayerMoney();
        }
        /**
         * <code>required uint32 playerMoney = 2;</code>
         */
        public Builder setPlayerMoney(int value) {
          copyOnWrite();
          instance.setPlayerMoney(value);
          return this;
        }
        /**
         * <code>required uint32 playerMoney = 2;</code>
         */
        public Builder clearPlayerMoney() {
          copyOnWrite();
          instance.clearPlayerMoney();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:GameStartRejoinMessage.RejoinPlayerData)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasPlayerId()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasPlayerMoney()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData other = (de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData) arg1;
            playerId_ = visitor.visitInt(
                hasPlayerId(), playerId_,
                other.hasPlayerId(), other.playerId_);
            playerMoney_ = visitor.visitInt(
                hasPlayerMoney(), playerMoney_,
                other.hasPlayerMoney(), other.playerMoney_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    playerId_ = input.readUInt32();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    playerMoney_ = input.readUInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:GameStartRejoinMessage.RejoinPlayerData)
      private static final de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new RejoinPlayerData();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<RejoinPlayerData> PARSER;

      public static com.google.protobuf.Parser<RejoinPlayerData> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int STARTDEALERPLAYERID_FIELD_NUMBER = 2;
    private int startDealerPlayerId_;
    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    public boolean hasStartDealerPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    public int getStartDealerPlayerId() {
      return startDealerPlayerId_;
    }
    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    private void setStartDealerPlayerId(int value) {
      bitField0_ |= 0x00000002;
      startDealerPlayerId_ = value;
    }
    /**
     * <code>required uint32 startDealerPlayerId = 2;</code>
     */
    private void clearStartDealerPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      startDealerPlayerId_ = 0;
    }

    public static final int HANDNUM_FIELD_NUMBER = 3;
    private int handNum_;
    /**
     * <code>required uint32 handNum = 3;</code>
     */
    public boolean hasHandNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 handNum = 3;</code>
     */
    public int getHandNum() {
      return handNum_;
    }
    /**
     * <code>required uint32 handNum = 3;</code>
     */
    private void setHandNum(int value) {
      bitField0_ |= 0x00000004;
      handNum_ = value;
    }
    /**
     * <code>required uint32 handNum = 3;</code>
     */
    private void clearHandNum() {
      bitField0_ = (bitField0_ & ~0x00000004);
      handNum_ = 0;
    }

    public static final int REJOINPLAYERDATA_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData> rejoinPlayerData_;
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    public java.util.List<de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData> getRejoinPlayerDataList() {
      return rejoinPlayerData_;
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    public java.util.List<? extends de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerDataOrBuilder> 
        getRejoinPlayerDataOrBuilderList() {
      return rejoinPlayerData_;
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    public int getRejoinPlayerDataCount() {
      return rejoinPlayerData_.size();
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData getRejoinPlayerData(int index) {
      return rejoinPlayerData_.get(index);
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerDataOrBuilder getRejoinPlayerDataOrBuilder(
        int index) {
      return rejoinPlayerData_.get(index);
    }
    private void ensureRejoinPlayerDataIsMutable() {
      if (!rejoinPlayerData_.isModifiable()) {
        rejoinPlayerData_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(rejoinPlayerData_);
       }
    }

    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    private void setRejoinPlayerData(
        int index, de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRejoinPlayerDataIsMutable();
      rejoinPlayerData_.set(index, value);
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    private void setRejoinPlayerData(
        int index, de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData.Builder builderForValue) {
      ensureRejoinPlayerDataIsMutable();
      rejoinPlayerData_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    private void addRejoinPlayerData(de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRejoinPlayerDataIsMutable();
      rejoinPlayerData_.add(value);
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    private void addRejoinPlayerData(
        int index, de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRejoinPlayerDataIsMutable();
      rejoinPlayerData_.add(index, value);
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    private void addRejoinPlayerData(
        de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData.Builder builderForValue) {
      ensureRejoinPlayerDataIsMutable();
      rejoinPlayerData_.add(builderForValue.build());
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    private void addRejoinPlayerData(
        int index, de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData.Builder builderForValue) {
      ensureRejoinPlayerDataIsMutable();
      rejoinPlayerData_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    private void addAllRejoinPlayerData(
        java.lang.Iterable<? extends de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData> values) {
      ensureRejoinPlayerDataIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, rejoinPlayerData_);
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    private void clearRejoinPlayerData() {
      rejoinPlayerData_ = emptyProtobufList();
    }
    /**
     * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
     */
    private void removeRejoinPlayerData(int index) {
      ensureRejoinPlayerDataIsMutable();
      rejoinPlayerData_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, startDealerPlayerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, handNum_);
      }
      for (int i = 0; i < rejoinPlayerData_.size(); i++) {
        output.writeMessage(4, rejoinPlayerData_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, startDealerPlayerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, handNum_);
      }
      for (int i = 0; i < rejoinPlayerData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, rejoinPlayerData_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code GameStartRejoinMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:GameStartRejoinMessage)
        de.pokerth.protocol.ProtoBuf.GameStartRejoinMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 startDealerPlayerId = 2;</code>
       */
      public boolean hasStartDealerPlayerId() {
        return instance.hasStartDealerPlayerId();
      }
      /**
       * <code>required uint32 startDealerPlayerId = 2;</code>
       */
      public int getStartDealerPlayerId() {
        return instance.getStartDealerPlayerId();
      }
      /**
       * <code>required uint32 startDealerPlayerId = 2;</code>
       */
      public Builder setStartDealerPlayerId(int value) {
        copyOnWrite();
        instance.setStartDealerPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 startDealerPlayerId = 2;</code>
       */
      public Builder clearStartDealerPlayerId() {
        copyOnWrite();
        instance.clearStartDealerPlayerId();
        return this;
      }

      /**
       * <code>required uint32 handNum = 3;</code>
       */
      public boolean hasHandNum() {
        return instance.hasHandNum();
      }
      /**
       * <code>required uint32 handNum = 3;</code>
       */
      public int getHandNum() {
        return instance.getHandNum();
      }
      /**
       * <code>required uint32 handNum = 3;</code>
       */
      public Builder setHandNum(int value) {
        copyOnWrite();
        instance.setHandNum(value);
        return this;
      }
      /**
       * <code>required uint32 handNum = 3;</code>
       */
      public Builder clearHandNum() {
        copyOnWrite();
        instance.clearHandNum();
        return this;
      }

      /**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public java.util.List<de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData> getRejoinPlayerDataList() {
        return java.util.Collections.unmodifiableList(
            instance.getRejoinPlayerDataList());
      }
      /**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public int getRejoinPlayerDataCount() {
        return instance.getRejoinPlayerDataCount();
      }/**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData getRejoinPlayerData(int index) {
        return instance.getRejoinPlayerData(index);
      }
      /**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public Builder setRejoinPlayerData(
          int index, de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData value) {
        copyOnWrite();
        instance.setRejoinPlayerData(index, value);
        return this;
      }
      /**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public Builder setRejoinPlayerData(
          int index, de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData.Builder builderForValue) {
        copyOnWrite();
        instance.setRejoinPlayerData(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public Builder addRejoinPlayerData(de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData value) {
        copyOnWrite();
        instance.addRejoinPlayerData(value);
        return this;
      }
      /**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public Builder addRejoinPlayerData(
          int index, de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData value) {
        copyOnWrite();
        instance.addRejoinPlayerData(index, value);
        return this;
      }
      /**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public Builder addRejoinPlayerData(
          de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData.Builder builderForValue) {
        copyOnWrite();
        instance.addRejoinPlayerData(builderForValue);
        return this;
      }
      /**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public Builder addRejoinPlayerData(
          int index, de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData.Builder builderForValue) {
        copyOnWrite();
        instance.addRejoinPlayerData(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public Builder addAllRejoinPlayerData(
          java.lang.Iterable<? extends de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData> values) {
        copyOnWrite();
        instance.addAllRejoinPlayerData(values);
        return this;
      }
      /**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public Builder clearRejoinPlayerData() {
        copyOnWrite();
        instance.clearRejoinPlayerData();
        return this;
      }
      /**
       * <code>repeated .GameStartRejoinMessage.RejoinPlayerData rejoinPlayerData = 4;</code>
       */
      public Builder removeRejoinPlayerData(int index) {
        copyOnWrite();
        instance.removeRejoinPlayerData(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameStartRejoinMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasStartDealerPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasHandNum()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getRejoinPlayerDataCount(); i++) {
            if (!getRejoinPlayerData(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          rejoinPlayerData_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage other = (de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          startDealerPlayerId_ = visitor.visitInt(
              hasStartDealerPlayerId(), startDealerPlayerId_,
              other.hasStartDealerPlayerId(), other.startDealerPlayerId_);
          handNum_ = visitor.visitInt(
              hasHandNum(), handNum_,
              other.hasHandNum(), other.handNum_);
          rejoinPlayerData_= visitor.visitList(rejoinPlayerData_, other.rejoinPlayerData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  startDealerPlayerId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  handNum_ = input.readUInt32();
                  break;
                }
                case 34: {
                  if (!rejoinPlayerData_.isModifiable()) {
                    rejoinPlayerData_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(rejoinPlayerData_);
                  }
                  rejoinPlayerData_.add(
                      input.readMessage(de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.RejoinPlayerData.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GameStartRejoinMessage)
    private static final de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GameStartRejoinMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GameStartRejoinMessage> PARSER;

    public static com.google.protobuf.Parser<GameStartRejoinMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HandStartMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HandStartMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
     */
    boolean hasPlainCards();
    /**
     * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards getPlainCards();

    /**
     * <code>optional bytes encryptedCards = 3;</code>
     */
    boolean hasEncryptedCards();
    /**
     * <code>optional bytes encryptedCards = 3;</code>
     */
    com.google.protobuf.ByteString getEncryptedCards();

    /**
     * <code>required uint32 smallBlind = 4;</code>
     */
    boolean hasSmallBlind();
    /**
     * <code>required uint32 smallBlind = 4;</code>
     */
    int getSmallBlind();

    /**
     * <code>repeated .NetPlayerState seatStates = 5;</code>
     */
    java.util.List<de.pokerth.protocol.ProtoBuf.NetPlayerState> getSeatStatesList();
    /**
     * <code>repeated .NetPlayerState seatStates = 5;</code>
     */
    int getSeatStatesCount();
    /**
     * <code>repeated .NetPlayerState seatStates = 5;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetPlayerState getSeatStates(int index);

    /**
     * <code>optional uint32 dealerPlayerId = 6;</code>
     */
    boolean hasDealerPlayerId();
    /**
     * <code>optional uint32 dealerPlayerId = 6;</code>
     */
    int getDealerPlayerId();
  }
  /**
   * Protobuf type {@code HandStartMessage}
   */
  public  static final class HandStartMessage extends
      com.google.protobuf.GeneratedMessageLite<
          HandStartMessage, HandStartMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:HandStartMessage)
      HandStartMessageOrBuilder {
    private HandStartMessage() {
      encryptedCards_ = com.google.protobuf.ByteString.EMPTY;
      seatStates_ = emptyIntList();
    }
    public interface PlainCardsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:HandStartMessage.PlainCards)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required uint32 plainCard1 = 1;</code>
       */
      boolean hasPlainCard1();
      /**
       * <code>required uint32 plainCard1 = 1;</code>
       */
      int getPlainCard1();

      /**
       * <code>required uint32 plainCard2 = 2;</code>
       */
      boolean hasPlainCard2();
      /**
       * <code>required uint32 plainCard2 = 2;</code>
       */
      int getPlainCard2();
    }
    /**
     * Protobuf type {@code HandStartMessage.PlainCards}
     */
    public  static final class PlainCards extends
        com.google.protobuf.GeneratedMessageLite<
            PlainCards, PlainCards.Builder> implements
        // @@protoc_insertion_point(message_implements:HandStartMessage.PlainCards)
        PlainCardsOrBuilder {
      private PlainCards() {
      }
      private int bitField0_;
      public static final int PLAINCARD1_FIELD_NUMBER = 1;
      private int plainCard1_;
      /**
       * <code>required uint32 plainCard1 = 1;</code>
       */
      public boolean hasPlainCard1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 plainCard1 = 1;</code>
       */
      public int getPlainCard1() {
        return plainCard1_;
      }
      /**
       * <code>required uint32 plainCard1 = 1;</code>
       */
      private void setPlainCard1(int value) {
        bitField0_ |= 0x00000001;
        plainCard1_ = value;
      }
      /**
       * <code>required uint32 plainCard1 = 1;</code>
       */
      private void clearPlainCard1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        plainCard1_ = 0;
      }

      public static final int PLAINCARD2_FIELD_NUMBER = 2;
      private int plainCard2_;
      /**
       * <code>required uint32 plainCard2 = 2;</code>
       */
      public boolean hasPlainCard2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 plainCard2 = 2;</code>
       */
      public int getPlainCard2() {
        return plainCard2_;
      }
      /**
       * <code>required uint32 plainCard2 = 2;</code>
       */
      private void setPlainCard2(int value) {
        bitField0_ |= 0x00000002;
        plainCard2_ = value;
      }
      /**
       * <code>required uint32 plainCard2 = 2;</code>
       */
      private void clearPlainCard2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        plainCard2_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, plainCard1_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, plainCard2_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, plainCard1_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, plainCard2_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code HandStartMessage.PlainCards}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards, Builder> implements
          // @@protoc_insertion_point(builder_implements:HandStartMessage.PlainCards)
          de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCardsOrBuilder {
        // Construct using de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required uint32 plainCard1 = 1;</code>
         */
        public boolean hasPlainCard1() {
          return instance.hasPlainCard1();
        }
        /**
         * <code>required uint32 plainCard1 = 1;</code>
         */
        public int getPlainCard1() {
          return instance.getPlainCard1();
        }
        /**
         * <code>required uint32 plainCard1 = 1;</code>
         */
        public Builder setPlainCard1(int value) {
          copyOnWrite();
          instance.setPlainCard1(value);
          return this;
        }
        /**
         * <code>required uint32 plainCard1 = 1;</code>
         */
        public Builder clearPlainCard1() {
          copyOnWrite();
          instance.clearPlainCard1();
          return this;
        }

        /**
         * <code>required uint32 plainCard2 = 2;</code>
         */
        public boolean hasPlainCard2() {
          return instance.hasPlainCard2();
        }
        /**
         * <code>required uint32 plainCard2 = 2;</code>
         */
        public int getPlainCard2() {
          return instance.getPlainCard2();
        }
        /**
         * <code>required uint32 plainCard2 = 2;</code>
         */
        public Builder setPlainCard2(int value) {
          copyOnWrite();
          instance.setPlainCard2(value);
          return this;
        }
        /**
         * <code>required uint32 plainCard2 = 2;</code>
         */
        public Builder clearPlainCard2() {
          copyOnWrite();
          instance.clearPlainCard2();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:HandStartMessage.PlainCards)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasPlainCard1()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasPlainCard2()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards other = (de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards) arg1;
            plainCard1_ = visitor.visitInt(
                hasPlainCard1(), plainCard1_,
                other.hasPlainCard1(), other.plainCard1_);
            plainCard2_ = visitor.visitInt(
                hasPlainCard2(), plainCard2_,
                other.hasPlainCard2(), other.plainCard2_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    plainCard1_ = input.readUInt32();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    plainCard2_ = input.readUInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:HandStartMessage.PlainCards)
      private static final de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new PlainCards();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<PlainCards> PARSER;

      public static com.google.protobuf.Parser<PlainCards> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAINCARDS_FIELD_NUMBER = 2;
    private de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards plainCards_;
    /**
     * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
     */
    public boolean hasPlainCards() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards getPlainCards() {
      return plainCards_ == null ? de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards.getDefaultInstance() : plainCards_;
    }
    /**
     * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
     */
    private void setPlainCards(de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards value) {
      if (value == null) {
        throw new NullPointerException();
      }
      plainCards_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
     */
    private void setPlainCards(
        de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards.Builder builderForValue) {
      plainCards_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
     */
    private void mergePlainCards(de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards value) {
      if (plainCards_ != null &&
          plainCards_ != de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards.getDefaultInstance()) {
        plainCards_ =
          de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards.newBuilder(plainCards_).mergeFrom(value).buildPartial();
      } else {
        plainCards_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
     */
    private void clearPlainCards() {  plainCards_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int ENCRYPTEDCARDS_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString encryptedCards_;
    /**
     * <code>optional bytes encryptedCards = 3;</code>
     */
    public boolean hasEncryptedCards() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes encryptedCards = 3;</code>
     */
    public com.google.protobuf.ByteString getEncryptedCards() {
      return encryptedCards_;
    }
    /**
     * <code>optional bytes encryptedCards = 3;</code>
     */
    private void setEncryptedCards(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      encryptedCards_ = value;
    }
    /**
     * <code>optional bytes encryptedCards = 3;</code>
     */
    private void clearEncryptedCards() {
      bitField0_ = (bitField0_ & ~0x00000004);
      encryptedCards_ = getDefaultInstance().getEncryptedCards();
    }

    public static final int SMALLBLIND_FIELD_NUMBER = 4;
    private int smallBlind_;
    /**
     * <code>required uint32 smallBlind = 4;</code>
     */
    public boolean hasSmallBlind() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 smallBlind = 4;</code>
     */
    public int getSmallBlind() {
      return smallBlind_;
    }
    /**
     * <code>required uint32 smallBlind = 4;</code>
     */
    private void setSmallBlind(int value) {
      bitField0_ |= 0x00000008;
      smallBlind_ = value;
    }
    /**
     * <code>required uint32 smallBlind = 4;</code>
     */
    private void clearSmallBlind() {
      bitField0_ = (bitField0_ & ~0x00000008);
      smallBlind_ = 0;
    }

    public static final int SEATSTATES_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.IntList seatStates_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, de.pokerth.protocol.ProtoBuf.NetPlayerState> seatStates_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, de.pokerth.protocol.ProtoBuf.NetPlayerState>() {
              public de.pokerth.protocol.ProtoBuf.NetPlayerState convert(java.lang.Integer from) {
                de.pokerth.protocol.ProtoBuf.NetPlayerState result = de.pokerth.protocol.ProtoBuf.NetPlayerState.forNumber(from);
                return result == null ? de.pokerth.protocol.ProtoBuf.NetPlayerState.netPlayerStateNormal : result;
              }
            };
    /**
     * <code>repeated .NetPlayerState seatStates = 5;</code>
     */
    public java.util.List<de.pokerth.protocol.ProtoBuf.NetPlayerState> getSeatStatesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, de.pokerth.protocol.ProtoBuf.NetPlayerState>(seatStates_, seatStates_converter_);
    }
    /**
     * <code>repeated .NetPlayerState seatStates = 5;</code>
     */
    public int getSeatStatesCount() {
      return seatStates_.size();
    }
    /**
     * <code>repeated .NetPlayerState seatStates = 5;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetPlayerState getSeatStates(int index) {
      return seatStates_converter_.convert(seatStates_.getInt(index));
    }
    private void ensureSeatStatesIsMutable() {
      if (!seatStates_.isModifiable()) {
        seatStates_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(seatStates_);
      }
    }
    /**
     * <code>repeated .NetPlayerState seatStates = 5;</code>
     */
    private void setSeatStates(
        int index, de.pokerth.protocol.ProtoBuf.NetPlayerState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSeatStatesIsMutable();
      seatStates_.setInt(index, value.getNumber());
    }
    /**
     * <code>repeated .NetPlayerState seatStates = 5;</code>
     */
    private void addSeatStates(de.pokerth.protocol.ProtoBuf.NetPlayerState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSeatStatesIsMutable();
      seatStates_.addInt(value.getNumber());
    }
    /**
     * <code>repeated .NetPlayerState seatStates = 5;</code>
     */
    private void addAllSeatStates(
        java.lang.Iterable<? extends de.pokerth.protocol.ProtoBuf.NetPlayerState> values) {
      ensureSeatStatesIsMutable();
      for (de.pokerth.protocol.ProtoBuf.NetPlayerState value : values) {
        seatStates_.addInt(value.getNumber());
      }
    }
    /**
     * <code>repeated .NetPlayerState seatStates = 5;</code>
     */
    private void clearSeatStates() {
      seatStates_ = emptyIntList();
    }

    public static final int DEALERPLAYERID_FIELD_NUMBER = 6;
    private int dealerPlayerId_;
    /**
     * <code>optional uint32 dealerPlayerId = 6;</code>
     */
    public boolean hasDealerPlayerId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 dealerPlayerId = 6;</code>
     */
    public int getDealerPlayerId() {
      return dealerPlayerId_;
    }
    /**
     * <code>optional uint32 dealerPlayerId = 6;</code>
     */
    private void setDealerPlayerId(int value) {
      bitField0_ |= 0x00000010;
      dealerPlayerId_ = value;
    }
    /**
     * <code>optional uint32 dealerPlayerId = 6;</code>
     */
    private void clearDealerPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000010);
      dealerPlayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getPlainCards());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, encryptedCards_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, smallBlind_);
      }
      for (int i = 0; i < seatStates_.size(); i++) {
        output.writeEnum(5, seatStates_.getInt(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, dealerPlayerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPlainCards());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, encryptedCards_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, smallBlind_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < seatStates_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(seatStates_.getInt(i));
        }
        size += dataSize;
        size += 1 * seatStates_.size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, dealerPlayerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.HandStartMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.HandStartMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.HandStartMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.HandStartMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.HandStartMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.HandStartMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.HandStartMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.HandStartMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.HandStartMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.HandStartMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.HandStartMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code HandStartMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.HandStartMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:HandStartMessage)
        de.pokerth.protocol.ProtoBuf.HandStartMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.HandStartMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
       */
      public boolean hasPlainCards() {
        return instance.hasPlainCards();
      }
      /**
       * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards getPlainCards() {
        return instance.getPlainCards();
      }
      /**
       * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
       */
      public Builder setPlainCards(de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards value) {
        copyOnWrite();
        instance.setPlainCards(value);
        return this;
        }
      /**
       * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
       */
      public Builder setPlainCards(
          de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards.Builder builderForValue) {
        copyOnWrite();
        instance.setPlainCards(builderForValue);
        return this;
      }
      /**
       * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
       */
      public Builder mergePlainCards(de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards value) {
        copyOnWrite();
        instance.mergePlainCards(value);
        return this;
      }
      /**
       * <code>optional .HandStartMessage.PlainCards plainCards = 2;</code>
       */
      public Builder clearPlainCards() {  copyOnWrite();
        instance.clearPlainCards();
        return this;
      }

      /**
       * <code>optional bytes encryptedCards = 3;</code>
       */
      public boolean hasEncryptedCards() {
        return instance.hasEncryptedCards();
      }
      /**
       * <code>optional bytes encryptedCards = 3;</code>
       */
      public com.google.protobuf.ByteString getEncryptedCards() {
        return instance.getEncryptedCards();
      }
      /**
       * <code>optional bytes encryptedCards = 3;</code>
       */
      public Builder setEncryptedCards(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEncryptedCards(value);
        return this;
      }
      /**
       * <code>optional bytes encryptedCards = 3;</code>
       */
      public Builder clearEncryptedCards() {
        copyOnWrite();
        instance.clearEncryptedCards();
        return this;
      }

      /**
       * <code>required uint32 smallBlind = 4;</code>
       */
      public boolean hasSmallBlind() {
        return instance.hasSmallBlind();
      }
      /**
       * <code>required uint32 smallBlind = 4;</code>
       */
      public int getSmallBlind() {
        return instance.getSmallBlind();
      }
      /**
       * <code>required uint32 smallBlind = 4;</code>
       */
      public Builder setSmallBlind(int value) {
        copyOnWrite();
        instance.setSmallBlind(value);
        return this;
      }
      /**
       * <code>required uint32 smallBlind = 4;</code>
       */
      public Builder clearSmallBlind() {
        copyOnWrite();
        instance.clearSmallBlind();
        return this;
      }

      /**
       * <code>repeated .NetPlayerState seatStates = 5;</code>
       */
      public java.util.List<de.pokerth.protocol.ProtoBuf.NetPlayerState> getSeatStatesList() {
        return instance.getSeatStatesList();
      }
      /**
       * <code>repeated .NetPlayerState seatStates = 5;</code>
       */
      public int getSeatStatesCount() {
        return instance.getSeatStatesCount();
      }
      /**
       * <code>repeated .NetPlayerState seatStates = 5;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetPlayerState getSeatStates(int index) {
        return instance.getSeatStates(index);
      }
      /**
       * <code>repeated .NetPlayerState seatStates = 5;</code>
       */
      public Builder setSeatStates(
          int index, de.pokerth.protocol.ProtoBuf.NetPlayerState value) {
        copyOnWrite();
        instance.setSeatStates(index, value);
        return this;
      }
      /**
       * <code>repeated .NetPlayerState seatStates = 5;</code>
       */
      public Builder addSeatStates(de.pokerth.protocol.ProtoBuf.NetPlayerState value) {
        copyOnWrite();
        instance.addSeatStates(value);
        return this;
      }
      /**
       * <code>repeated .NetPlayerState seatStates = 5;</code>
       */
      public Builder addAllSeatStates(
          java.lang.Iterable<? extends de.pokerth.protocol.ProtoBuf.NetPlayerState> values) {
        copyOnWrite();
        instance.addAllSeatStates(values);  return this;
      }
      /**
       * <code>repeated .NetPlayerState seatStates = 5;</code>
       */
      public Builder clearSeatStates() {
        copyOnWrite();
        instance.clearSeatStates();
        return this;
      }

      /**
       * <code>optional uint32 dealerPlayerId = 6;</code>
       */
      public boolean hasDealerPlayerId() {
        return instance.hasDealerPlayerId();
      }
      /**
       * <code>optional uint32 dealerPlayerId = 6;</code>
       */
      public int getDealerPlayerId() {
        return instance.getDealerPlayerId();
      }
      /**
       * <code>optional uint32 dealerPlayerId = 6;</code>
       */
      public Builder setDealerPlayerId(int value) {
        copyOnWrite();
        instance.setDealerPlayerId(value);
        return this;
      }
      /**
       * <code>optional uint32 dealerPlayerId = 6;</code>
       */
      public Builder clearDealerPlayerId() {
        copyOnWrite();
        instance.clearDealerPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HandStartMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.HandStartMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasSmallBlind()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (hasPlainCards()) {
            if (!getPlainCards().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          seatStates_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.HandStartMessage other = (de.pokerth.protocol.ProtoBuf.HandStartMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          plainCards_ = visitor.visitMessage(plainCards_, other.plainCards_);
          encryptedCards_ = visitor.visitByteString(
              hasEncryptedCards(), encryptedCards_,
              other.hasEncryptedCards(), other.encryptedCards_);
          smallBlind_ = visitor.visitInt(
              hasSmallBlind(), smallBlind_,
              other.hasSmallBlind(), other.smallBlind_);
          seatStates_= visitor.visitIntList(seatStates_, other.seatStates_);
          dealerPlayerId_ = visitor.visitInt(
              hasDealerPlayerId(), dealerPlayerId_,
              other.hasDealerPlayerId(), other.dealerPlayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 18: {
                  de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = plainCards_.toBuilder();
                  }
                  plainCards_ = input.readMessage(de.pokerth.protocol.ProtoBuf.HandStartMessage.PlainCards.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(plainCards_);
                    plainCards_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 26: {
                  bitField0_ |= 0x00000004;
                  encryptedCards_ = input.readBytes();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  smallBlind_ = input.readUInt32();
                  break;
                }
                case 40: {
                  if (!seatStates_.isModifiable()) {
                    seatStates_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(seatStates_);
                  }
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetPlayerState value = de.pokerth.protocol.ProtoBuf.NetPlayerState.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(5, rawValue);
                  } else {
                    seatStates_.addInt(rawValue);
                  }
                  break;
                }
                case 42: {
                  if (!seatStates_.isModifiable()) {
                    seatStates_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(seatStates_);
                  }
                  int length = input.readRawVarint32();
                  int oldLimit = input.pushLimit(length);
                  while(input.getBytesUntilLimit() > 0) {
                    int rawValue = input.readEnum();
                    de.pokerth.protocol.ProtoBuf.NetPlayerState value = de.pokerth.protocol.ProtoBuf.NetPlayerState.forNumber(rawValue);
                    if (value == null) {
                      super.mergeVarintField(5, rawValue);
                    } else {
                      seatStates_.addInt(rawValue);
                    }
                  }
                  input.popLimit(oldLimit);
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000010;
                  dealerPlayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.HandStartMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:HandStartMessage)
    private static final de.pokerth.protocol.ProtoBuf.HandStartMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HandStartMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.HandStartMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HandStartMessage> PARSER;

    public static com.google.protobuf.Parser<HandStartMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PlayersTurnMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayersTurnMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    boolean hasGameState();
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameState getGameState();
  }
  /**
   * Protobuf type {@code PlayersTurnMessage}
   */
  public  static final class PlayersTurnMessage extends
      com.google.protobuf.GeneratedMessageLite<
          PlayersTurnMessage, PlayersTurnMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:PlayersTurnMessage)
      PlayersTurnMessageOrBuilder {
    private PlayersTurnMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public static final int GAMESTATE_FIELD_NUMBER = 3;
    private int gameState_;
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    public boolean hasGameState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameState getGameState() {
      de.pokerth.protocol.ProtoBuf.NetGameState result = de.pokerth.protocol.ProtoBuf.NetGameState.forNumber(gameState_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetGameState.netStatePreflop : result;
    }
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    private void setGameState(de.pokerth.protocol.ProtoBuf.NetGameState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      gameState_ = value.getNumber();
    }
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    private void clearGameState() {
      bitField0_ = (bitField0_ & ~0x00000004);
      gameState_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, gameState_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, gameState_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.PlayersTurnMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersTurnMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersTurnMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersTurnMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersTurnMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersTurnMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersTurnMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersTurnMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersTurnMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersTurnMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.PlayersTurnMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PlayersTurnMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.PlayersTurnMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayersTurnMessage)
        de.pokerth.protocol.ProtoBuf.PlayersTurnMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.PlayersTurnMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public boolean hasGameState() {
        return instance.hasGameState();
      }
      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameState getGameState() {
        return instance.getGameState();
      }
      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public Builder setGameState(de.pokerth.protocol.ProtoBuf.NetGameState value) {
        copyOnWrite();
        instance.setGameState(value);
        return this;
      }
      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public Builder clearGameState() {
        copyOnWrite();
        instance.clearGameState();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayersTurnMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.PlayersTurnMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGameState()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.PlayersTurnMessage other = (de.pokerth.protocol.ProtoBuf.PlayersTurnMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          gameState_ = visitor.visitInt(hasGameState(), gameState_,
              other.hasGameState(), other.gameState_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetGameState value = de.pokerth.protocol.ProtoBuf.NetGameState.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    gameState_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.PlayersTurnMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PlayersTurnMessage)
    private static final de.pokerth.protocol.ProtoBuf.PlayersTurnMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlayersTurnMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.PlayersTurnMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PlayersTurnMessage> PARSER;

    public static com.google.protobuf.Parser<PlayersTurnMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MyActionRequestMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MyActionRequestMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 handNum = 2;</code>
     */
    boolean hasHandNum();
    /**
     * <code>required uint32 handNum = 2;</code>
     */
    int getHandNum();

    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    boolean hasGameState();
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameState getGameState();

    /**
     * <code>required .NetPlayerAction myAction = 4;</code>
     */
    boolean hasMyAction();
    /**
     * <code>required .NetPlayerAction myAction = 4;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetPlayerAction getMyAction();

    /**
     * <code>required uint32 myRelativeBet = 5;</code>
     */
    boolean hasMyRelativeBet();
    /**
     * <code>required uint32 myRelativeBet = 5;</code>
     */
    int getMyRelativeBet();
  }
  /**
   * Protobuf type {@code MyActionRequestMessage}
   */
  public  static final class MyActionRequestMessage extends
      com.google.protobuf.GeneratedMessageLite<
          MyActionRequestMessage, MyActionRequestMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:MyActionRequestMessage)
      MyActionRequestMessageOrBuilder {
    private MyActionRequestMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int HANDNUM_FIELD_NUMBER = 2;
    private int handNum_;
    /**
     * <code>required uint32 handNum = 2;</code>
     */
    public boolean hasHandNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 handNum = 2;</code>
     */
    public int getHandNum() {
      return handNum_;
    }
    /**
     * <code>required uint32 handNum = 2;</code>
     */
    private void setHandNum(int value) {
      bitField0_ |= 0x00000002;
      handNum_ = value;
    }
    /**
     * <code>required uint32 handNum = 2;</code>
     */
    private void clearHandNum() {
      bitField0_ = (bitField0_ & ~0x00000002);
      handNum_ = 0;
    }

    public static final int GAMESTATE_FIELD_NUMBER = 3;
    private int gameState_;
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    public boolean hasGameState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameState getGameState() {
      de.pokerth.protocol.ProtoBuf.NetGameState result = de.pokerth.protocol.ProtoBuf.NetGameState.forNumber(gameState_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetGameState.netStatePreflop : result;
    }
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    private void setGameState(de.pokerth.protocol.ProtoBuf.NetGameState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      gameState_ = value.getNumber();
    }
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    private void clearGameState() {
      bitField0_ = (bitField0_ & ~0x00000004);
      gameState_ = 0;
    }

    public static final int MYACTION_FIELD_NUMBER = 4;
    private int myAction_;
    /**
     * <code>required .NetPlayerAction myAction = 4;</code>
     */
    public boolean hasMyAction() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .NetPlayerAction myAction = 4;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetPlayerAction getMyAction() {
      de.pokerth.protocol.ProtoBuf.NetPlayerAction result = de.pokerth.protocol.ProtoBuf.NetPlayerAction.forNumber(myAction_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetPlayerAction.netActionNone : result;
    }
    /**
     * <code>required .NetPlayerAction myAction = 4;</code>
     */
    private void setMyAction(de.pokerth.protocol.ProtoBuf.NetPlayerAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      myAction_ = value.getNumber();
    }
    /**
     * <code>required .NetPlayerAction myAction = 4;</code>
     */
    private void clearMyAction() {
      bitField0_ = (bitField0_ & ~0x00000008);
      myAction_ = 0;
    }

    public static final int MYRELATIVEBET_FIELD_NUMBER = 5;
    private int myRelativeBet_;
    /**
     * <code>required uint32 myRelativeBet = 5;</code>
     */
    public boolean hasMyRelativeBet() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 myRelativeBet = 5;</code>
     */
    public int getMyRelativeBet() {
      return myRelativeBet_;
    }
    /**
     * <code>required uint32 myRelativeBet = 5;</code>
     */
    private void setMyRelativeBet(int value) {
      bitField0_ |= 0x00000010;
      myRelativeBet_ = value;
    }
    /**
     * <code>required uint32 myRelativeBet = 5;</code>
     */
    private void clearMyRelativeBet() {
      bitField0_ = (bitField0_ & ~0x00000010);
      myRelativeBet_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, handNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, gameState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, myAction_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, myRelativeBet_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, handNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, gameState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, myAction_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, myRelativeBet_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.MyActionRequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.MyActionRequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.MyActionRequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.MyActionRequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.MyActionRequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.MyActionRequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.MyActionRequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.MyActionRequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.MyActionRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.MyActionRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.MyActionRequestMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code MyActionRequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.MyActionRequestMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:MyActionRequestMessage)
        de.pokerth.protocol.ProtoBuf.MyActionRequestMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.MyActionRequestMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 handNum = 2;</code>
       */
      public boolean hasHandNum() {
        return instance.hasHandNum();
      }
      /**
       * <code>required uint32 handNum = 2;</code>
       */
      public int getHandNum() {
        return instance.getHandNum();
      }
      /**
       * <code>required uint32 handNum = 2;</code>
       */
      public Builder setHandNum(int value) {
        copyOnWrite();
        instance.setHandNum(value);
        return this;
      }
      /**
       * <code>required uint32 handNum = 2;</code>
       */
      public Builder clearHandNum() {
        copyOnWrite();
        instance.clearHandNum();
        return this;
      }

      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public boolean hasGameState() {
        return instance.hasGameState();
      }
      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameState getGameState() {
        return instance.getGameState();
      }
      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public Builder setGameState(de.pokerth.protocol.ProtoBuf.NetGameState value) {
        copyOnWrite();
        instance.setGameState(value);
        return this;
      }
      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public Builder clearGameState() {
        copyOnWrite();
        instance.clearGameState();
        return this;
      }

      /**
       * <code>required .NetPlayerAction myAction = 4;</code>
       */
      public boolean hasMyAction() {
        return instance.hasMyAction();
      }
      /**
       * <code>required .NetPlayerAction myAction = 4;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetPlayerAction getMyAction() {
        return instance.getMyAction();
      }
      /**
       * <code>required .NetPlayerAction myAction = 4;</code>
       */
      public Builder setMyAction(de.pokerth.protocol.ProtoBuf.NetPlayerAction value) {
        copyOnWrite();
        instance.setMyAction(value);
        return this;
      }
      /**
       * <code>required .NetPlayerAction myAction = 4;</code>
       */
      public Builder clearMyAction() {
        copyOnWrite();
        instance.clearMyAction();
        return this;
      }

      /**
       * <code>required uint32 myRelativeBet = 5;</code>
       */
      public boolean hasMyRelativeBet() {
        return instance.hasMyRelativeBet();
      }
      /**
       * <code>required uint32 myRelativeBet = 5;</code>
       */
      public int getMyRelativeBet() {
        return instance.getMyRelativeBet();
      }
      /**
       * <code>required uint32 myRelativeBet = 5;</code>
       */
      public Builder setMyRelativeBet(int value) {
        copyOnWrite();
        instance.setMyRelativeBet(value);
        return this;
      }
      /**
       * <code>required uint32 myRelativeBet = 5;</code>
       */
      public Builder clearMyRelativeBet() {
        copyOnWrite();
        instance.clearMyRelativeBet();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MyActionRequestMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.MyActionRequestMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasHandNum()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGameState()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMyAction()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMyRelativeBet()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.MyActionRequestMessage other = (de.pokerth.protocol.ProtoBuf.MyActionRequestMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          handNum_ = visitor.visitInt(
              hasHandNum(), handNum_,
              other.hasHandNum(), other.handNum_);
          gameState_ = visitor.visitInt(hasGameState(), gameState_,
              other.hasGameState(), other.gameState_);
          myAction_ = visitor.visitInt(hasMyAction(), myAction_,
              other.hasMyAction(), other.myAction_);
          myRelativeBet_ = visitor.visitInt(
              hasMyRelativeBet(), myRelativeBet_,
              other.hasMyRelativeBet(), other.myRelativeBet_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  handNum_ = input.readUInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetGameState value = de.pokerth.protocol.ProtoBuf.NetGameState.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    gameState_ = rawValue;
                  }
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetPlayerAction value = de.pokerth.protocol.ProtoBuf.NetPlayerAction.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(4, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    myAction_ = rawValue;
                  }
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  myRelativeBet_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.MyActionRequestMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MyActionRequestMessage)
    private static final de.pokerth.protocol.ProtoBuf.MyActionRequestMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MyActionRequestMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.MyActionRequestMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MyActionRequestMessage> PARSER;

    public static com.google.protobuf.Parser<MyActionRequestMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface YourActionRejectedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:YourActionRejectedMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required .NetGameState gameState = 2;</code>
     */
    boolean hasGameState();
    /**
     * <code>required .NetGameState gameState = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameState getGameState();

    /**
     * <code>required .NetPlayerAction yourAction = 3;</code>
     */
    boolean hasYourAction();
    /**
     * <code>required .NetPlayerAction yourAction = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetPlayerAction getYourAction();

    /**
     * <code>required uint32 yourRelativeBet = 4;</code>
     */
    boolean hasYourRelativeBet();
    /**
     * <code>required uint32 yourRelativeBet = 4;</code>
     */
    int getYourRelativeBet();

    /**
     * <code>required .YourActionRejectedMessage.RejectionReason rejectionReason = 5;</code>
     */
    boolean hasRejectionReason();
    /**
     * <code>required .YourActionRejectedMessage.RejectionReason rejectionReason = 5;</code>
     */
    de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.RejectionReason getRejectionReason();
  }
  /**
   * Protobuf type {@code YourActionRejectedMessage}
   */
  public  static final class YourActionRejectedMessage extends
      com.google.protobuf.GeneratedMessageLite<
          YourActionRejectedMessage, YourActionRejectedMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:YourActionRejectedMessage)
      YourActionRejectedMessageOrBuilder {
    private YourActionRejectedMessage() {
      rejectionReason_ = 1;
    }
    /**
     * Protobuf enum {@code YourActionRejectedMessage.RejectionReason}
     */
    public enum RejectionReason
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>rejectedInvalidGameState = 1;</code>
       */
      rejectedInvalidGameState(1),
      /**
       * <code>rejectedNotYourTurn = 2;</code>
       */
      rejectedNotYourTurn(2),
      /**
       * <code>rejectedActionNotAllowed = 3;</code>
       */
      rejectedActionNotAllowed(3),
      ;

      /**
       * <code>rejectedInvalidGameState = 1;</code>
       */
      public static final int rejectedInvalidGameState_VALUE = 1;
      /**
       * <code>rejectedNotYourTurn = 2;</code>
       */
      public static final int rejectedNotYourTurn_VALUE = 2;
      /**
       * <code>rejectedActionNotAllowed = 3;</code>
       */
      public static final int rejectedActionNotAllowed_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RejectionReason valueOf(int value) {
        return forNumber(value);
      }

      public static RejectionReason forNumber(int value) {
        switch (value) {
          case 1: return rejectedInvalidGameState;
          case 2: return rejectedNotYourTurn;
          case 3: return rejectedActionNotAllowed;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RejectionReason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RejectionReason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RejectionReason>() {
              public RejectionReason findValueByNumber(int number) {
                return RejectionReason.forNumber(number);
              }
            };

      private final int value;

      private RejectionReason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:YourActionRejectedMessage.RejectionReason)
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int GAMESTATE_FIELD_NUMBER = 2;
    private int gameState_;
    /**
     * <code>required .NetGameState gameState = 2;</code>
     */
    public boolean hasGameState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .NetGameState gameState = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameState getGameState() {
      de.pokerth.protocol.ProtoBuf.NetGameState result = de.pokerth.protocol.ProtoBuf.NetGameState.forNumber(gameState_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetGameState.netStatePreflop : result;
    }
    /**
     * <code>required .NetGameState gameState = 2;</code>
     */
    private void setGameState(de.pokerth.protocol.ProtoBuf.NetGameState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      gameState_ = value.getNumber();
    }
    /**
     * <code>required .NetGameState gameState = 2;</code>
     */
    private void clearGameState() {
      bitField0_ = (bitField0_ & ~0x00000002);
      gameState_ = 0;
    }

    public static final int YOURACTION_FIELD_NUMBER = 3;
    private int yourAction_;
    /**
     * <code>required .NetPlayerAction yourAction = 3;</code>
     */
    public boolean hasYourAction() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .NetPlayerAction yourAction = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetPlayerAction getYourAction() {
      de.pokerth.protocol.ProtoBuf.NetPlayerAction result = de.pokerth.protocol.ProtoBuf.NetPlayerAction.forNumber(yourAction_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetPlayerAction.netActionNone : result;
    }
    /**
     * <code>required .NetPlayerAction yourAction = 3;</code>
     */
    private void setYourAction(de.pokerth.protocol.ProtoBuf.NetPlayerAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      yourAction_ = value.getNumber();
    }
    /**
     * <code>required .NetPlayerAction yourAction = 3;</code>
     */
    private void clearYourAction() {
      bitField0_ = (bitField0_ & ~0x00000004);
      yourAction_ = 0;
    }

    public static final int YOURRELATIVEBET_FIELD_NUMBER = 4;
    private int yourRelativeBet_;
    /**
     * <code>required uint32 yourRelativeBet = 4;</code>
     */
    public boolean hasYourRelativeBet() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 yourRelativeBet = 4;</code>
     */
    public int getYourRelativeBet() {
      return yourRelativeBet_;
    }
    /**
     * <code>required uint32 yourRelativeBet = 4;</code>
     */
    private void setYourRelativeBet(int value) {
      bitField0_ |= 0x00000008;
      yourRelativeBet_ = value;
    }
    /**
     * <code>required uint32 yourRelativeBet = 4;</code>
     */
    private void clearYourRelativeBet() {
      bitField0_ = (bitField0_ & ~0x00000008);
      yourRelativeBet_ = 0;
    }

    public static final int REJECTIONREASON_FIELD_NUMBER = 5;
    private int rejectionReason_;
    /**
     * <code>required .YourActionRejectedMessage.RejectionReason rejectionReason = 5;</code>
     */
    public boolean hasRejectionReason() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .YourActionRejectedMessage.RejectionReason rejectionReason = 5;</code>
     */
    public de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.RejectionReason getRejectionReason() {
      de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.RejectionReason result = de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.RejectionReason.forNumber(rejectionReason_);
      return result == null ? de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.RejectionReason.rejectedInvalidGameState : result;
    }
    /**
     * <code>required .YourActionRejectedMessage.RejectionReason rejectionReason = 5;</code>
     */
    private void setRejectionReason(de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.RejectionReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      rejectionReason_ = value.getNumber();
    }
    /**
     * <code>required .YourActionRejectedMessage.RejectionReason rejectionReason = 5;</code>
     */
    private void clearRejectionReason() {
      bitField0_ = (bitField0_ & ~0x00000010);
      rejectionReason_ = 1;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, gameState_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, yourAction_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, yourRelativeBet_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, rejectionReason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, gameState_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, yourAction_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, yourRelativeBet_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, rejectionReason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code YourActionRejectedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:YourActionRejectedMessage)
        de.pokerth.protocol.ProtoBuf.YourActionRejectedMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required .NetGameState gameState = 2;</code>
       */
      public boolean hasGameState() {
        return instance.hasGameState();
      }
      /**
       * <code>required .NetGameState gameState = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameState getGameState() {
        return instance.getGameState();
      }
      /**
       * <code>required .NetGameState gameState = 2;</code>
       */
      public Builder setGameState(de.pokerth.protocol.ProtoBuf.NetGameState value) {
        copyOnWrite();
        instance.setGameState(value);
        return this;
      }
      /**
       * <code>required .NetGameState gameState = 2;</code>
       */
      public Builder clearGameState() {
        copyOnWrite();
        instance.clearGameState();
        return this;
      }

      /**
       * <code>required .NetPlayerAction yourAction = 3;</code>
       */
      public boolean hasYourAction() {
        return instance.hasYourAction();
      }
      /**
       * <code>required .NetPlayerAction yourAction = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetPlayerAction getYourAction() {
        return instance.getYourAction();
      }
      /**
       * <code>required .NetPlayerAction yourAction = 3;</code>
       */
      public Builder setYourAction(de.pokerth.protocol.ProtoBuf.NetPlayerAction value) {
        copyOnWrite();
        instance.setYourAction(value);
        return this;
      }
      /**
       * <code>required .NetPlayerAction yourAction = 3;</code>
       */
      public Builder clearYourAction() {
        copyOnWrite();
        instance.clearYourAction();
        return this;
      }

      /**
       * <code>required uint32 yourRelativeBet = 4;</code>
       */
      public boolean hasYourRelativeBet() {
        return instance.hasYourRelativeBet();
      }
      /**
       * <code>required uint32 yourRelativeBet = 4;</code>
       */
      public int getYourRelativeBet() {
        return instance.getYourRelativeBet();
      }
      /**
       * <code>required uint32 yourRelativeBet = 4;</code>
       */
      public Builder setYourRelativeBet(int value) {
        copyOnWrite();
        instance.setYourRelativeBet(value);
        return this;
      }
      /**
       * <code>required uint32 yourRelativeBet = 4;</code>
       */
      public Builder clearYourRelativeBet() {
        copyOnWrite();
        instance.clearYourRelativeBet();
        return this;
      }

      /**
       * <code>required .YourActionRejectedMessage.RejectionReason rejectionReason = 5;</code>
       */
      public boolean hasRejectionReason() {
        return instance.hasRejectionReason();
      }
      /**
       * <code>required .YourActionRejectedMessage.RejectionReason rejectionReason = 5;</code>
       */
      public de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.RejectionReason getRejectionReason() {
        return instance.getRejectionReason();
      }
      /**
       * <code>required .YourActionRejectedMessage.RejectionReason rejectionReason = 5;</code>
       */
      public Builder setRejectionReason(de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.RejectionReason value) {
        copyOnWrite();
        instance.setRejectionReason(value);
        return this;
      }
      /**
       * <code>required .YourActionRejectedMessage.RejectionReason rejectionReason = 5;</code>
       */
      public Builder clearRejectionReason() {
        copyOnWrite();
        instance.clearRejectionReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:YourActionRejectedMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGameState()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasYourAction()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasYourRelativeBet()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasRejectionReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage other = (de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          gameState_ = visitor.visitInt(hasGameState(), gameState_,
              other.hasGameState(), other.gameState_);
          yourAction_ = visitor.visitInt(hasYourAction(), yourAction_,
              other.hasYourAction(), other.yourAction_);
          yourRelativeBet_ = visitor.visitInt(
              hasYourRelativeBet(), yourRelativeBet_,
              other.hasYourRelativeBet(), other.yourRelativeBet_);
          rejectionReason_ = visitor.visitInt(hasRejectionReason(), rejectionReason_,
              other.hasRejectionReason(), other.rejectionReason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetGameState value = de.pokerth.protocol.ProtoBuf.NetGameState.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    gameState_ = rawValue;
                  }
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetPlayerAction value = de.pokerth.protocol.ProtoBuf.NetPlayerAction.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    yourAction_ = rawValue;
                  }
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  yourRelativeBet_ = input.readUInt32();
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.RejectionReason value = de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.RejectionReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(5, rawValue);
                  } else {
                    bitField0_ |= 0x00000010;
                    rejectionReason_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:YourActionRejectedMessage)
    private static final de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new YourActionRejectedMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<YourActionRejectedMessage> PARSER;

    public static com.google.protobuf.Parser<YourActionRejectedMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PlayersActionDoneMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayersActionDoneMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    boolean hasGameState();
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetGameState getGameState();

    /**
     * <code>required .NetPlayerAction playerAction = 4;</code>
     */
    boolean hasPlayerAction();
    /**
     * <code>required .NetPlayerAction playerAction = 4;</code>
     */
    de.pokerth.protocol.ProtoBuf.NetPlayerAction getPlayerAction();

    /**
     * <code>required uint32 totalPlayerBet = 5;</code>
     */
    boolean hasTotalPlayerBet();
    /**
     * <code>required uint32 totalPlayerBet = 5;</code>
     */
    int getTotalPlayerBet();

    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    boolean hasPlayerMoney();
    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    int getPlayerMoney();

    /**
     * <code>required uint32 highestSet = 7;</code>
     */
    boolean hasHighestSet();
    /**
     * <code>required uint32 highestSet = 7;</code>
     */
    int getHighestSet();

    /**
     * <code>required uint32 minimumRaise = 8;</code>
     */
    boolean hasMinimumRaise();
    /**
     * <code>required uint32 minimumRaise = 8;</code>
     */
    int getMinimumRaise();
  }
  /**
   * Protobuf type {@code PlayersActionDoneMessage}
   */
  public  static final class PlayersActionDoneMessage extends
      com.google.protobuf.GeneratedMessageLite<
          PlayersActionDoneMessage, PlayersActionDoneMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:PlayersActionDoneMessage)
      PlayersActionDoneMessageOrBuilder {
    private PlayersActionDoneMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public static final int GAMESTATE_FIELD_NUMBER = 3;
    private int gameState_;
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    public boolean hasGameState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetGameState getGameState() {
      de.pokerth.protocol.ProtoBuf.NetGameState result = de.pokerth.protocol.ProtoBuf.NetGameState.forNumber(gameState_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetGameState.netStatePreflop : result;
    }
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    private void setGameState(de.pokerth.protocol.ProtoBuf.NetGameState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      gameState_ = value.getNumber();
    }
    /**
     * <code>required .NetGameState gameState = 3;</code>
     */
    private void clearGameState() {
      bitField0_ = (bitField0_ & ~0x00000004);
      gameState_ = 0;
    }

    public static final int PLAYERACTION_FIELD_NUMBER = 4;
    private int playerAction_;
    /**
     * <code>required .NetPlayerAction playerAction = 4;</code>
     */
    public boolean hasPlayerAction() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .NetPlayerAction playerAction = 4;</code>
     */
    public de.pokerth.protocol.ProtoBuf.NetPlayerAction getPlayerAction() {
      de.pokerth.protocol.ProtoBuf.NetPlayerAction result = de.pokerth.protocol.ProtoBuf.NetPlayerAction.forNumber(playerAction_);
      return result == null ? de.pokerth.protocol.ProtoBuf.NetPlayerAction.netActionNone : result;
    }
    /**
     * <code>required .NetPlayerAction playerAction = 4;</code>
     */
    private void setPlayerAction(de.pokerth.protocol.ProtoBuf.NetPlayerAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      playerAction_ = value.getNumber();
    }
    /**
     * <code>required .NetPlayerAction playerAction = 4;</code>
     */
    private void clearPlayerAction() {
      bitField0_ = (bitField0_ & ~0x00000008);
      playerAction_ = 0;
    }

    public static final int TOTALPLAYERBET_FIELD_NUMBER = 5;
    private int totalPlayerBet_;
    /**
     * <code>required uint32 totalPlayerBet = 5;</code>
     */
    public boolean hasTotalPlayerBet() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 totalPlayerBet = 5;</code>
     */
    public int getTotalPlayerBet() {
      return totalPlayerBet_;
    }
    /**
     * <code>required uint32 totalPlayerBet = 5;</code>
     */
    private void setTotalPlayerBet(int value) {
      bitField0_ |= 0x00000010;
      totalPlayerBet_ = value;
    }
    /**
     * <code>required uint32 totalPlayerBet = 5;</code>
     */
    private void clearTotalPlayerBet() {
      bitField0_ = (bitField0_ & ~0x00000010);
      totalPlayerBet_ = 0;
    }

    public static final int PLAYERMONEY_FIELD_NUMBER = 6;
    private int playerMoney_;
    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    public boolean hasPlayerMoney() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    public int getPlayerMoney() {
      return playerMoney_;
    }
    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    private void setPlayerMoney(int value) {
      bitField0_ |= 0x00000020;
      playerMoney_ = value;
    }
    /**
     * <code>required uint32 playerMoney = 6;</code>
     */
    private void clearPlayerMoney() {
      bitField0_ = (bitField0_ & ~0x00000020);
      playerMoney_ = 0;
    }

    public static final int HIGHESTSET_FIELD_NUMBER = 7;
    private int highestSet_;
    /**
     * <code>required uint32 highestSet = 7;</code>
     */
    public boolean hasHighestSet() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required uint32 highestSet = 7;</code>
     */
    public int getHighestSet() {
      return highestSet_;
    }
    /**
     * <code>required uint32 highestSet = 7;</code>
     */
    private void setHighestSet(int value) {
      bitField0_ |= 0x00000040;
      highestSet_ = value;
    }
    /**
     * <code>required uint32 highestSet = 7;</code>
     */
    private void clearHighestSet() {
      bitField0_ = (bitField0_ & ~0x00000040);
      highestSet_ = 0;
    }

    public static final int MINIMUMRAISE_FIELD_NUMBER = 8;
    private int minimumRaise_;
    /**
     * <code>required uint32 minimumRaise = 8;</code>
     */
    public boolean hasMinimumRaise() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required uint32 minimumRaise = 8;</code>
     */
    public int getMinimumRaise() {
      return minimumRaise_;
    }
    /**
     * <code>required uint32 minimumRaise = 8;</code>
     */
    private void setMinimumRaise(int value) {
      bitField0_ |= 0x00000080;
      minimumRaise_ = value;
    }
    /**
     * <code>required uint32 minimumRaise = 8;</code>
     */
    private void clearMinimumRaise() {
      bitField0_ = (bitField0_ & ~0x00000080);
      minimumRaise_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, gameState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, playerAction_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, totalPlayerBet_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, playerMoney_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, highestSet_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, minimumRaise_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, gameState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, playerAction_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, totalPlayerBet_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, playerMoney_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, highestSet_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, minimumRaise_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PlayersActionDoneMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayersActionDoneMessage)
        de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public boolean hasGameState() {
        return instance.hasGameState();
      }
      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetGameState getGameState() {
        return instance.getGameState();
      }
      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public Builder setGameState(de.pokerth.protocol.ProtoBuf.NetGameState value) {
        copyOnWrite();
        instance.setGameState(value);
        return this;
      }
      /**
       * <code>required .NetGameState gameState = 3;</code>
       */
      public Builder clearGameState() {
        copyOnWrite();
        instance.clearGameState();
        return this;
      }

      /**
       * <code>required .NetPlayerAction playerAction = 4;</code>
       */
      public boolean hasPlayerAction() {
        return instance.hasPlayerAction();
      }
      /**
       * <code>required .NetPlayerAction playerAction = 4;</code>
       */
      public de.pokerth.protocol.ProtoBuf.NetPlayerAction getPlayerAction() {
        return instance.getPlayerAction();
      }
      /**
       * <code>required .NetPlayerAction playerAction = 4;</code>
       */
      public Builder setPlayerAction(de.pokerth.protocol.ProtoBuf.NetPlayerAction value) {
        copyOnWrite();
        instance.setPlayerAction(value);
        return this;
      }
      /**
       * <code>required .NetPlayerAction playerAction = 4;</code>
       */
      public Builder clearPlayerAction() {
        copyOnWrite();
        instance.clearPlayerAction();
        return this;
      }

      /**
       * <code>required uint32 totalPlayerBet = 5;</code>
       */
      public boolean hasTotalPlayerBet() {
        return instance.hasTotalPlayerBet();
      }
      /**
       * <code>required uint32 totalPlayerBet = 5;</code>
       */
      public int getTotalPlayerBet() {
        return instance.getTotalPlayerBet();
      }
      /**
       * <code>required uint32 totalPlayerBet = 5;</code>
       */
      public Builder setTotalPlayerBet(int value) {
        copyOnWrite();
        instance.setTotalPlayerBet(value);
        return this;
      }
      /**
       * <code>required uint32 totalPlayerBet = 5;</code>
       */
      public Builder clearTotalPlayerBet() {
        copyOnWrite();
        instance.clearTotalPlayerBet();
        return this;
      }

      /**
       * <code>required uint32 playerMoney = 6;</code>
       */
      public boolean hasPlayerMoney() {
        return instance.hasPlayerMoney();
      }
      /**
       * <code>required uint32 playerMoney = 6;</code>
       */
      public int getPlayerMoney() {
        return instance.getPlayerMoney();
      }
      /**
       * <code>required uint32 playerMoney = 6;</code>
       */
      public Builder setPlayerMoney(int value) {
        copyOnWrite();
        instance.setPlayerMoney(value);
        return this;
      }
      /**
       * <code>required uint32 playerMoney = 6;</code>
       */
      public Builder clearPlayerMoney() {
        copyOnWrite();
        instance.clearPlayerMoney();
        return this;
      }

      /**
       * <code>required uint32 highestSet = 7;</code>
       */
      public boolean hasHighestSet() {
        return instance.hasHighestSet();
      }
      /**
       * <code>required uint32 highestSet = 7;</code>
       */
      public int getHighestSet() {
        return instance.getHighestSet();
      }
      /**
       * <code>required uint32 highestSet = 7;</code>
       */
      public Builder setHighestSet(int value) {
        copyOnWrite();
        instance.setHighestSet(value);
        return this;
      }
      /**
       * <code>required uint32 highestSet = 7;</code>
       */
      public Builder clearHighestSet() {
        copyOnWrite();
        instance.clearHighestSet();
        return this;
      }

      /**
       * <code>required uint32 minimumRaise = 8;</code>
       */
      public boolean hasMinimumRaise() {
        return instance.hasMinimumRaise();
      }
      /**
       * <code>required uint32 minimumRaise = 8;</code>
       */
      public int getMinimumRaise() {
        return instance.getMinimumRaise();
      }
      /**
       * <code>required uint32 minimumRaise = 8;</code>
       */
      public Builder setMinimumRaise(int value) {
        copyOnWrite();
        instance.setMinimumRaise(value);
        return this;
      }
      /**
       * <code>required uint32 minimumRaise = 8;</code>
       */
      public Builder clearMinimumRaise() {
        copyOnWrite();
        instance.clearMinimumRaise();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayersActionDoneMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGameState()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerAction()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasTotalPlayerBet()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerMoney()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasHighestSet()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMinimumRaise()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage other = (de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          gameState_ = visitor.visitInt(hasGameState(), gameState_,
              other.hasGameState(), other.gameState_);
          playerAction_ = visitor.visitInt(hasPlayerAction(), playerAction_,
              other.hasPlayerAction(), other.playerAction_);
          totalPlayerBet_ = visitor.visitInt(
              hasTotalPlayerBet(), totalPlayerBet_,
              other.hasTotalPlayerBet(), other.totalPlayerBet_);
          playerMoney_ = visitor.visitInt(
              hasPlayerMoney(), playerMoney_,
              other.hasPlayerMoney(), other.playerMoney_);
          highestSet_ = visitor.visitInt(
              hasHighestSet(), highestSet_,
              other.hasHighestSet(), other.highestSet_);
          minimumRaise_ = visitor.visitInt(
              hasMinimumRaise(), minimumRaise_,
              other.hasMinimumRaise(), other.minimumRaise_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetGameState value = de.pokerth.protocol.ProtoBuf.NetGameState.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    gameState_ = rawValue;
                  }
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.NetPlayerAction value = de.pokerth.protocol.ProtoBuf.NetPlayerAction.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(4, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    playerAction_ = rawValue;
                  }
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  totalPlayerBet_ = input.readUInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  playerMoney_ = input.readUInt32();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000040;
                  highestSet_ = input.readUInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000080;
                  minimumRaise_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PlayersActionDoneMessage)
    private static final de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlayersActionDoneMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PlayersActionDoneMessage> PARSER;

    public static com.google.protobuf.Parser<PlayersActionDoneMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DealFlopCardsMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DealFlopCardsMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 flopCard1 = 2;</code>
     */
    boolean hasFlopCard1();
    /**
     * <code>required uint32 flopCard1 = 2;</code>
     */
    int getFlopCard1();

    /**
     * <code>required uint32 flopCard2 = 3;</code>
     */
    boolean hasFlopCard2();
    /**
     * <code>required uint32 flopCard2 = 3;</code>
     */
    int getFlopCard2();

    /**
     * <code>required uint32 flopCard3 = 4;</code>
     */
    boolean hasFlopCard3();
    /**
     * <code>required uint32 flopCard3 = 4;</code>
     */
    int getFlopCard3();
  }
  /**
   * Protobuf type {@code DealFlopCardsMessage}
   */
  public  static final class DealFlopCardsMessage extends
      com.google.protobuf.GeneratedMessageLite<
          DealFlopCardsMessage, DealFlopCardsMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:DealFlopCardsMessage)
      DealFlopCardsMessageOrBuilder {
    private DealFlopCardsMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int FLOPCARD1_FIELD_NUMBER = 2;
    private int flopCard1_;
    /**
     * <code>required uint32 flopCard1 = 2;</code>
     */
    public boolean hasFlopCard1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 flopCard1 = 2;</code>
     */
    public int getFlopCard1() {
      return flopCard1_;
    }
    /**
     * <code>required uint32 flopCard1 = 2;</code>
     */
    private void setFlopCard1(int value) {
      bitField0_ |= 0x00000002;
      flopCard1_ = value;
    }
    /**
     * <code>required uint32 flopCard1 = 2;</code>
     */
    private void clearFlopCard1() {
      bitField0_ = (bitField0_ & ~0x00000002);
      flopCard1_ = 0;
    }

    public static final int FLOPCARD2_FIELD_NUMBER = 3;
    private int flopCard2_;
    /**
     * <code>required uint32 flopCard2 = 3;</code>
     */
    public boolean hasFlopCard2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 flopCard2 = 3;</code>
     */
    public int getFlopCard2() {
      return flopCard2_;
    }
    /**
     * <code>required uint32 flopCard2 = 3;</code>
     */
    private void setFlopCard2(int value) {
      bitField0_ |= 0x00000004;
      flopCard2_ = value;
    }
    /**
     * <code>required uint32 flopCard2 = 3;</code>
     */
    private void clearFlopCard2() {
      bitField0_ = (bitField0_ & ~0x00000004);
      flopCard2_ = 0;
    }

    public static final int FLOPCARD3_FIELD_NUMBER = 4;
    private int flopCard3_;
    /**
     * <code>required uint32 flopCard3 = 4;</code>
     */
    public boolean hasFlopCard3() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 flopCard3 = 4;</code>
     */
    public int getFlopCard3() {
      return flopCard3_;
    }
    /**
     * <code>required uint32 flopCard3 = 4;</code>
     */
    private void setFlopCard3(int value) {
      bitField0_ |= 0x00000008;
      flopCard3_ = value;
    }
    /**
     * <code>required uint32 flopCard3 = 4;</code>
     */
    private void clearFlopCard3() {
      bitField0_ = (bitField0_ & ~0x00000008);
      flopCard3_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, flopCard1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, flopCard2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, flopCard3_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, flopCard1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, flopCard2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, flopCard3_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code DealFlopCardsMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:DealFlopCardsMessage)
        de.pokerth.protocol.ProtoBuf.DealFlopCardsMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 flopCard1 = 2;</code>
       */
      public boolean hasFlopCard1() {
        return instance.hasFlopCard1();
      }
      /**
       * <code>required uint32 flopCard1 = 2;</code>
       */
      public int getFlopCard1() {
        return instance.getFlopCard1();
      }
      /**
       * <code>required uint32 flopCard1 = 2;</code>
       */
      public Builder setFlopCard1(int value) {
        copyOnWrite();
        instance.setFlopCard1(value);
        return this;
      }
      /**
       * <code>required uint32 flopCard1 = 2;</code>
       */
      public Builder clearFlopCard1() {
        copyOnWrite();
        instance.clearFlopCard1();
        return this;
      }

      /**
       * <code>required uint32 flopCard2 = 3;</code>
       */
      public boolean hasFlopCard2() {
        return instance.hasFlopCard2();
      }
      /**
       * <code>required uint32 flopCard2 = 3;</code>
       */
      public int getFlopCard2() {
        return instance.getFlopCard2();
      }
      /**
       * <code>required uint32 flopCard2 = 3;</code>
       */
      public Builder setFlopCard2(int value) {
        copyOnWrite();
        instance.setFlopCard2(value);
        return this;
      }
      /**
       * <code>required uint32 flopCard2 = 3;</code>
       */
      public Builder clearFlopCard2() {
        copyOnWrite();
        instance.clearFlopCard2();
        return this;
      }

      /**
       * <code>required uint32 flopCard3 = 4;</code>
       */
      public boolean hasFlopCard3() {
        return instance.hasFlopCard3();
      }
      /**
       * <code>required uint32 flopCard3 = 4;</code>
       */
      public int getFlopCard3() {
        return instance.getFlopCard3();
      }
      /**
       * <code>required uint32 flopCard3 = 4;</code>
       */
      public Builder setFlopCard3(int value) {
        copyOnWrite();
        instance.setFlopCard3(value);
        return this;
      }
      /**
       * <code>required uint32 flopCard3 = 4;</code>
       */
      public Builder clearFlopCard3() {
        copyOnWrite();
        instance.clearFlopCard3();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DealFlopCardsMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFlopCard1()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFlopCard2()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFlopCard3()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage other = (de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          flopCard1_ = visitor.visitInt(
              hasFlopCard1(), flopCard1_,
              other.hasFlopCard1(), other.flopCard1_);
          flopCard2_ = visitor.visitInt(
              hasFlopCard2(), flopCard2_,
              other.hasFlopCard2(), other.flopCard2_);
          flopCard3_ = visitor.visitInt(
              hasFlopCard3(), flopCard3_,
              other.hasFlopCard3(), other.flopCard3_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  flopCard1_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  flopCard2_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  flopCard3_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:DealFlopCardsMessage)
    private static final de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DealFlopCardsMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DealFlopCardsMessage> PARSER;

    public static com.google.protobuf.Parser<DealFlopCardsMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DealTurnCardMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DealTurnCardMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 turnCard = 2;</code>
     */
    boolean hasTurnCard();
    /**
     * <code>required uint32 turnCard = 2;</code>
     */
    int getTurnCard();
  }
  /**
   * Protobuf type {@code DealTurnCardMessage}
   */
  public  static final class DealTurnCardMessage extends
      com.google.protobuf.GeneratedMessageLite<
          DealTurnCardMessage, DealTurnCardMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:DealTurnCardMessage)
      DealTurnCardMessageOrBuilder {
    private DealTurnCardMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int TURNCARD_FIELD_NUMBER = 2;
    private int turnCard_;
    /**
     * <code>required uint32 turnCard = 2;</code>
     */
    public boolean hasTurnCard() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 turnCard = 2;</code>
     */
    public int getTurnCard() {
      return turnCard_;
    }
    /**
     * <code>required uint32 turnCard = 2;</code>
     */
    private void setTurnCard(int value) {
      bitField0_ |= 0x00000002;
      turnCard_ = value;
    }
    /**
     * <code>required uint32 turnCard = 2;</code>
     */
    private void clearTurnCard() {
      bitField0_ = (bitField0_ & ~0x00000002);
      turnCard_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, turnCard_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, turnCard_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.DealTurnCardMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.DealTurnCardMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealTurnCardMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.DealTurnCardMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealTurnCardMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DealTurnCardMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealTurnCardMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DealTurnCardMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealTurnCardMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DealTurnCardMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.DealTurnCardMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code DealTurnCardMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.DealTurnCardMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:DealTurnCardMessage)
        de.pokerth.protocol.ProtoBuf.DealTurnCardMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.DealTurnCardMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 turnCard = 2;</code>
       */
      public boolean hasTurnCard() {
        return instance.hasTurnCard();
      }
      /**
       * <code>required uint32 turnCard = 2;</code>
       */
      public int getTurnCard() {
        return instance.getTurnCard();
      }
      /**
       * <code>required uint32 turnCard = 2;</code>
       */
      public Builder setTurnCard(int value) {
        copyOnWrite();
        instance.setTurnCard(value);
        return this;
      }
      /**
       * <code>required uint32 turnCard = 2;</code>
       */
      public Builder clearTurnCard() {
        copyOnWrite();
        instance.clearTurnCard();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DealTurnCardMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.DealTurnCardMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasTurnCard()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.DealTurnCardMessage other = (de.pokerth.protocol.ProtoBuf.DealTurnCardMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          turnCard_ = visitor.visitInt(
              hasTurnCard(), turnCard_,
              other.hasTurnCard(), other.turnCard_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  turnCard_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.DealTurnCardMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:DealTurnCardMessage)
    private static final de.pokerth.protocol.ProtoBuf.DealTurnCardMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DealTurnCardMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.DealTurnCardMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DealTurnCardMessage> PARSER;

    public static com.google.protobuf.Parser<DealTurnCardMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DealRiverCardMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DealRiverCardMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 riverCard = 2;</code>
     */
    boolean hasRiverCard();
    /**
     * <code>required uint32 riverCard = 2;</code>
     */
    int getRiverCard();
  }
  /**
   * Protobuf type {@code DealRiverCardMessage}
   */
  public  static final class DealRiverCardMessage extends
      com.google.protobuf.GeneratedMessageLite<
          DealRiverCardMessage, DealRiverCardMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:DealRiverCardMessage)
      DealRiverCardMessageOrBuilder {
    private DealRiverCardMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int RIVERCARD_FIELD_NUMBER = 2;
    private int riverCard_;
    /**
     * <code>required uint32 riverCard = 2;</code>
     */
    public boolean hasRiverCard() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 riverCard = 2;</code>
     */
    public int getRiverCard() {
      return riverCard_;
    }
    /**
     * <code>required uint32 riverCard = 2;</code>
     */
    private void setRiverCard(int value) {
      bitField0_ |= 0x00000002;
      riverCard_ = value;
    }
    /**
     * <code>required uint32 riverCard = 2;</code>
     */
    private void clearRiverCard() {
      bitField0_ = (bitField0_ & ~0x00000002);
      riverCard_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, riverCard_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, riverCard_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.DealRiverCardMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.DealRiverCardMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealRiverCardMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.DealRiverCardMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealRiverCardMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DealRiverCardMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealRiverCardMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DealRiverCardMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DealRiverCardMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DealRiverCardMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.DealRiverCardMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code DealRiverCardMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.DealRiverCardMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:DealRiverCardMessage)
        de.pokerth.protocol.ProtoBuf.DealRiverCardMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.DealRiverCardMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 riverCard = 2;</code>
       */
      public boolean hasRiverCard() {
        return instance.hasRiverCard();
      }
      /**
       * <code>required uint32 riverCard = 2;</code>
       */
      public int getRiverCard() {
        return instance.getRiverCard();
      }
      /**
       * <code>required uint32 riverCard = 2;</code>
       */
      public Builder setRiverCard(int value) {
        copyOnWrite();
        instance.setRiverCard(value);
        return this;
      }
      /**
       * <code>required uint32 riverCard = 2;</code>
       */
      public Builder clearRiverCard() {
        copyOnWrite();
        instance.clearRiverCard();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DealRiverCardMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.DealRiverCardMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasRiverCard()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.DealRiverCardMessage other = (de.pokerth.protocol.ProtoBuf.DealRiverCardMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          riverCard_ = visitor.visitInt(
              hasRiverCard(), riverCard_,
              other.hasRiverCard(), other.riverCard_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  riverCard_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.DealRiverCardMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:DealRiverCardMessage)
    private static final de.pokerth.protocol.ProtoBuf.DealRiverCardMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DealRiverCardMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.DealRiverCardMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DealRiverCardMessage> PARSER;

    public static com.google.protobuf.Parser<DealRiverCardMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AllInShowCardsMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AllInShowCardsMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    java.util.List<de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn> 
        getPlayersAllInList();
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn getPlayersAllIn(int index);
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    int getPlayersAllInCount();
  }
  /**
   * Protobuf type {@code AllInShowCardsMessage}
   */
  public  static final class AllInShowCardsMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AllInShowCardsMessage, AllInShowCardsMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AllInShowCardsMessage)
      AllInShowCardsMessageOrBuilder {
    private AllInShowCardsMessage() {
      playersAllIn_ = emptyProtobufList();
    }
    public interface PlayerAllInOrBuilder extends
        // @@protoc_insertion_point(interface_extends:AllInShowCardsMessage.PlayerAllIn)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required uint32 playerId = 1;</code>
       */
      boolean hasPlayerId();
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      int getPlayerId();

      /**
       * <code>required uint32 allInCard1 = 2;</code>
       */
      boolean hasAllInCard1();
      /**
       * <code>required uint32 allInCard1 = 2;</code>
       */
      int getAllInCard1();

      /**
       * <code>required uint32 allInCard2 = 3;</code>
       */
      boolean hasAllInCard2();
      /**
       * <code>required uint32 allInCard2 = 3;</code>
       */
      int getAllInCard2();
    }
    /**
     * Protobuf type {@code AllInShowCardsMessage.PlayerAllIn}
     */
    public  static final class PlayerAllIn extends
        com.google.protobuf.GeneratedMessageLite<
            PlayerAllIn, PlayerAllIn.Builder> implements
        // @@protoc_insertion_point(message_implements:AllInShowCardsMessage.PlayerAllIn)
        PlayerAllInOrBuilder {
      private PlayerAllIn() {
      }
      private int bitField0_;
      public static final int PLAYERID_FIELD_NUMBER = 1;
      private int playerId_;
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      private void setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
      }
      /**
       * <code>required uint32 playerId = 1;</code>
       */
      private void clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
      }

      public static final int ALLINCARD1_FIELD_NUMBER = 2;
      private int allInCard1_;
      /**
       * <code>required uint32 allInCard1 = 2;</code>
       */
      public boolean hasAllInCard1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 allInCard1 = 2;</code>
       */
      public int getAllInCard1() {
        return allInCard1_;
      }
      /**
       * <code>required uint32 allInCard1 = 2;</code>
       */
      private void setAllInCard1(int value) {
        bitField0_ |= 0x00000002;
        allInCard1_ = value;
      }
      /**
       * <code>required uint32 allInCard1 = 2;</code>
       */
      private void clearAllInCard1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        allInCard1_ = 0;
      }

      public static final int ALLINCARD2_FIELD_NUMBER = 3;
      private int allInCard2_;
      /**
       * <code>required uint32 allInCard2 = 3;</code>
       */
      public boolean hasAllInCard2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 allInCard2 = 3;</code>
       */
      public int getAllInCard2() {
        return allInCard2_;
      }
      /**
       * <code>required uint32 allInCard2 = 3;</code>
       */
      private void setAllInCard2(int value) {
        bitField0_ |= 0x00000004;
        allInCard2_ = value;
      }
      /**
       * <code>required uint32 allInCard2 = 3;</code>
       */
      private void clearAllInCard2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        allInCard2_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, allInCard1_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, allInCard2_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, allInCard1_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, allInCard2_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code AllInShowCardsMessage.PlayerAllIn}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn, Builder> implements
          // @@protoc_insertion_point(builder_implements:AllInShowCardsMessage.PlayerAllIn)
          de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllInOrBuilder {
        // Construct using de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required uint32 playerId = 1;</code>
         */
        public boolean hasPlayerId() {
          return instance.hasPlayerId();
        }
        /**
         * <code>required uint32 playerId = 1;</code>
         */
        public int getPlayerId() {
          return instance.getPlayerId();
        }
        /**
         * <code>required uint32 playerId = 1;</code>
         */
        public Builder setPlayerId(int value) {
          copyOnWrite();
          instance.setPlayerId(value);
          return this;
        }
        /**
         * <code>required uint32 playerId = 1;</code>
         */
        public Builder clearPlayerId() {
          copyOnWrite();
          instance.clearPlayerId();
          return this;
        }

        /**
         * <code>required uint32 allInCard1 = 2;</code>
         */
        public boolean hasAllInCard1() {
          return instance.hasAllInCard1();
        }
        /**
         * <code>required uint32 allInCard1 = 2;</code>
         */
        public int getAllInCard1() {
          return instance.getAllInCard1();
        }
        /**
         * <code>required uint32 allInCard1 = 2;</code>
         */
        public Builder setAllInCard1(int value) {
          copyOnWrite();
          instance.setAllInCard1(value);
          return this;
        }
        /**
         * <code>required uint32 allInCard1 = 2;</code>
         */
        public Builder clearAllInCard1() {
          copyOnWrite();
          instance.clearAllInCard1();
          return this;
        }

        /**
         * <code>required uint32 allInCard2 = 3;</code>
         */
        public boolean hasAllInCard2() {
          return instance.hasAllInCard2();
        }
        /**
         * <code>required uint32 allInCard2 = 3;</code>
         */
        public int getAllInCard2() {
          return instance.getAllInCard2();
        }
        /**
         * <code>required uint32 allInCard2 = 3;</code>
         */
        public Builder setAllInCard2(int value) {
          copyOnWrite();
          instance.setAllInCard2(value);
          return this;
        }
        /**
         * <code>required uint32 allInCard2 = 3;</code>
         */
        public Builder clearAllInCard2() {
          copyOnWrite();
          instance.clearAllInCard2();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:AllInShowCardsMessage.PlayerAllIn)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasPlayerId()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasAllInCard1()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasAllInCard2()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn other = (de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn) arg1;
            playerId_ = visitor.visitInt(
                hasPlayerId(), playerId_,
                other.hasPlayerId(), other.playerId_);
            allInCard1_ = visitor.visitInt(
                hasAllInCard1(), allInCard1_,
                other.hasAllInCard1(), other.allInCard1_);
            allInCard2_ = visitor.visitInt(
                hasAllInCard2(), allInCard2_,
                other.hasAllInCard2(), other.allInCard2_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    playerId_ = input.readUInt32();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    allInCard1_ = input.readUInt32();
                    break;
                  }
                  case 24: {
                    bitField0_ |= 0x00000004;
                    allInCard2_ = input.readUInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:AllInShowCardsMessage.PlayerAllIn)
      private static final de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new PlayerAllIn();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<PlayerAllIn> PARSER;

      public static com.google.protobuf.Parser<PlayerAllIn> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERSALLIN_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn> playersAllIn_;
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    public java.util.List<de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn> getPlayersAllInList() {
      return playersAllIn_;
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    public java.util.List<? extends de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllInOrBuilder> 
        getPlayersAllInOrBuilderList() {
      return playersAllIn_;
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    public int getPlayersAllInCount() {
      return playersAllIn_.size();
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn getPlayersAllIn(int index) {
      return playersAllIn_.get(index);
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllInOrBuilder getPlayersAllInOrBuilder(
        int index) {
      return playersAllIn_.get(index);
    }
    private void ensurePlayersAllInIsMutable() {
      if (!playersAllIn_.isModifiable()) {
        playersAllIn_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(playersAllIn_);
       }
    }

    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    private void setPlayersAllIn(
        int index, de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePlayersAllInIsMutable();
      playersAllIn_.set(index, value);
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    private void setPlayersAllIn(
        int index, de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn.Builder builderForValue) {
      ensurePlayersAllInIsMutable();
      playersAllIn_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    private void addPlayersAllIn(de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePlayersAllInIsMutable();
      playersAllIn_.add(value);
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    private void addPlayersAllIn(
        int index, de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePlayersAllInIsMutable();
      playersAllIn_.add(index, value);
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    private void addPlayersAllIn(
        de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn.Builder builderForValue) {
      ensurePlayersAllInIsMutable();
      playersAllIn_.add(builderForValue.build());
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    private void addPlayersAllIn(
        int index, de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn.Builder builderForValue) {
      ensurePlayersAllInIsMutable();
      playersAllIn_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    private void addAllPlayersAllIn(
        java.lang.Iterable<? extends de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn> values) {
      ensurePlayersAllInIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, playersAllIn_);
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    private void clearPlayersAllIn() {
      playersAllIn_ = emptyProtobufList();
    }
    /**
     * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
     */
    private void removePlayersAllIn(int index) {
      ensurePlayersAllInIsMutable();
      playersAllIn_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      for (int i = 0; i < playersAllIn_.size(); i++) {
        output.writeMessage(2, playersAllIn_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      for (int i = 0; i < playersAllIn_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, playersAllIn_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AllInShowCardsMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AllInShowCardsMessage)
        de.pokerth.protocol.ProtoBuf.AllInShowCardsMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public java.util.List<de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn> getPlayersAllInList() {
        return java.util.Collections.unmodifiableList(
            instance.getPlayersAllInList());
      }
      /**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public int getPlayersAllInCount() {
        return instance.getPlayersAllInCount();
      }/**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn getPlayersAllIn(int index) {
        return instance.getPlayersAllIn(index);
      }
      /**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public Builder setPlayersAllIn(
          int index, de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn value) {
        copyOnWrite();
        instance.setPlayersAllIn(index, value);
        return this;
      }
      /**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public Builder setPlayersAllIn(
          int index, de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn.Builder builderForValue) {
        copyOnWrite();
        instance.setPlayersAllIn(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public Builder addPlayersAllIn(de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn value) {
        copyOnWrite();
        instance.addPlayersAllIn(value);
        return this;
      }
      /**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public Builder addPlayersAllIn(
          int index, de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn value) {
        copyOnWrite();
        instance.addPlayersAllIn(index, value);
        return this;
      }
      /**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public Builder addPlayersAllIn(
          de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn.Builder builderForValue) {
        copyOnWrite();
        instance.addPlayersAllIn(builderForValue);
        return this;
      }
      /**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public Builder addPlayersAllIn(
          int index, de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn.Builder builderForValue) {
        copyOnWrite();
        instance.addPlayersAllIn(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public Builder addAllPlayersAllIn(
          java.lang.Iterable<? extends de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn> values) {
        copyOnWrite();
        instance.addAllPlayersAllIn(values);
        return this;
      }
      /**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public Builder clearPlayersAllIn() {
        copyOnWrite();
        instance.clearPlayersAllIn();
        return this;
      }
      /**
       * <code>repeated .AllInShowCardsMessage.PlayerAllIn playersAllIn = 2;</code>
       */
      public Builder removePlayersAllIn(int index) {
        copyOnWrite();
        instance.removePlayersAllIn(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AllInShowCardsMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getPlayersAllInCount(); i++) {
            if (!getPlayersAllIn(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          playersAllIn_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage other = (de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playersAllIn_= visitor.visitList(playersAllIn_, other.playersAllIn_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 18: {
                  if (!playersAllIn_.isModifiable()) {
                    playersAllIn_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(playersAllIn_);
                  }
                  playersAllIn_.add(
                      input.readMessage(de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.PlayerAllIn.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AllInShowCardsMessage)
    private static final de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AllInShowCardsMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AllInShowCardsMessage> PARSER;

    public static com.google.protobuf.Parser<AllInShowCardsMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EndOfHandShowCardsMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EndOfHandShowCardsMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    java.util.List<de.pokerth.protocol.ProtoBuf.PlayerResult> 
        getPlayerResultsList();
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.PlayerResult getPlayerResults(int index);
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    int getPlayerResultsCount();
  }
  /**
   * Protobuf type {@code EndOfHandShowCardsMessage}
   */
  public  static final class EndOfHandShowCardsMessage extends
      com.google.protobuf.GeneratedMessageLite<
          EndOfHandShowCardsMessage, EndOfHandShowCardsMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:EndOfHandShowCardsMessage)
      EndOfHandShowCardsMessageOrBuilder {
    private EndOfHandShowCardsMessage() {
      playerResults_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERRESULTS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<de.pokerth.protocol.ProtoBuf.PlayerResult> playerResults_;
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    public java.util.List<de.pokerth.protocol.ProtoBuf.PlayerResult> getPlayerResultsList() {
      return playerResults_;
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    public java.util.List<? extends de.pokerth.protocol.ProtoBuf.PlayerResultOrBuilder> 
        getPlayerResultsOrBuilderList() {
      return playerResults_;
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    public int getPlayerResultsCount() {
      return playerResults_.size();
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PlayerResult getPlayerResults(int index) {
      return playerResults_.get(index);
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PlayerResultOrBuilder getPlayerResultsOrBuilder(
        int index) {
      return playerResults_.get(index);
    }
    private void ensurePlayerResultsIsMutable() {
      if (!playerResults_.isModifiable()) {
        playerResults_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(playerResults_);
       }
    }

    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    private void setPlayerResults(
        int index, de.pokerth.protocol.ProtoBuf.PlayerResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePlayerResultsIsMutable();
      playerResults_.set(index, value);
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    private void setPlayerResults(
        int index, de.pokerth.protocol.ProtoBuf.PlayerResult.Builder builderForValue) {
      ensurePlayerResultsIsMutable();
      playerResults_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    private void addPlayerResults(de.pokerth.protocol.ProtoBuf.PlayerResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePlayerResultsIsMutable();
      playerResults_.add(value);
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    private void addPlayerResults(
        int index, de.pokerth.protocol.ProtoBuf.PlayerResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePlayerResultsIsMutable();
      playerResults_.add(index, value);
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    private void addPlayerResults(
        de.pokerth.protocol.ProtoBuf.PlayerResult.Builder builderForValue) {
      ensurePlayerResultsIsMutable();
      playerResults_.add(builderForValue.build());
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    private void addPlayerResults(
        int index, de.pokerth.protocol.ProtoBuf.PlayerResult.Builder builderForValue) {
      ensurePlayerResultsIsMutable();
      playerResults_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    private void addAllPlayerResults(
        java.lang.Iterable<? extends de.pokerth.protocol.ProtoBuf.PlayerResult> values) {
      ensurePlayerResultsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, playerResults_);
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    private void clearPlayerResults() {
      playerResults_ = emptyProtobufList();
    }
    /**
     * <code>repeated .PlayerResult playerResults = 2;</code>
     */
    private void removePlayerResults(int index) {
      ensurePlayerResultsIsMutable();
      playerResults_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      for (int i = 0; i < playerResults_.size(); i++) {
        output.writeMessage(2, playerResults_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      for (int i = 0; i < playerResults_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, playerResults_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code EndOfHandShowCardsMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:EndOfHandShowCardsMessage)
        de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public java.util.List<de.pokerth.protocol.ProtoBuf.PlayerResult> getPlayerResultsList() {
        return java.util.Collections.unmodifiableList(
            instance.getPlayerResultsList());
      }
      /**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public int getPlayerResultsCount() {
        return instance.getPlayerResultsCount();
      }/**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PlayerResult getPlayerResults(int index) {
        return instance.getPlayerResults(index);
      }
      /**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public Builder setPlayerResults(
          int index, de.pokerth.protocol.ProtoBuf.PlayerResult value) {
        copyOnWrite();
        instance.setPlayerResults(index, value);
        return this;
      }
      /**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public Builder setPlayerResults(
          int index, de.pokerth.protocol.ProtoBuf.PlayerResult.Builder builderForValue) {
        copyOnWrite();
        instance.setPlayerResults(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public Builder addPlayerResults(de.pokerth.protocol.ProtoBuf.PlayerResult value) {
        copyOnWrite();
        instance.addPlayerResults(value);
        return this;
      }
      /**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public Builder addPlayerResults(
          int index, de.pokerth.protocol.ProtoBuf.PlayerResult value) {
        copyOnWrite();
        instance.addPlayerResults(index, value);
        return this;
      }
      /**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public Builder addPlayerResults(
          de.pokerth.protocol.ProtoBuf.PlayerResult.Builder builderForValue) {
        copyOnWrite();
        instance.addPlayerResults(builderForValue);
        return this;
      }
      /**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public Builder addPlayerResults(
          int index, de.pokerth.protocol.ProtoBuf.PlayerResult.Builder builderForValue) {
        copyOnWrite();
        instance.addPlayerResults(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public Builder addAllPlayerResults(
          java.lang.Iterable<? extends de.pokerth.protocol.ProtoBuf.PlayerResult> values) {
        copyOnWrite();
        instance.addAllPlayerResults(values);
        return this;
      }
      /**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public Builder clearPlayerResults() {
        copyOnWrite();
        instance.clearPlayerResults();
        return this;
      }
      /**
       * <code>repeated .PlayerResult playerResults = 2;</code>
       */
      public Builder removePlayerResults(int index) {
        copyOnWrite();
        instance.removePlayerResults(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EndOfHandShowCardsMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getPlayerResultsCount(); i++) {
            if (!getPlayerResults(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          playerResults_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage other = (de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerResults_= visitor.visitList(playerResults_, other.playerResults_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 18: {
                  if (!playerResults_.isModifiable()) {
                    playerResults_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(playerResults_);
                  }
                  playerResults_.add(
                      input.readMessage(de.pokerth.protocol.ProtoBuf.PlayerResult.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:EndOfHandShowCardsMessage)
    private static final de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EndOfHandShowCardsMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EndOfHandShowCardsMessage> PARSER;

    public static com.google.protobuf.Parser<EndOfHandShowCardsMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EndOfHandHideCardsMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EndOfHandHideCardsMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>required uint32 moneyWon = 3;</code>
     */
    boolean hasMoneyWon();
    /**
     * <code>required uint32 moneyWon = 3;</code>
     */
    int getMoneyWon();

    /**
     * <code>required uint32 playerMoney = 4;</code>
     */
    boolean hasPlayerMoney();
    /**
     * <code>required uint32 playerMoney = 4;</code>
     */
    int getPlayerMoney();
  }
  /**
   * Protobuf type {@code EndOfHandHideCardsMessage}
   */
  public  static final class EndOfHandHideCardsMessage extends
      com.google.protobuf.GeneratedMessageLite<
          EndOfHandHideCardsMessage, EndOfHandHideCardsMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:EndOfHandHideCardsMessage)
      EndOfHandHideCardsMessageOrBuilder {
    private EndOfHandHideCardsMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public static final int MONEYWON_FIELD_NUMBER = 3;
    private int moneyWon_;
    /**
     * <code>required uint32 moneyWon = 3;</code>
     */
    public boolean hasMoneyWon() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 moneyWon = 3;</code>
     */
    public int getMoneyWon() {
      return moneyWon_;
    }
    /**
     * <code>required uint32 moneyWon = 3;</code>
     */
    private void setMoneyWon(int value) {
      bitField0_ |= 0x00000004;
      moneyWon_ = value;
    }
    /**
     * <code>required uint32 moneyWon = 3;</code>
     */
    private void clearMoneyWon() {
      bitField0_ = (bitField0_ & ~0x00000004);
      moneyWon_ = 0;
    }

    public static final int PLAYERMONEY_FIELD_NUMBER = 4;
    private int playerMoney_;
    /**
     * <code>required uint32 playerMoney = 4;</code>
     */
    public boolean hasPlayerMoney() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 playerMoney = 4;</code>
     */
    public int getPlayerMoney() {
      return playerMoney_;
    }
    /**
     * <code>required uint32 playerMoney = 4;</code>
     */
    private void setPlayerMoney(int value) {
      bitField0_ |= 0x00000008;
      playerMoney_ = value;
    }
    /**
     * <code>required uint32 playerMoney = 4;</code>
     */
    private void clearPlayerMoney() {
      bitField0_ = (bitField0_ & ~0x00000008);
      playerMoney_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, moneyWon_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, playerMoney_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, moneyWon_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, playerMoney_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code EndOfHandHideCardsMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:EndOfHandHideCardsMessage)
        de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>required uint32 moneyWon = 3;</code>
       */
      public boolean hasMoneyWon() {
        return instance.hasMoneyWon();
      }
      /**
       * <code>required uint32 moneyWon = 3;</code>
       */
      public int getMoneyWon() {
        return instance.getMoneyWon();
      }
      /**
       * <code>required uint32 moneyWon = 3;</code>
       */
      public Builder setMoneyWon(int value) {
        copyOnWrite();
        instance.setMoneyWon(value);
        return this;
      }
      /**
       * <code>required uint32 moneyWon = 3;</code>
       */
      public Builder clearMoneyWon() {
        copyOnWrite();
        instance.clearMoneyWon();
        return this;
      }

      /**
       * <code>required uint32 playerMoney = 4;</code>
       */
      public boolean hasPlayerMoney() {
        return instance.hasPlayerMoney();
      }
      /**
       * <code>required uint32 playerMoney = 4;</code>
       */
      public int getPlayerMoney() {
        return instance.getPlayerMoney();
      }
      /**
       * <code>required uint32 playerMoney = 4;</code>
       */
      public Builder setPlayerMoney(int value) {
        copyOnWrite();
        instance.setPlayerMoney(value);
        return this;
      }
      /**
       * <code>required uint32 playerMoney = 4;</code>
       */
      public Builder clearPlayerMoney() {
        copyOnWrite();
        instance.clearPlayerMoney();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EndOfHandHideCardsMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMoneyWon()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerMoney()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage other = (de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          moneyWon_ = visitor.visitInt(
              hasMoneyWon(), moneyWon_,
              other.hasMoneyWon(), other.moneyWon_);
          playerMoney_ = visitor.visitInt(
              hasPlayerMoney(), playerMoney_,
              other.hasPlayerMoney(), other.playerMoney_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  moneyWon_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  playerMoney_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:EndOfHandHideCardsMessage)
    private static final de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EndOfHandHideCardsMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EndOfHandHideCardsMessage> PARSER;

    public static com.google.protobuf.Parser<EndOfHandHideCardsMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ShowMyCardsRequestMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ShowMyCardsRequestMessage)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code ShowMyCardsRequestMessage}
   */
  public  static final class ShowMyCardsRequestMessage extends
      com.google.protobuf.GeneratedMessageLite<
          ShowMyCardsRequestMessage, ShowMyCardsRequestMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:ShowMyCardsRequestMessage)
      ShowMyCardsRequestMessageOrBuilder {
    private ShowMyCardsRequestMessage() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code ShowMyCardsRequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:ShowMyCardsRequestMessage)
        de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:ShowMyCardsRequestMessage)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage other = (de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ShowMyCardsRequestMessage)
    private static final de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ShowMyCardsRequestMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ShowMyCardsRequestMessage> PARSER;

    public static com.google.protobuf.Parser<ShowMyCardsRequestMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AfterHandShowCardsMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AfterHandShowCardsMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .PlayerResult playerResult = 1;</code>
     */
    boolean hasPlayerResult();
    /**
     * <code>required .PlayerResult playerResult = 1;</code>
     */
    de.pokerth.protocol.ProtoBuf.PlayerResult getPlayerResult();
  }
  /**
   * Protobuf type {@code AfterHandShowCardsMessage}
   */
  public  static final class AfterHandShowCardsMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AfterHandShowCardsMessage, AfterHandShowCardsMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AfterHandShowCardsMessage)
      AfterHandShowCardsMessageOrBuilder {
    private AfterHandShowCardsMessage() {
    }
    private int bitField0_;
    public static final int PLAYERRESULT_FIELD_NUMBER = 1;
    private de.pokerth.protocol.ProtoBuf.PlayerResult playerResult_;
    /**
     * <code>required .PlayerResult playerResult = 1;</code>
     */
    public boolean hasPlayerResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PlayerResult playerResult = 1;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PlayerResult getPlayerResult() {
      return playerResult_ == null ? de.pokerth.protocol.ProtoBuf.PlayerResult.getDefaultInstance() : playerResult_;
    }
    /**
     * <code>required .PlayerResult playerResult = 1;</code>
     */
    private void setPlayerResult(de.pokerth.protocol.ProtoBuf.PlayerResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      playerResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>required .PlayerResult playerResult = 1;</code>
     */
    private void setPlayerResult(
        de.pokerth.protocol.ProtoBuf.PlayerResult.Builder builderForValue) {
      playerResult_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .PlayerResult playerResult = 1;</code>
     */
    private void mergePlayerResult(de.pokerth.protocol.ProtoBuf.PlayerResult value) {
      if (playerResult_ != null &&
          playerResult_ != de.pokerth.protocol.ProtoBuf.PlayerResult.getDefaultInstance()) {
        playerResult_ =
          de.pokerth.protocol.ProtoBuf.PlayerResult.newBuilder(playerResult_).mergeFrom(value).buildPartial();
      } else {
        playerResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .PlayerResult playerResult = 1;</code>
     */
    private void clearPlayerResult() {  playerResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getPlayerResult());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPlayerResult());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AfterHandShowCardsMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AfterHandShowCardsMessage)
        de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .PlayerResult playerResult = 1;</code>
       */
      public boolean hasPlayerResult() {
        return instance.hasPlayerResult();
      }
      /**
       * <code>required .PlayerResult playerResult = 1;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PlayerResult getPlayerResult() {
        return instance.getPlayerResult();
      }
      /**
       * <code>required .PlayerResult playerResult = 1;</code>
       */
      public Builder setPlayerResult(de.pokerth.protocol.ProtoBuf.PlayerResult value) {
        copyOnWrite();
        instance.setPlayerResult(value);
        return this;
        }
      /**
       * <code>required .PlayerResult playerResult = 1;</code>
       */
      public Builder setPlayerResult(
          de.pokerth.protocol.ProtoBuf.PlayerResult.Builder builderForValue) {
        copyOnWrite();
        instance.setPlayerResult(builderForValue);
        return this;
      }
      /**
       * <code>required .PlayerResult playerResult = 1;</code>
       */
      public Builder mergePlayerResult(de.pokerth.protocol.ProtoBuf.PlayerResult value) {
        copyOnWrite();
        instance.mergePlayerResult(value);
        return this;
      }
      /**
       * <code>required .PlayerResult playerResult = 1;</code>
       */
      public Builder clearPlayerResult() {  copyOnWrite();
        instance.clearPlayerResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AfterHandShowCardsMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasPlayerResult()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getPlayerResult().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage other = (de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage) arg1;
          playerResult_ = visitor.visitMessage(playerResult_, other.playerResult_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  de.pokerth.protocol.ProtoBuf.PlayerResult.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = playerResult_.toBuilder();
                  }
                  playerResult_ = input.readMessage(de.pokerth.protocol.ProtoBuf.PlayerResult.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(playerResult_);
                    playerResult_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AfterHandShowCardsMessage)
    private static final de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AfterHandShowCardsMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AfterHandShowCardsMessage> PARSER;

    public static com.google.protobuf.Parser<AfterHandShowCardsMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EndOfGameMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EndOfGameMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 winnerPlayerId = 2;</code>
     */
    boolean hasWinnerPlayerId();
    /**
     * <code>required uint32 winnerPlayerId = 2;</code>
     */
    int getWinnerPlayerId();
  }
  /**
   * Protobuf type {@code EndOfGameMessage}
   */
  public  static final class EndOfGameMessage extends
      com.google.protobuf.GeneratedMessageLite<
          EndOfGameMessage, EndOfGameMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:EndOfGameMessage)
      EndOfGameMessageOrBuilder {
    private EndOfGameMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int WINNERPLAYERID_FIELD_NUMBER = 2;
    private int winnerPlayerId_;
    /**
     * <code>required uint32 winnerPlayerId = 2;</code>
     */
    public boolean hasWinnerPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 winnerPlayerId = 2;</code>
     */
    public int getWinnerPlayerId() {
      return winnerPlayerId_;
    }
    /**
     * <code>required uint32 winnerPlayerId = 2;</code>
     */
    private void setWinnerPlayerId(int value) {
      bitField0_ |= 0x00000002;
      winnerPlayerId_ = value;
    }
    /**
     * <code>required uint32 winnerPlayerId = 2;</code>
     */
    private void clearWinnerPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      winnerPlayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, winnerPlayerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, winnerPlayerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.EndOfGameMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfGameMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfGameMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfGameMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfGameMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfGameMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfGameMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfGameMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndOfGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.EndOfGameMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code EndOfGameMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.EndOfGameMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:EndOfGameMessage)
        de.pokerth.protocol.ProtoBuf.EndOfGameMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.EndOfGameMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 winnerPlayerId = 2;</code>
       */
      public boolean hasWinnerPlayerId() {
        return instance.hasWinnerPlayerId();
      }
      /**
       * <code>required uint32 winnerPlayerId = 2;</code>
       */
      public int getWinnerPlayerId() {
        return instance.getWinnerPlayerId();
      }
      /**
       * <code>required uint32 winnerPlayerId = 2;</code>
       */
      public Builder setWinnerPlayerId(int value) {
        copyOnWrite();
        instance.setWinnerPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 winnerPlayerId = 2;</code>
       */
      public Builder clearWinnerPlayerId() {
        copyOnWrite();
        instance.clearWinnerPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EndOfGameMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.EndOfGameMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasWinnerPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.EndOfGameMessage other = (de.pokerth.protocol.ProtoBuf.EndOfGameMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          winnerPlayerId_ = visitor.visitInt(
              hasWinnerPlayerId(), winnerPlayerId_,
              other.hasWinnerPlayerId(), other.winnerPlayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  winnerPlayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.EndOfGameMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:EndOfGameMessage)
    private static final de.pokerth.protocol.ProtoBuf.EndOfGameMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EndOfGameMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.EndOfGameMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EndOfGameMessage> PARSER;

    public static com.google.protobuf.Parser<EndOfGameMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PlayerIdChangedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayerIdChangedMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 oldPlayerId = 1;</code>
     */
    boolean hasOldPlayerId();
    /**
     * <code>required uint32 oldPlayerId = 1;</code>
     */
    int getOldPlayerId();

    /**
     * <code>required uint32 newPlayerId = 2;</code>
     */
    boolean hasNewPlayerId();
    /**
     * <code>required uint32 newPlayerId = 2;</code>
     */
    int getNewPlayerId();
  }
  /**
   * Protobuf type {@code PlayerIdChangedMessage}
   */
  public  static final class PlayerIdChangedMessage extends
      com.google.protobuf.GeneratedMessageLite<
          PlayerIdChangedMessage, PlayerIdChangedMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:PlayerIdChangedMessage)
      PlayerIdChangedMessageOrBuilder {
    private PlayerIdChangedMessage() {
    }
    private int bitField0_;
    public static final int OLDPLAYERID_FIELD_NUMBER = 1;
    private int oldPlayerId_;
    /**
     * <code>required uint32 oldPlayerId = 1;</code>
     */
    public boolean hasOldPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 oldPlayerId = 1;</code>
     */
    public int getOldPlayerId() {
      return oldPlayerId_;
    }
    /**
     * <code>required uint32 oldPlayerId = 1;</code>
     */
    private void setOldPlayerId(int value) {
      bitField0_ |= 0x00000001;
      oldPlayerId_ = value;
    }
    /**
     * <code>required uint32 oldPlayerId = 1;</code>
     */
    private void clearOldPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      oldPlayerId_ = 0;
    }

    public static final int NEWPLAYERID_FIELD_NUMBER = 2;
    private int newPlayerId_;
    /**
     * <code>required uint32 newPlayerId = 2;</code>
     */
    public boolean hasNewPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 newPlayerId = 2;</code>
     */
    public int getNewPlayerId() {
      return newPlayerId_;
    }
    /**
     * <code>required uint32 newPlayerId = 2;</code>
     */
    private void setNewPlayerId(int value) {
      bitField0_ |= 0x00000002;
      newPlayerId_ = value;
    }
    /**
     * <code>required uint32 newPlayerId = 2;</code>
     */
    private void clearNewPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      newPlayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, oldPlayerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, newPlayerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, oldPlayerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, newPlayerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PlayerIdChangedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayerIdChangedMessage)
        de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 oldPlayerId = 1;</code>
       */
      public boolean hasOldPlayerId() {
        return instance.hasOldPlayerId();
      }
      /**
       * <code>required uint32 oldPlayerId = 1;</code>
       */
      public int getOldPlayerId() {
        return instance.getOldPlayerId();
      }
      /**
       * <code>required uint32 oldPlayerId = 1;</code>
       */
      public Builder setOldPlayerId(int value) {
        copyOnWrite();
        instance.setOldPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 oldPlayerId = 1;</code>
       */
      public Builder clearOldPlayerId() {
        copyOnWrite();
        instance.clearOldPlayerId();
        return this;
      }

      /**
       * <code>required uint32 newPlayerId = 2;</code>
       */
      public boolean hasNewPlayerId() {
        return instance.hasNewPlayerId();
      }
      /**
       * <code>required uint32 newPlayerId = 2;</code>
       */
      public int getNewPlayerId() {
        return instance.getNewPlayerId();
      }
      /**
       * <code>required uint32 newPlayerId = 2;</code>
       */
      public Builder setNewPlayerId(int value) {
        copyOnWrite();
        instance.setNewPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 newPlayerId = 2;</code>
       */
      public Builder clearNewPlayerId() {
        copyOnWrite();
        instance.clearNewPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerIdChangedMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasOldPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNewPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage other = (de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage) arg1;
          oldPlayerId_ = visitor.visitInt(
              hasOldPlayerId(), oldPlayerId_,
              other.hasOldPlayerId(), other.oldPlayerId_);
          newPlayerId_ = visitor.visitInt(
              hasNewPlayerId(), newPlayerId_,
              other.hasNewPlayerId(), other.newPlayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  oldPlayerId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  newPlayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PlayerIdChangedMessage)
    private static final de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlayerIdChangedMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PlayerIdChangedMessage> PARSER;

    public static com.google.protobuf.Parser<PlayerIdChangedMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AskKickPlayerMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AskKickPlayerMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code AskKickPlayerMessage}
   */
  public  static final class AskKickPlayerMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AskKickPlayerMessage, AskKickPlayerMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AskKickPlayerMessage)
      AskKickPlayerMessageOrBuilder {
    private AskKickPlayerMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AskKickPlayerMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AskKickPlayerMessage)
        de.pokerth.protocol.ProtoBuf.AskKickPlayerMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AskKickPlayerMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage other = (de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AskKickPlayerMessage)
    private static final de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AskKickPlayerMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AskKickPlayerMessage> PARSER;

    public static com.google.protobuf.Parser<AskKickPlayerMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AskKickDeniedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AskKickDeniedMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>required .AskKickDeniedMessage.KickDeniedReason kickDeniedReason = 3;</code>
     */
    boolean hasKickDeniedReason();
    /**
     * <code>required .AskKickDeniedMessage.KickDeniedReason kickDeniedReason = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.KickDeniedReason getKickDeniedReason();
  }
  /**
   * Protobuf type {@code AskKickDeniedMessage}
   */
  public  static final class AskKickDeniedMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AskKickDeniedMessage, AskKickDeniedMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AskKickDeniedMessage)
      AskKickDeniedMessageOrBuilder {
    private AskKickDeniedMessage() {
    }
    /**
     * Protobuf enum {@code AskKickDeniedMessage.KickDeniedReason}
     */
    public enum KickDeniedReason
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>kickDeniedInvalidGameState = 0;</code>
       */
      kickDeniedInvalidGameState(0),
      /**
       * <code>kickDeniedNotPossible = 1;</code>
       */
      kickDeniedNotPossible(1),
      /**
       * <code>kickDeniedTryAgainLater = 2;</code>
       */
      kickDeniedTryAgainLater(2),
      /**
       * <code>kickDeniedAlreadyInProgress = 3;</code>
       */
      kickDeniedAlreadyInProgress(3),
      /**
       * <code>kickDeniedInvalidPlayerId = 4;</code>
       */
      kickDeniedInvalidPlayerId(4),
      ;

      /**
       * <code>kickDeniedInvalidGameState = 0;</code>
       */
      public static final int kickDeniedInvalidGameState_VALUE = 0;
      /**
       * <code>kickDeniedNotPossible = 1;</code>
       */
      public static final int kickDeniedNotPossible_VALUE = 1;
      /**
       * <code>kickDeniedTryAgainLater = 2;</code>
       */
      public static final int kickDeniedTryAgainLater_VALUE = 2;
      /**
       * <code>kickDeniedAlreadyInProgress = 3;</code>
       */
      public static final int kickDeniedAlreadyInProgress_VALUE = 3;
      /**
       * <code>kickDeniedInvalidPlayerId = 4;</code>
       */
      public static final int kickDeniedInvalidPlayerId_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static KickDeniedReason valueOf(int value) {
        return forNumber(value);
      }

      public static KickDeniedReason forNumber(int value) {
        switch (value) {
          case 0: return kickDeniedInvalidGameState;
          case 1: return kickDeniedNotPossible;
          case 2: return kickDeniedTryAgainLater;
          case 3: return kickDeniedAlreadyInProgress;
          case 4: return kickDeniedInvalidPlayerId;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<KickDeniedReason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          KickDeniedReason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<KickDeniedReason>() {
              public KickDeniedReason findValueByNumber(int number) {
                return KickDeniedReason.forNumber(number);
              }
            };

      private final int value;

      private KickDeniedReason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:AskKickDeniedMessage.KickDeniedReason)
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>required uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public static final int KICKDENIEDREASON_FIELD_NUMBER = 3;
    private int kickDeniedReason_;
    /**
     * <code>required .AskKickDeniedMessage.KickDeniedReason kickDeniedReason = 3;</code>
     */
    public boolean hasKickDeniedReason() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .AskKickDeniedMessage.KickDeniedReason kickDeniedReason = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.KickDeniedReason getKickDeniedReason() {
      de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.KickDeniedReason result = de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.KickDeniedReason.forNumber(kickDeniedReason_);
      return result == null ? de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.KickDeniedReason.kickDeniedInvalidGameState : result;
    }
    /**
     * <code>required .AskKickDeniedMessage.KickDeniedReason kickDeniedReason = 3;</code>
     */
    private void setKickDeniedReason(de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.KickDeniedReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      kickDeniedReason_ = value.getNumber();
    }
    /**
     * <code>required .AskKickDeniedMessage.KickDeniedReason kickDeniedReason = 3;</code>
     */
    private void clearKickDeniedReason() {
      bitField0_ = (bitField0_ & ~0x00000004);
      kickDeniedReason_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, kickDeniedReason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, kickDeniedReason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AskKickDeniedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AskKickDeniedMessage)
        de.pokerth.protocol.ProtoBuf.AskKickDeniedMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>required .AskKickDeniedMessage.KickDeniedReason kickDeniedReason = 3;</code>
       */
      public boolean hasKickDeniedReason() {
        return instance.hasKickDeniedReason();
      }
      /**
       * <code>required .AskKickDeniedMessage.KickDeniedReason kickDeniedReason = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.KickDeniedReason getKickDeniedReason() {
        return instance.getKickDeniedReason();
      }
      /**
       * <code>required .AskKickDeniedMessage.KickDeniedReason kickDeniedReason = 3;</code>
       */
      public Builder setKickDeniedReason(de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.KickDeniedReason value) {
        copyOnWrite();
        instance.setKickDeniedReason(value);
        return this;
      }
      /**
       * <code>required .AskKickDeniedMessage.KickDeniedReason kickDeniedReason = 3;</code>
       */
      public Builder clearKickDeniedReason() {
        copyOnWrite();
        instance.clearKickDeniedReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AskKickDeniedMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasKickDeniedReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage other = (de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          kickDeniedReason_ = visitor.visitInt(hasKickDeniedReason(), kickDeniedReason_,
              other.hasKickDeniedReason(), other.kickDeniedReason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.KickDeniedReason value = de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.KickDeniedReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    kickDeniedReason_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AskKickDeniedMessage)
    private static final de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AskKickDeniedMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AskKickDeniedMessage> PARSER;

    public static com.google.protobuf.Parser<AskKickDeniedMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StartKickPetitionMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StartKickPetitionMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    boolean hasPetitionId();
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    int getPetitionId();

    /**
     * <code>required uint32 proposingPlayerId = 3;</code>
     */
    boolean hasProposingPlayerId();
    /**
     * <code>required uint32 proposingPlayerId = 3;</code>
     */
    int getProposingPlayerId();

    /**
     * <code>required uint32 kickPlayerId = 4;</code>
     */
    boolean hasKickPlayerId();
    /**
     * <code>required uint32 kickPlayerId = 4;</code>
     */
    int getKickPlayerId();

    /**
     * <code>required uint32 kickTimeoutSec = 5;</code>
     */
    boolean hasKickTimeoutSec();
    /**
     * <code>required uint32 kickTimeoutSec = 5;</code>
     */
    int getKickTimeoutSec();

    /**
     * <code>required uint32 numVotesNeededToKick = 6;</code>
     */
    boolean hasNumVotesNeededToKick();
    /**
     * <code>required uint32 numVotesNeededToKick = 6;</code>
     */
    int getNumVotesNeededToKick();
  }
  /**
   * Protobuf type {@code StartKickPetitionMessage}
   */
  public  static final class StartKickPetitionMessage extends
      com.google.protobuf.GeneratedMessageLite<
          StartKickPetitionMessage, StartKickPetitionMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:StartKickPetitionMessage)
      StartKickPetitionMessageOrBuilder {
    private StartKickPetitionMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PETITIONID_FIELD_NUMBER = 2;
    private int petitionId_;
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    public boolean hasPetitionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    public int getPetitionId() {
      return petitionId_;
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    private void setPetitionId(int value) {
      bitField0_ |= 0x00000002;
      petitionId_ = value;
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    private void clearPetitionId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      petitionId_ = 0;
    }

    public static final int PROPOSINGPLAYERID_FIELD_NUMBER = 3;
    private int proposingPlayerId_;
    /**
     * <code>required uint32 proposingPlayerId = 3;</code>
     */
    public boolean hasProposingPlayerId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 proposingPlayerId = 3;</code>
     */
    public int getProposingPlayerId() {
      return proposingPlayerId_;
    }
    /**
     * <code>required uint32 proposingPlayerId = 3;</code>
     */
    private void setProposingPlayerId(int value) {
      bitField0_ |= 0x00000004;
      proposingPlayerId_ = value;
    }
    /**
     * <code>required uint32 proposingPlayerId = 3;</code>
     */
    private void clearProposingPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      proposingPlayerId_ = 0;
    }

    public static final int KICKPLAYERID_FIELD_NUMBER = 4;
    private int kickPlayerId_;
    /**
     * <code>required uint32 kickPlayerId = 4;</code>
     */
    public boolean hasKickPlayerId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 kickPlayerId = 4;</code>
     */
    public int getKickPlayerId() {
      return kickPlayerId_;
    }
    /**
     * <code>required uint32 kickPlayerId = 4;</code>
     */
    private void setKickPlayerId(int value) {
      bitField0_ |= 0x00000008;
      kickPlayerId_ = value;
    }
    /**
     * <code>required uint32 kickPlayerId = 4;</code>
     */
    private void clearKickPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000008);
      kickPlayerId_ = 0;
    }

    public static final int KICKTIMEOUTSEC_FIELD_NUMBER = 5;
    private int kickTimeoutSec_;
    /**
     * <code>required uint32 kickTimeoutSec = 5;</code>
     */
    public boolean hasKickTimeoutSec() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 kickTimeoutSec = 5;</code>
     */
    public int getKickTimeoutSec() {
      return kickTimeoutSec_;
    }
    /**
     * <code>required uint32 kickTimeoutSec = 5;</code>
     */
    private void setKickTimeoutSec(int value) {
      bitField0_ |= 0x00000010;
      kickTimeoutSec_ = value;
    }
    /**
     * <code>required uint32 kickTimeoutSec = 5;</code>
     */
    private void clearKickTimeoutSec() {
      bitField0_ = (bitField0_ & ~0x00000010);
      kickTimeoutSec_ = 0;
    }

    public static final int NUMVOTESNEEDEDTOKICK_FIELD_NUMBER = 6;
    private int numVotesNeededToKick_;
    /**
     * <code>required uint32 numVotesNeededToKick = 6;</code>
     */
    public boolean hasNumVotesNeededToKick() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 numVotesNeededToKick = 6;</code>
     */
    public int getNumVotesNeededToKick() {
      return numVotesNeededToKick_;
    }
    /**
     * <code>required uint32 numVotesNeededToKick = 6;</code>
     */
    private void setNumVotesNeededToKick(int value) {
      bitField0_ |= 0x00000020;
      numVotesNeededToKick_ = value;
    }
    /**
     * <code>required uint32 numVotesNeededToKick = 6;</code>
     */
    private void clearNumVotesNeededToKick() {
      bitField0_ = (bitField0_ & ~0x00000020);
      numVotesNeededToKick_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, petitionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, proposingPlayerId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, kickPlayerId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, kickTimeoutSec_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, numVotesNeededToKick_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, petitionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, proposingPlayerId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, kickPlayerId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, kickTimeoutSec_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, numVotesNeededToKick_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code StartKickPetitionMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:StartKickPetitionMessage)
        de.pokerth.protocol.ProtoBuf.StartKickPetitionMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public boolean hasPetitionId() {
        return instance.hasPetitionId();
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public int getPetitionId() {
        return instance.getPetitionId();
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public Builder setPetitionId(int value) {
        copyOnWrite();
        instance.setPetitionId(value);
        return this;
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public Builder clearPetitionId() {
        copyOnWrite();
        instance.clearPetitionId();
        return this;
      }

      /**
       * <code>required uint32 proposingPlayerId = 3;</code>
       */
      public boolean hasProposingPlayerId() {
        return instance.hasProposingPlayerId();
      }
      /**
       * <code>required uint32 proposingPlayerId = 3;</code>
       */
      public int getProposingPlayerId() {
        return instance.getProposingPlayerId();
      }
      /**
       * <code>required uint32 proposingPlayerId = 3;</code>
       */
      public Builder setProposingPlayerId(int value) {
        copyOnWrite();
        instance.setProposingPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 proposingPlayerId = 3;</code>
       */
      public Builder clearProposingPlayerId() {
        copyOnWrite();
        instance.clearProposingPlayerId();
        return this;
      }

      /**
       * <code>required uint32 kickPlayerId = 4;</code>
       */
      public boolean hasKickPlayerId() {
        return instance.hasKickPlayerId();
      }
      /**
       * <code>required uint32 kickPlayerId = 4;</code>
       */
      public int getKickPlayerId() {
        return instance.getKickPlayerId();
      }
      /**
       * <code>required uint32 kickPlayerId = 4;</code>
       */
      public Builder setKickPlayerId(int value) {
        copyOnWrite();
        instance.setKickPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 kickPlayerId = 4;</code>
       */
      public Builder clearKickPlayerId() {
        copyOnWrite();
        instance.clearKickPlayerId();
        return this;
      }

      /**
       * <code>required uint32 kickTimeoutSec = 5;</code>
       */
      public boolean hasKickTimeoutSec() {
        return instance.hasKickTimeoutSec();
      }
      /**
       * <code>required uint32 kickTimeoutSec = 5;</code>
       */
      public int getKickTimeoutSec() {
        return instance.getKickTimeoutSec();
      }
      /**
       * <code>required uint32 kickTimeoutSec = 5;</code>
       */
      public Builder setKickTimeoutSec(int value) {
        copyOnWrite();
        instance.setKickTimeoutSec(value);
        return this;
      }
      /**
       * <code>required uint32 kickTimeoutSec = 5;</code>
       */
      public Builder clearKickTimeoutSec() {
        copyOnWrite();
        instance.clearKickTimeoutSec();
        return this;
      }

      /**
       * <code>required uint32 numVotesNeededToKick = 6;</code>
       */
      public boolean hasNumVotesNeededToKick() {
        return instance.hasNumVotesNeededToKick();
      }
      /**
       * <code>required uint32 numVotesNeededToKick = 6;</code>
       */
      public int getNumVotesNeededToKick() {
        return instance.getNumVotesNeededToKick();
      }
      /**
       * <code>required uint32 numVotesNeededToKick = 6;</code>
       */
      public Builder setNumVotesNeededToKick(int value) {
        copyOnWrite();
        instance.setNumVotesNeededToKick(value);
        return this;
      }
      /**
       * <code>required uint32 numVotesNeededToKick = 6;</code>
       */
      public Builder clearNumVotesNeededToKick() {
        copyOnWrite();
        instance.clearNumVotesNeededToKick();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StartKickPetitionMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPetitionId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasProposingPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasKickPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasKickTimeoutSec()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNumVotesNeededToKick()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage other = (de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          petitionId_ = visitor.visitInt(
              hasPetitionId(), petitionId_,
              other.hasPetitionId(), other.petitionId_);
          proposingPlayerId_ = visitor.visitInt(
              hasProposingPlayerId(), proposingPlayerId_,
              other.hasProposingPlayerId(), other.proposingPlayerId_);
          kickPlayerId_ = visitor.visitInt(
              hasKickPlayerId(), kickPlayerId_,
              other.hasKickPlayerId(), other.kickPlayerId_);
          kickTimeoutSec_ = visitor.visitInt(
              hasKickTimeoutSec(), kickTimeoutSec_,
              other.hasKickTimeoutSec(), other.kickTimeoutSec_);
          numVotesNeededToKick_ = visitor.visitInt(
              hasNumVotesNeededToKick(), numVotesNeededToKick_,
              other.hasNumVotesNeededToKick(), other.numVotesNeededToKick_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  petitionId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  proposingPlayerId_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  kickPlayerId_ = input.readUInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  kickTimeoutSec_ = input.readUInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  numVotesNeededToKick_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:StartKickPetitionMessage)
    private static final de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StartKickPetitionMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StartKickPetitionMessage> PARSER;

    public static com.google.protobuf.Parser<StartKickPetitionMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VoteKickRequestMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VoteKickRequestMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    boolean hasPetitionId();
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    int getPetitionId();

    /**
     * <code>required bool voteKick = 3;</code>
     */
    boolean hasVoteKick();
    /**
     * <code>required bool voteKick = 3;</code>
     */
    boolean getVoteKick();
  }
  /**
   * Protobuf type {@code VoteKickRequestMessage}
   */
  public  static final class VoteKickRequestMessage extends
      com.google.protobuf.GeneratedMessageLite<
          VoteKickRequestMessage, VoteKickRequestMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:VoteKickRequestMessage)
      VoteKickRequestMessageOrBuilder {
    private VoteKickRequestMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PETITIONID_FIELD_NUMBER = 2;
    private int petitionId_;
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    public boolean hasPetitionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    public int getPetitionId() {
      return petitionId_;
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    private void setPetitionId(int value) {
      bitField0_ |= 0x00000002;
      petitionId_ = value;
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    private void clearPetitionId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      petitionId_ = 0;
    }

    public static final int VOTEKICK_FIELD_NUMBER = 3;
    private boolean voteKick_;
    /**
     * <code>required bool voteKick = 3;</code>
     */
    public boolean hasVoteKick() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool voteKick = 3;</code>
     */
    public boolean getVoteKick() {
      return voteKick_;
    }
    /**
     * <code>required bool voteKick = 3;</code>
     */
    private void setVoteKick(boolean value) {
      bitField0_ |= 0x00000004;
      voteKick_ = value;
    }
    /**
     * <code>required bool voteKick = 3;</code>
     */
    private void clearVoteKick() {
      bitField0_ = (bitField0_ & ~0x00000004);
      voteKick_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, petitionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, voteKick_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, petitionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, voteKick_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code VoteKickRequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:VoteKickRequestMessage)
        de.pokerth.protocol.ProtoBuf.VoteKickRequestMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public boolean hasPetitionId() {
        return instance.hasPetitionId();
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public int getPetitionId() {
        return instance.getPetitionId();
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public Builder setPetitionId(int value) {
        copyOnWrite();
        instance.setPetitionId(value);
        return this;
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public Builder clearPetitionId() {
        copyOnWrite();
        instance.clearPetitionId();
        return this;
      }

      /**
       * <code>required bool voteKick = 3;</code>
       */
      public boolean hasVoteKick() {
        return instance.hasVoteKick();
      }
      /**
       * <code>required bool voteKick = 3;</code>
       */
      public boolean getVoteKick() {
        return instance.getVoteKick();
      }
      /**
       * <code>required bool voteKick = 3;</code>
       */
      public Builder setVoteKick(boolean value) {
        copyOnWrite();
        instance.setVoteKick(value);
        return this;
      }
      /**
       * <code>required bool voteKick = 3;</code>
       */
      public Builder clearVoteKick() {
        copyOnWrite();
        instance.clearVoteKick();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:VoteKickRequestMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPetitionId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasVoteKick()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage other = (de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          petitionId_ = visitor.visitInt(
              hasPetitionId(), petitionId_,
              other.hasPetitionId(), other.petitionId_);
          voteKick_ = visitor.visitBoolean(
              hasVoteKick(), voteKick_,
              other.hasVoteKick(), other.voteKick_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  petitionId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  voteKick_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:VoteKickRequestMessage)
    private static final de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VoteKickRequestMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<VoteKickRequestMessage> PARSER;

    public static com.google.protobuf.Parser<VoteKickRequestMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VoteKickReplyMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VoteKickReplyMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    boolean hasPetitionId();
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    int getPetitionId();

    /**
     * <code>required .VoteKickReplyMessage.VoteKickReplyType voteKickReplyType = 3;</code>
     */
    boolean hasVoteKickReplyType();
    /**
     * <code>required .VoteKickReplyMessage.VoteKickReplyType voteKickReplyType = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.VoteKickReplyType getVoteKickReplyType();
  }
  /**
   * Protobuf type {@code VoteKickReplyMessage}
   */
  public  static final class VoteKickReplyMessage extends
      com.google.protobuf.GeneratedMessageLite<
          VoteKickReplyMessage, VoteKickReplyMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:VoteKickReplyMessage)
      VoteKickReplyMessageOrBuilder {
    private VoteKickReplyMessage() {
    }
    /**
     * Protobuf enum {@code VoteKickReplyMessage.VoteKickReplyType}
     */
    public enum VoteKickReplyType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>voteKickAck = 0;</code>
       */
      voteKickAck(0),
      /**
       * <code>voteKickDeniedInvalid = 1;</code>
       */
      voteKickDeniedInvalid(1),
      /**
       * <code>voteKickDeniedAlreadyVoted = 2;</code>
       */
      voteKickDeniedAlreadyVoted(2),
      ;

      /**
       * <code>voteKickAck = 0;</code>
       */
      public static final int voteKickAck_VALUE = 0;
      /**
       * <code>voteKickDeniedInvalid = 1;</code>
       */
      public static final int voteKickDeniedInvalid_VALUE = 1;
      /**
       * <code>voteKickDeniedAlreadyVoted = 2;</code>
       */
      public static final int voteKickDeniedAlreadyVoted_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VoteKickReplyType valueOf(int value) {
        return forNumber(value);
      }

      public static VoteKickReplyType forNumber(int value) {
        switch (value) {
          case 0: return voteKickAck;
          case 1: return voteKickDeniedInvalid;
          case 2: return voteKickDeniedAlreadyVoted;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<VoteKickReplyType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          VoteKickReplyType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<VoteKickReplyType>() {
              public VoteKickReplyType findValueByNumber(int number) {
                return VoteKickReplyType.forNumber(number);
              }
            };

      private final int value;

      private VoteKickReplyType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:VoteKickReplyMessage.VoteKickReplyType)
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PETITIONID_FIELD_NUMBER = 2;
    private int petitionId_;
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    public boolean hasPetitionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    public int getPetitionId() {
      return petitionId_;
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    private void setPetitionId(int value) {
      bitField0_ |= 0x00000002;
      petitionId_ = value;
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    private void clearPetitionId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      petitionId_ = 0;
    }

    public static final int VOTEKICKREPLYTYPE_FIELD_NUMBER = 3;
    private int voteKickReplyType_;
    /**
     * <code>required .VoteKickReplyMessage.VoteKickReplyType voteKickReplyType = 3;</code>
     */
    public boolean hasVoteKickReplyType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .VoteKickReplyMessage.VoteKickReplyType voteKickReplyType = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.VoteKickReplyType getVoteKickReplyType() {
      de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.VoteKickReplyType result = de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.VoteKickReplyType.forNumber(voteKickReplyType_);
      return result == null ? de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.VoteKickReplyType.voteKickAck : result;
    }
    /**
     * <code>required .VoteKickReplyMessage.VoteKickReplyType voteKickReplyType = 3;</code>
     */
    private void setVoteKickReplyType(de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.VoteKickReplyType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      voteKickReplyType_ = value.getNumber();
    }
    /**
     * <code>required .VoteKickReplyMessage.VoteKickReplyType voteKickReplyType = 3;</code>
     */
    private void clearVoteKickReplyType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      voteKickReplyType_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, petitionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, voteKickReplyType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, petitionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, voteKickReplyType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code VoteKickReplyMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:VoteKickReplyMessage)
        de.pokerth.protocol.ProtoBuf.VoteKickReplyMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public boolean hasPetitionId() {
        return instance.hasPetitionId();
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public int getPetitionId() {
        return instance.getPetitionId();
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public Builder setPetitionId(int value) {
        copyOnWrite();
        instance.setPetitionId(value);
        return this;
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public Builder clearPetitionId() {
        copyOnWrite();
        instance.clearPetitionId();
        return this;
      }

      /**
       * <code>required .VoteKickReplyMessage.VoteKickReplyType voteKickReplyType = 3;</code>
       */
      public boolean hasVoteKickReplyType() {
        return instance.hasVoteKickReplyType();
      }
      /**
       * <code>required .VoteKickReplyMessage.VoteKickReplyType voteKickReplyType = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.VoteKickReplyType getVoteKickReplyType() {
        return instance.getVoteKickReplyType();
      }
      /**
       * <code>required .VoteKickReplyMessage.VoteKickReplyType voteKickReplyType = 3;</code>
       */
      public Builder setVoteKickReplyType(de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.VoteKickReplyType value) {
        copyOnWrite();
        instance.setVoteKickReplyType(value);
        return this;
      }
      /**
       * <code>required .VoteKickReplyMessage.VoteKickReplyType voteKickReplyType = 3;</code>
       */
      public Builder clearVoteKickReplyType() {
        copyOnWrite();
        instance.clearVoteKickReplyType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:VoteKickReplyMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPetitionId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasVoteKickReplyType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage other = (de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          petitionId_ = visitor.visitInt(
              hasPetitionId(), petitionId_,
              other.hasPetitionId(), other.petitionId_);
          voteKickReplyType_ = visitor.visitInt(hasVoteKickReplyType(), voteKickReplyType_,
              other.hasVoteKickReplyType(), other.voteKickReplyType_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  petitionId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.VoteKickReplyType value = de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.VoteKickReplyType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    voteKickReplyType_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:VoteKickReplyMessage)
    private static final de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VoteKickReplyMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<VoteKickReplyMessage> PARSER;

    public static com.google.protobuf.Parser<VoteKickReplyMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface KickPetitionUpdateMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KickPetitionUpdateMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    boolean hasPetitionId();
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    int getPetitionId();

    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    boolean hasNumVotesAgainstKicking();
    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    int getNumVotesAgainstKicking();

    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    boolean hasNumVotesInFavourOfKicking();
    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    int getNumVotesInFavourOfKicking();

    /**
     * <code>required uint32 numVotesNeededToKick = 5;</code>
     */
    boolean hasNumVotesNeededToKick();
    /**
     * <code>required uint32 numVotesNeededToKick = 5;</code>
     */
    int getNumVotesNeededToKick();
  }
  /**
   * Protobuf type {@code KickPetitionUpdateMessage}
   */
  public  static final class KickPetitionUpdateMessage extends
      com.google.protobuf.GeneratedMessageLite<
          KickPetitionUpdateMessage, KickPetitionUpdateMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:KickPetitionUpdateMessage)
      KickPetitionUpdateMessageOrBuilder {
    private KickPetitionUpdateMessage() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PETITIONID_FIELD_NUMBER = 2;
    private int petitionId_;
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    public boolean hasPetitionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    public int getPetitionId() {
      return petitionId_;
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    private void setPetitionId(int value) {
      bitField0_ |= 0x00000002;
      petitionId_ = value;
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    private void clearPetitionId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      petitionId_ = 0;
    }

    public static final int NUMVOTESAGAINSTKICKING_FIELD_NUMBER = 3;
    private int numVotesAgainstKicking_;
    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    public boolean hasNumVotesAgainstKicking() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    public int getNumVotesAgainstKicking() {
      return numVotesAgainstKicking_;
    }
    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    private void setNumVotesAgainstKicking(int value) {
      bitField0_ |= 0x00000004;
      numVotesAgainstKicking_ = value;
    }
    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    private void clearNumVotesAgainstKicking() {
      bitField0_ = (bitField0_ & ~0x00000004);
      numVotesAgainstKicking_ = 0;
    }

    public static final int NUMVOTESINFAVOUROFKICKING_FIELD_NUMBER = 4;
    private int numVotesInFavourOfKicking_;
    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    public boolean hasNumVotesInFavourOfKicking() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    public int getNumVotesInFavourOfKicking() {
      return numVotesInFavourOfKicking_;
    }
    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    private void setNumVotesInFavourOfKicking(int value) {
      bitField0_ |= 0x00000008;
      numVotesInFavourOfKicking_ = value;
    }
    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    private void clearNumVotesInFavourOfKicking() {
      bitField0_ = (bitField0_ & ~0x00000008);
      numVotesInFavourOfKicking_ = 0;
    }

    public static final int NUMVOTESNEEDEDTOKICK_FIELD_NUMBER = 5;
    private int numVotesNeededToKick_;
    /**
     * <code>required uint32 numVotesNeededToKick = 5;</code>
     */
    public boolean hasNumVotesNeededToKick() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 numVotesNeededToKick = 5;</code>
     */
    public int getNumVotesNeededToKick() {
      return numVotesNeededToKick_;
    }
    /**
     * <code>required uint32 numVotesNeededToKick = 5;</code>
     */
    private void setNumVotesNeededToKick(int value) {
      bitField0_ |= 0x00000010;
      numVotesNeededToKick_ = value;
    }
    /**
     * <code>required uint32 numVotesNeededToKick = 5;</code>
     */
    private void clearNumVotesNeededToKick() {
      bitField0_ = (bitField0_ & ~0x00000010);
      numVotesNeededToKick_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, petitionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, numVotesAgainstKicking_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, numVotesInFavourOfKicking_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, numVotesNeededToKick_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, petitionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, numVotesAgainstKicking_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, numVotesInFavourOfKicking_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, numVotesNeededToKick_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code KickPetitionUpdateMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:KickPetitionUpdateMessage)
        de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public boolean hasPetitionId() {
        return instance.hasPetitionId();
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public int getPetitionId() {
        return instance.getPetitionId();
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public Builder setPetitionId(int value) {
        copyOnWrite();
        instance.setPetitionId(value);
        return this;
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public Builder clearPetitionId() {
        copyOnWrite();
        instance.clearPetitionId();
        return this;
      }

      /**
       * <code>required uint32 numVotesAgainstKicking = 3;</code>
       */
      public boolean hasNumVotesAgainstKicking() {
        return instance.hasNumVotesAgainstKicking();
      }
      /**
       * <code>required uint32 numVotesAgainstKicking = 3;</code>
       */
      public int getNumVotesAgainstKicking() {
        return instance.getNumVotesAgainstKicking();
      }
      /**
       * <code>required uint32 numVotesAgainstKicking = 3;</code>
       */
      public Builder setNumVotesAgainstKicking(int value) {
        copyOnWrite();
        instance.setNumVotesAgainstKicking(value);
        return this;
      }
      /**
       * <code>required uint32 numVotesAgainstKicking = 3;</code>
       */
      public Builder clearNumVotesAgainstKicking() {
        copyOnWrite();
        instance.clearNumVotesAgainstKicking();
        return this;
      }

      /**
       * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
       */
      public boolean hasNumVotesInFavourOfKicking() {
        return instance.hasNumVotesInFavourOfKicking();
      }
      /**
       * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
       */
      public int getNumVotesInFavourOfKicking() {
        return instance.getNumVotesInFavourOfKicking();
      }
      /**
       * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
       */
      public Builder setNumVotesInFavourOfKicking(int value) {
        copyOnWrite();
        instance.setNumVotesInFavourOfKicking(value);
        return this;
      }
      /**
       * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
       */
      public Builder clearNumVotesInFavourOfKicking() {
        copyOnWrite();
        instance.clearNumVotesInFavourOfKicking();
        return this;
      }

      /**
       * <code>required uint32 numVotesNeededToKick = 5;</code>
       */
      public boolean hasNumVotesNeededToKick() {
        return instance.hasNumVotesNeededToKick();
      }
      /**
       * <code>required uint32 numVotesNeededToKick = 5;</code>
       */
      public int getNumVotesNeededToKick() {
        return instance.getNumVotesNeededToKick();
      }
      /**
       * <code>required uint32 numVotesNeededToKick = 5;</code>
       */
      public Builder setNumVotesNeededToKick(int value) {
        copyOnWrite();
        instance.setNumVotesNeededToKick(value);
        return this;
      }
      /**
       * <code>required uint32 numVotesNeededToKick = 5;</code>
       */
      public Builder clearNumVotesNeededToKick() {
        copyOnWrite();
        instance.clearNumVotesNeededToKick();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:KickPetitionUpdateMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPetitionId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNumVotesAgainstKicking()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNumVotesInFavourOfKicking()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNumVotesNeededToKick()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage other = (de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          petitionId_ = visitor.visitInt(
              hasPetitionId(), petitionId_,
              other.hasPetitionId(), other.petitionId_);
          numVotesAgainstKicking_ = visitor.visitInt(
              hasNumVotesAgainstKicking(), numVotesAgainstKicking_,
              other.hasNumVotesAgainstKicking(), other.numVotesAgainstKicking_);
          numVotesInFavourOfKicking_ = visitor.visitInt(
              hasNumVotesInFavourOfKicking(), numVotesInFavourOfKicking_,
              other.hasNumVotesInFavourOfKicking(), other.numVotesInFavourOfKicking_);
          numVotesNeededToKick_ = visitor.visitInt(
              hasNumVotesNeededToKick(), numVotesNeededToKick_,
              other.hasNumVotesNeededToKick(), other.numVotesNeededToKick_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  petitionId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  numVotesAgainstKicking_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  numVotesInFavourOfKicking_ = input.readUInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  numVotesNeededToKick_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:KickPetitionUpdateMessage)
    private static final de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new KickPetitionUpdateMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<KickPetitionUpdateMessage> PARSER;

    public static com.google.protobuf.Parser<KickPetitionUpdateMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EndKickPetitionMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EndKickPetitionMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    boolean hasPetitionId();
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    int getPetitionId();

    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    boolean hasNumVotesAgainstKicking();
    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    int getNumVotesAgainstKicking();

    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    boolean hasNumVotesInFavourOfKicking();
    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    int getNumVotesInFavourOfKicking();

    /**
     * <code>required uint32 resultPlayerKicked = 5;</code>
     */
    boolean hasResultPlayerKicked();
    /**
     * <code>required uint32 resultPlayerKicked = 5;</code>
     */
    int getResultPlayerKicked();

    /**
     * <code>required .EndKickPetitionMessage.PetitionEndReason petitionEndReason = 6;</code>
     */
    boolean hasPetitionEndReason();
    /**
     * <code>required .EndKickPetitionMessage.PetitionEndReason petitionEndReason = 6;</code>
     */
    de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.PetitionEndReason getPetitionEndReason();
  }
  /**
   * Protobuf type {@code EndKickPetitionMessage}
   */
  public  static final class EndKickPetitionMessage extends
      com.google.protobuf.GeneratedMessageLite<
          EndKickPetitionMessage, EndKickPetitionMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:EndKickPetitionMessage)
      EndKickPetitionMessageOrBuilder {
    private EndKickPetitionMessage() {
    }
    /**
     * Protobuf enum {@code EndKickPetitionMessage.PetitionEndReason}
     */
    public enum PetitionEndReason
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>petitionEndEnoughVotes = 0;</code>
       */
      petitionEndEnoughVotes(0),
      /**
       * <code>petitionEndTooFewPlayers = 1;</code>
       */
      petitionEndTooFewPlayers(1),
      /**
       * <code>petitionEndPlayerLeft = 2;</code>
       */
      petitionEndPlayerLeft(2),
      /**
       * <code>petitionEndTimeout = 3;</code>
       */
      petitionEndTimeout(3),
      ;

      /**
       * <code>petitionEndEnoughVotes = 0;</code>
       */
      public static final int petitionEndEnoughVotes_VALUE = 0;
      /**
       * <code>petitionEndTooFewPlayers = 1;</code>
       */
      public static final int petitionEndTooFewPlayers_VALUE = 1;
      /**
       * <code>petitionEndPlayerLeft = 2;</code>
       */
      public static final int petitionEndPlayerLeft_VALUE = 2;
      /**
       * <code>petitionEndTimeout = 3;</code>
       */
      public static final int petitionEndTimeout_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PetitionEndReason valueOf(int value) {
        return forNumber(value);
      }

      public static PetitionEndReason forNumber(int value) {
        switch (value) {
          case 0: return petitionEndEnoughVotes;
          case 1: return petitionEndTooFewPlayers;
          case 2: return petitionEndPlayerLeft;
          case 3: return petitionEndTimeout;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PetitionEndReason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PetitionEndReason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PetitionEndReason>() {
              public PetitionEndReason findValueByNumber(int number) {
                return PetitionEndReason.forNumber(number);
              }
            };

      private final int value;

      private PetitionEndReason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:EndKickPetitionMessage.PetitionEndReason)
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PETITIONID_FIELD_NUMBER = 2;
    private int petitionId_;
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    public boolean hasPetitionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    public int getPetitionId() {
      return petitionId_;
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    private void setPetitionId(int value) {
      bitField0_ |= 0x00000002;
      petitionId_ = value;
    }
    /**
     * <code>required uint32 petitionId = 2;</code>
     */
    private void clearPetitionId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      petitionId_ = 0;
    }

    public static final int NUMVOTESAGAINSTKICKING_FIELD_NUMBER = 3;
    private int numVotesAgainstKicking_;
    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    public boolean hasNumVotesAgainstKicking() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    public int getNumVotesAgainstKicking() {
      return numVotesAgainstKicking_;
    }
    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    private void setNumVotesAgainstKicking(int value) {
      bitField0_ |= 0x00000004;
      numVotesAgainstKicking_ = value;
    }
    /**
     * <code>required uint32 numVotesAgainstKicking = 3;</code>
     */
    private void clearNumVotesAgainstKicking() {
      bitField0_ = (bitField0_ & ~0x00000004);
      numVotesAgainstKicking_ = 0;
    }

    public static final int NUMVOTESINFAVOUROFKICKING_FIELD_NUMBER = 4;
    private int numVotesInFavourOfKicking_;
    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    public boolean hasNumVotesInFavourOfKicking() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    public int getNumVotesInFavourOfKicking() {
      return numVotesInFavourOfKicking_;
    }
    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    private void setNumVotesInFavourOfKicking(int value) {
      bitField0_ |= 0x00000008;
      numVotesInFavourOfKicking_ = value;
    }
    /**
     * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
     */
    private void clearNumVotesInFavourOfKicking() {
      bitField0_ = (bitField0_ & ~0x00000008);
      numVotesInFavourOfKicking_ = 0;
    }

    public static final int RESULTPLAYERKICKED_FIELD_NUMBER = 5;
    private int resultPlayerKicked_;
    /**
     * <code>required uint32 resultPlayerKicked = 5;</code>
     */
    public boolean hasResultPlayerKicked() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 resultPlayerKicked = 5;</code>
     */
    public int getResultPlayerKicked() {
      return resultPlayerKicked_;
    }
    /**
     * <code>required uint32 resultPlayerKicked = 5;</code>
     */
    private void setResultPlayerKicked(int value) {
      bitField0_ |= 0x00000010;
      resultPlayerKicked_ = value;
    }
    /**
     * <code>required uint32 resultPlayerKicked = 5;</code>
     */
    private void clearResultPlayerKicked() {
      bitField0_ = (bitField0_ & ~0x00000010);
      resultPlayerKicked_ = 0;
    }

    public static final int PETITIONENDREASON_FIELD_NUMBER = 6;
    private int petitionEndReason_;
    /**
     * <code>required .EndKickPetitionMessage.PetitionEndReason petitionEndReason = 6;</code>
     */
    public boolean hasPetitionEndReason() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .EndKickPetitionMessage.PetitionEndReason petitionEndReason = 6;</code>
     */
    public de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.PetitionEndReason getPetitionEndReason() {
      de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.PetitionEndReason result = de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.PetitionEndReason.forNumber(petitionEndReason_);
      return result == null ? de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.PetitionEndReason.petitionEndEnoughVotes : result;
    }
    /**
     * <code>required .EndKickPetitionMessage.PetitionEndReason petitionEndReason = 6;</code>
     */
    private void setPetitionEndReason(de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.PetitionEndReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      petitionEndReason_ = value.getNumber();
    }
    /**
     * <code>required .EndKickPetitionMessage.PetitionEndReason petitionEndReason = 6;</code>
     */
    private void clearPetitionEndReason() {
      bitField0_ = (bitField0_ & ~0x00000020);
      petitionEndReason_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, petitionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, numVotesAgainstKicking_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, numVotesInFavourOfKicking_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, resultPlayerKicked_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, petitionEndReason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, petitionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, numVotesAgainstKicking_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, numVotesInFavourOfKicking_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, resultPlayerKicked_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, petitionEndReason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code EndKickPetitionMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:EndKickPetitionMessage)
        de.pokerth.protocol.ProtoBuf.EndKickPetitionMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public boolean hasPetitionId() {
        return instance.hasPetitionId();
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public int getPetitionId() {
        return instance.getPetitionId();
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public Builder setPetitionId(int value) {
        copyOnWrite();
        instance.setPetitionId(value);
        return this;
      }
      /**
       * <code>required uint32 petitionId = 2;</code>
       */
      public Builder clearPetitionId() {
        copyOnWrite();
        instance.clearPetitionId();
        return this;
      }

      /**
       * <code>required uint32 numVotesAgainstKicking = 3;</code>
       */
      public boolean hasNumVotesAgainstKicking() {
        return instance.hasNumVotesAgainstKicking();
      }
      /**
       * <code>required uint32 numVotesAgainstKicking = 3;</code>
       */
      public int getNumVotesAgainstKicking() {
        return instance.getNumVotesAgainstKicking();
      }
      /**
       * <code>required uint32 numVotesAgainstKicking = 3;</code>
       */
      public Builder setNumVotesAgainstKicking(int value) {
        copyOnWrite();
        instance.setNumVotesAgainstKicking(value);
        return this;
      }
      /**
       * <code>required uint32 numVotesAgainstKicking = 3;</code>
       */
      public Builder clearNumVotesAgainstKicking() {
        copyOnWrite();
        instance.clearNumVotesAgainstKicking();
        return this;
      }

      /**
       * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
       */
      public boolean hasNumVotesInFavourOfKicking() {
        return instance.hasNumVotesInFavourOfKicking();
      }
      /**
       * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
       */
      public int getNumVotesInFavourOfKicking() {
        return instance.getNumVotesInFavourOfKicking();
      }
      /**
       * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
       */
      public Builder setNumVotesInFavourOfKicking(int value) {
        copyOnWrite();
        instance.setNumVotesInFavourOfKicking(value);
        return this;
      }
      /**
       * <code>required uint32 numVotesInFavourOfKicking = 4;</code>
       */
      public Builder clearNumVotesInFavourOfKicking() {
        copyOnWrite();
        instance.clearNumVotesInFavourOfKicking();
        return this;
      }

      /**
       * <code>required uint32 resultPlayerKicked = 5;</code>
       */
      public boolean hasResultPlayerKicked() {
        return instance.hasResultPlayerKicked();
      }
      /**
       * <code>required uint32 resultPlayerKicked = 5;</code>
       */
      public int getResultPlayerKicked() {
        return instance.getResultPlayerKicked();
      }
      /**
       * <code>required uint32 resultPlayerKicked = 5;</code>
       */
      public Builder setResultPlayerKicked(int value) {
        copyOnWrite();
        instance.setResultPlayerKicked(value);
        return this;
      }
      /**
       * <code>required uint32 resultPlayerKicked = 5;</code>
       */
      public Builder clearResultPlayerKicked() {
        copyOnWrite();
        instance.clearResultPlayerKicked();
        return this;
      }

      /**
       * <code>required .EndKickPetitionMessage.PetitionEndReason petitionEndReason = 6;</code>
       */
      public boolean hasPetitionEndReason() {
        return instance.hasPetitionEndReason();
      }
      /**
       * <code>required .EndKickPetitionMessage.PetitionEndReason petitionEndReason = 6;</code>
       */
      public de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.PetitionEndReason getPetitionEndReason() {
        return instance.getPetitionEndReason();
      }
      /**
       * <code>required .EndKickPetitionMessage.PetitionEndReason petitionEndReason = 6;</code>
       */
      public Builder setPetitionEndReason(de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.PetitionEndReason value) {
        copyOnWrite();
        instance.setPetitionEndReason(value);
        return this;
      }
      /**
       * <code>required .EndKickPetitionMessage.PetitionEndReason petitionEndReason = 6;</code>
       */
      public Builder clearPetitionEndReason() {
        copyOnWrite();
        instance.clearPetitionEndReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EndKickPetitionMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPetitionId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNumVotesAgainstKicking()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNumVotesInFavourOfKicking()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasResultPlayerKicked()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPetitionEndReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage other = (de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          petitionId_ = visitor.visitInt(
              hasPetitionId(), petitionId_,
              other.hasPetitionId(), other.petitionId_);
          numVotesAgainstKicking_ = visitor.visitInt(
              hasNumVotesAgainstKicking(), numVotesAgainstKicking_,
              other.hasNumVotesAgainstKicking(), other.numVotesAgainstKicking_);
          numVotesInFavourOfKicking_ = visitor.visitInt(
              hasNumVotesInFavourOfKicking(), numVotesInFavourOfKicking_,
              other.hasNumVotesInFavourOfKicking(), other.numVotesInFavourOfKicking_);
          resultPlayerKicked_ = visitor.visitInt(
              hasResultPlayerKicked(), resultPlayerKicked_,
              other.hasResultPlayerKicked(), other.resultPlayerKicked_);
          petitionEndReason_ = visitor.visitInt(hasPetitionEndReason(), petitionEndReason_,
              other.hasPetitionEndReason(), other.petitionEndReason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  petitionId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  numVotesAgainstKicking_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  numVotesInFavourOfKicking_ = input.readUInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  resultPlayerKicked_ = input.readUInt32();
                  break;
                }
                case 48: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.PetitionEndReason value = de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.PetitionEndReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(6, rawValue);
                  } else {
                    bitField0_ |= 0x00000020;
                    petitionEndReason_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:EndKickPetitionMessage)
    private static final de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EndKickPetitionMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EndKickPetitionMessage> PARSER;

    public static com.google.protobuf.Parser<EndKickPetitionMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StatisticsMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StatisticsMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    java.util.List<de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData> 
        getStatisticsDataList();
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData getStatisticsData(int index);
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    int getStatisticsDataCount();
  }
  /**
   * Protobuf type {@code StatisticsMessage}
   */
  public  static final class StatisticsMessage extends
      com.google.protobuf.GeneratedMessageLite<
          StatisticsMessage, StatisticsMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:StatisticsMessage)
      StatisticsMessageOrBuilder {
    private StatisticsMessage() {
      statisticsData_ = emptyProtobufList();
    }
    public interface StatisticsDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:StatisticsMessage.StatisticsData)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required .StatisticsMessage.StatisticsData.StatisticsType statisticsType = 1;</code>
       */
      boolean hasStatisticsType();
      /**
       * <code>required .StatisticsMessage.StatisticsData.StatisticsType statisticsType = 1;</code>
       */
      de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.StatisticsType getStatisticsType();

      /**
       * <code>required uint32 statisticsValue = 2;</code>
       */
      boolean hasStatisticsValue();
      /**
       * <code>required uint32 statisticsValue = 2;</code>
       */
      int getStatisticsValue();
    }
    /**
     * Protobuf type {@code StatisticsMessage.StatisticsData}
     */
    public  static final class StatisticsData extends
        com.google.protobuf.GeneratedMessageLite<
            StatisticsData, StatisticsData.Builder> implements
        // @@protoc_insertion_point(message_implements:StatisticsMessage.StatisticsData)
        StatisticsDataOrBuilder {
      private StatisticsData() {
        statisticsType_ = 1;
      }
      /**
       * Protobuf enum {@code StatisticsMessage.StatisticsData.StatisticsType}
       */
      public enum StatisticsType
          implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>statNumberOfPlayers = 1;</code>
         */
        statNumberOfPlayers(1),
        ;

        /**
         * <code>statNumberOfPlayers = 1;</code>
         */
        public static final int statNumberOfPlayers_VALUE = 1;


        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static StatisticsType valueOf(int value) {
          return forNumber(value);
        }

        public static StatisticsType forNumber(int value) {
          switch (value) {
            case 1: return statNumberOfPlayers;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<StatisticsType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            StatisticsType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<StatisticsType>() {
                public StatisticsType findValueByNumber(int number) {
                  return StatisticsType.forNumber(number);
                }
              };

        private final int value;

        private StatisticsType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:StatisticsMessage.StatisticsData.StatisticsType)
      }

      private int bitField0_;
      public static final int STATISTICSTYPE_FIELD_NUMBER = 1;
      private int statisticsType_;
      /**
       * <code>required .StatisticsMessage.StatisticsData.StatisticsType statisticsType = 1;</code>
       */
      public boolean hasStatisticsType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .StatisticsMessage.StatisticsData.StatisticsType statisticsType = 1;</code>
       */
      public de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.StatisticsType getStatisticsType() {
        de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.StatisticsType result = de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.StatisticsType.forNumber(statisticsType_);
        return result == null ? de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.StatisticsType.statNumberOfPlayers : result;
      }
      /**
       * <code>required .StatisticsMessage.StatisticsData.StatisticsType statisticsType = 1;</code>
       */
      private void setStatisticsType(de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.StatisticsType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        statisticsType_ = value.getNumber();
      }
      /**
       * <code>required .StatisticsMessage.StatisticsData.StatisticsType statisticsType = 1;</code>
       */
      private void clearStatisticsType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        statisticsType_ = 1;
      }

      public static final int STATISTICSVALUE_FIELD_NUMBER = 2;
      private int statisticsValue_;
      /**
       * <code>required uint32 statisticsValue = 2;</code>
       */
      public boolean hasStatisticsValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 statisticsValue = 2;</code>
       */
      public int getStatisticsValue() {
        return statisticsValue_;
      }
      /**
       * <code>required uint32 statisticsValue = 2;</code>
       */
      private void setStatisticsValue(int value) {
        bitField0_ |= 0x00000002;
        statisticsValue_ = value;
      }
      /**
       * <code>required uint32 statisticsValue = 2;</code>
       */
      private void clearStatisticsValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        statisticsValue_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, statisticsType_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, statisticsValue_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, statisticsType_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, statisticsValue_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code StatisticsMessage.StatisticsData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData, Builder> implements
          // @@protoc_insertion_point(builder_implements:StatisticsMessage.StatisticsData)
          de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsDataOrBuilder {
        // Construct using de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required .StatisticsMessage.StatisticsData.StatisticsType statisticsType = 1;</code>
         */
        public boolean hasStatisticsType() {
          return instance.hasStatisticsType();
        }
        /**
         * <code>required .StatisticsMessage.StatisticsData.StatisticsType statisticsType = 1;</code>
         */
        public de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.StatisticsType getStatisticsType() {
          return instance.getStatisticsType();
        }
        /**
         * <code>required .StatisticsMessage.StatisticsData.StatisticsType statisticsType = 1;</code>
         */
        public Builder setStatisticsType(de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.StatisticsType value) {
          copyOnWrite();
          instance.setStatisticsType(value);
          return this;
        }
        /**
         * <code>required .StatisticsMessage.StatisticsData.StatisticsType statisticsType = 1;</code>
         */
        public Builder clearStatisticsType() {
          copyOnWrite();
          instance.clearStatisticsType();
          return this;
        }

        /**
         * <code>required uint32 statisticsValue = 2;</code>
         */
        public boolean hasStatisticsValue() {
          return instance.hasStatisticsValue();
        }
        /**
         * <code>required uint32 statisticsValue = 2;</code>
         */
        public int getStatisticsValue() {
          return instance.getStatisticsValue();
        }
        /**
         * <code>required uint32 statisticsValue = 2;</code>
         */
        public Builder setStatisticsValue(int value) {
          copyOnWrite();
          instance.setStatisticsValue(value);
          return this;
        }
        /**
         * <code>required uint32 statisticsValue = 2;</code>
         */
        public Builder clearStatisticsValue() {
          copyOnWrite();
          instance.clearStatisticsValue();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:StatisticsMessage.StatisticsData)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasStatisticsType()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasStatisticsValue()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData other = (de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData) arg1;
            statisticsType_ = visitor.visitInt(hasStatisticsType(), statisticsType_,
                other.hasStatisticsType(), other.statisticsType_);
            statisticsValue_ = visitor.visitInt(
                hasStatisticsValue(), statisticsValue_,
                other.hasStatisticsValue(), other.statisticsValue_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    int rawValue = input.readEnum();
                    de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.StatisticsType value = de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.StatisticsType.forNumber(rawValue);
                    if (value == null) {
                      super.mergeVarintField(1, rawValue);
                    } else {
                      bitField0_ |= 0x00000001;
                      statisticsType_ = rawValue;
                    }
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    statisticsValue_ = input.readUInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:StatisticsMessage.StatisticsData)
      private static final de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new StatisticsData();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<StatisticsData> PARSER;

      public static com.google.protobuf.Parser<StatisticsData> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int STATISTICSDATA_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData> statisticsData_;
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    public java.util.List<de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData> getStatisticsDataList() {
      return statisticsData_;
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    public java.util.List<? extends de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsDataOrBuilder> 
        getStatisticsDataOrBuilderList() {
      return statisticsData_;
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    public int getStatisticsDataCount() {
      return statisticsData_.size();
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    public de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData getStatisticsData(int index) {
      return statisticsData_.get(index);
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    public de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsDataOrBuilder getStatisticsDataOrBuilder(
        int index) {
      return statisticsData_.get(index);
    }
    private void ensureStatisticsDataIsMutable() {
      if (!statisticsData_.isModifiable()) {
        statisticsData_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(statisticsData_);
       }
    }

    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    private void setStatisticsData(
        int index, de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStatisticsDataIsMutable();
      statisticsData_.set(index, value);
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    private void setStatisticsData(
        int index, de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.Builder builderForValue) {
      ensureStatisticsDataIsMutable();
      statisticsData_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    private void addStatisticsData(de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStatisticsDataIsMutable();
      statisticsData_.add(value);
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    private void addStatisticsData(
        int index, de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStatisticsDataIsMutable();
      statisticsData_.add(index, value);
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    private void addStatisticsData(
        de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.Builder builderForValue) {
      ensureStatisticsDataIsMutable();
      statisticsData_.add(builderForValue.build());
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    private void addStatisticsData(
        int index, de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.Builder builderForValue) {
      ensureStatisticsDataIsMutable();
      statisticsData_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    private void addAllStatisticsData(
        java.lang.Iterable<? extends de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData> values) {
      ensureStatisticsDataIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, statisticsData_);
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    private void clearStatisticsData() {
      statisticsData_ = emptyProtobufList();
    }
    /**
     * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
     */
    private void removeStatisticsData(int index) {
      ensureStatisticsDataIsMutable();
      statisticsData_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < statisticsData_.size(); i++) {
        output.writeMessage(1, statisticsData_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < statisticsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, statisticsData_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.StatisticsMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.StatisticsMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StatisticsMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.StatisticsMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StatisticsMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StatisticsMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StatisticsMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StatisticsMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.StatisticsMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.StatisticsMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.StatisticsMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code StatisticsMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.StatisticsMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:StatisticsMessage)
        de.pokerth.protocol.ProtoBuf.StatisticsMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.StatisticsMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public java.util.List<de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData> getStatisticsDataList() {
        return java.util.Collections.unmodifiableList(
            instance.getStatisticsDataList());
      }
      /**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public int getStatisticsDataCount() {
        return instance.getStatisticsDataCount();
      }/**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData getStatisticsData(int index) {
        return instance.getStatisticsData(index);
      }
      /**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public Builder setStatisticsData(
          int index, de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData value) {
        copyOnWrite();
        instance.setStatisticsData(index, value);
        return this;
      }
      /**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public Builder setStatisticsData(
          int index, de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.Builder builderForValue) {
        copyOnWrite();
        instance.setStatisticsData(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public Builder addStatisticsData(de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData value) {
        copyOnWrite();
        instance.addStatisticsData(value);
        return this;
      }
      /**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public Builder addStatisticsData(
          int index, de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData value) {
        copyOnWrite();
        instance.addStatisticsData(index, value);
        return this;
      }
      /**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public Builder addStatisticsData(
          de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.Builder builderForValue) {
        copyOnWrite();
        instance.addStatisticsData(builderForValue);
        return this;
      }
      /**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public Builder addStatisticsData(
          int index, de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.Builder builderForValue) {
        copyOnWrite();
        instance.addStatisticsData(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public Builder addAllStatisticsData(
          java.lang.Iterable<? extends de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData> values) {
        copyOnWrite();
        instance.addAllStatisticsData(values);
        return this;
      }
      /**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public Builder clearStatisticsData() {
        copyOnWrite();
        instance.clearStatisticsData();
        return this;
      }
      /**
       * <code>repeated .StatisticsMessage.StatisticsData statisticsData = 1;</code>
       */
      public Builder removeStatisticsData(int index) {
        copyOnWrite();
        instance.removeStatisticsData(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StatisticsMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.StatisticsMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getStatisticsDataCount(); i++) {
            if (!getStatisticsData(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          statisticsData_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.StatisticsMessage other = (de.pokerth.protocol.ProtoBuf.StatisticsMessage) arg1;
          statisticsData_= visitor.visitList(statisticsData_, other.statisticsData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!statisticsData_.isModifiable()) {
                    statisticsData_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(statisticsData_);
                  }
                  statisticsData_.add(
                      input.readMessage(de.pokerth.protocol.ProtoBuf.StatisticsMessage.StatisticsData.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.StatisticsMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:StatisticsMessage)
    private static final de.pokerth.protocol.ProtoBuf.StatisticsMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StatisticsMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.StatisticsMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StatisticsMessage> PARSER;

    public static com.google.protobuf.Parser<StatisticsMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ChatRequestMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ChatRequestMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional uint32 targetGameId = 1;</code>
     */
    boolean hasTargetGameId();
    /**
     * <code>optional uint32 targetGameId = 1;</code>
     */
    int getTargetGameId();

    /**
     * <code>optional uint32 targetPlayerId = 2;</code>
     */
    boolean hasTargetPlayerId();
    /**
     * <code>optional uint32 targetPlayerId = 2;</code>
     */
    int getTargetPlayerId();

    /**
     * <code>required string chatText = 3;</code>
     */
    boolean hasChatText();
    /**
     * <code>required string chatText = 3;</code>
     */
    java.lang.String getChatText();
    /**
     * <code>required string chatText = 3;</code>
     */
    com.google.protobuf.ByteString
        getChatTextBytes();
  }
  /**
   * Protobuf type {@code ChatRequestMessage}
   */
  public  static final class ChatRequestMessage extends
      com.google.protobuf.GeneratedMessageLite<
          ChatRequestMessage, ChatRequestMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:ChatRequestMessage)
      ChatRequestMessageOrBuilder {
    private ChatRequestMessage() {
      chatText_ = "";
    }
    private int bitField0_;
    public static final int TARGETGAMEID_FIELD_NUMBER = 1;
    private int targetGameId_;
    /**
     * <code>optional uint32 targetGameId = 1;</code>
     */
    public boolean hasTargetGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 targetGameId = 1;</code>
     */
    public int getTargetGameId() {
      return targetGameId_;
    }
    /**
     * <code>optional uint32 targetGameId = 1;</code>
     */
    private void setTargetGameId(int value) {
      bitField0_ |= 0x00000001;
      targetGameId_ = value;
    }
    /**
     * <code>optional uint32 targetGameId = 1;</code>
     */
    private void clearTargetGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      targetGameId_ = 0;
    }

    public static final int TARGETPLAYERID_FIELD_NUMBER = 2;
    private int targetPlayerId_;
    /**
     * <code>optional uint32 targetPlayerId = 2;</code>
     */
    public boolean hasTargetPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 targetPlayerId = 2;</code>
     */
    public int getTargetPlayerId() {
      return targetPlayerId_;
    }
    /**
     * <code>optional uint32 targetPlayerId = 2;</code>
     */
    private void setTargetPlayerId(int value) {
      bitField0_ |= 0x00000002;
      targetPlayerId_ = value;
    }
    /**
     * <code>optional uint32 targetPlayerId = 2;</code>
     */
    private void clearTargetPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      targetPlayerId_ = 0;
    }

    public static final int CHATTEXT_FIELD_NUMBER = 3;
    private java.lang.String chatText_;
    /**
     * <code>required string chatText = 3;</code>
     */
    public boolean hasChatText() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string chatText = 3;</code>
     */
    public java.lang.String getChatText() {
      return chatText_;
    }
    /**
     * <code>required string chatText = 3;</code>
     */
    public com.google.protobuf.ByteString
        getChatTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(chatText_);
    }
    /**
     * <code>required string chatText = 3;</code>
     */
    private void setChatText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      chatText_ = value;
    }
    /**
     * <code>required string chatText = 3;</code>
     */
    private void clearChatText() {
      bitField0_ = (bitField0_ & ~0x00000004);
      chatText_ = getDefaultInstance().getChatText();
    }
    /**
     * <code>required string chatText = 3;</code>
     */
    private void setChatTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      chatText_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, targetGameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, targetPlayerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getChatText());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, targetGameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, targetPlayerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getChatText());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.ChatRequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.ChatRequestMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code ChatRequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.ChatRequestMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:ChatRequestMessage)
        de.pokerth.protocol.ProtoBuf.ChatRequestMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.ChatRequestMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional uint32 targetGameId = 1;</code>
       */
      public boolean hasTargetGameId() {
        return instance.hasTargetGameId();
      }
      /**
       * <code>optional uint32 targetGameId = 1;</code>
       */
      public int getTargetGameId() {
        return instance.getTargetGameId();
      }
      /**
       * <code>optional uint32 targetGameId = 1;</code>
       */
      public Builder setTargetGameId(int value) {
        copyOnWrite();
        instance.setTargetGameId(value);
        return this;
      }
      /**
       * <code>optional uint32 targetGameId = 1;</code>
       */
      public Builder clearTargetGameId() {
        copyOnWrite();
        instance.clearTargetGameId();
        return this;
      }

      /**
       * <code>optional uint32 targetPlayerId = 2;</code>
       */
      public boolean hasTargetPlayerId() {
        return instance.hasTargetPlayerId();
      }
      /**
       * <code>optional uint32 targetPlayerId = 2;</code>
       */
      public int getTargetPlayerId() {
        return instance.getTargetPlayerId();
      }
      /**
       * <code>optional uint32 targetPlayerId = 2;</code>
       */
      public Builder setTargetPlayerId(int value) {
        copyOnWrite();
        instance.setTargetPlayerId(value);
        return this;
      }
      /**
       * <code>optional uint32 targetPlayerId = 2;</code>
       */
      public Builder clearTargetPlayerId() {
        copyOnWrite();
        instance.clearTargetPlayerId();
        return this;
      }

      /**
       * <code>required string chatText = 3;</code>
       */
      public boolean hasChatText() {
        return instance.hasChatText();
      }
      /**
       * <code>required string chatText = 3;</code>
       */
      public java.lang.String getChatText() {
        return instance.getChatText();
      }
      /**
       * <code>required string chatText = 3;</code>
       */
      public com.google.protobuf.ByteString
          getChatTextBytes() {
        return instance.getChatTextBytes();
      }
      /**
       * <code>required string chatText = 3;</code>
       */
      public Builder setChatText(
          java.lang.String value) {
        copyOnWrite();
        instance.setChatText(value);
        return this;
      }
      /**
       * <code>required string chatText = 3;</code>
       */
      public Builder clearChatText() {
        copyOnWrite();
        instance.clearChatText();
        return this;
      }
      /**
       * <code>required string chatText = 3;</code>
       */
      public Builder setChatTextBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChatTextBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ChatRequestMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.ChatRequestMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasChatText()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.ChatRequestMessage other = (de.pokerth.protocol.ProtoBuf.ChatRequestMessage) arg1;
          targetGameId_ = visitor.visitInt(
              hasTargetGameId(), targetGameId_,
              other.hasTargetGameId(), other.targetGameId_);
          targetPlayerId_ = visitor.visitInt(
              hasTargetPlayerId(), targetPlayerId_,
              other.hasTargetPlayerId(), other.targetPlayerId_);
          chatText_ = visitor.visitString(
              hasChatText(), chatText_,
              other.hasChatText(), other.chatText_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  targetGameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  targetPlayerId_ = input.readUInt32();
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  chatText_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.ChatRequestMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ChatRequestMessage)
    private static final de.pokerth.protocol.ProtoBuf.ChatRequestMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ChatRequestMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.ChatRequestMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChatRequestMessage> PARSER;

    public static com.google.protobuf.Parser<ChatRequestMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ChatMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ChatMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional uint32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>optional uint32 gameId = 1;</code>
     */
    int getGameId();

    /**
     * <code>optional uint32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional uint32 playerId = 2;</code>
     */
    int getPlayerId();

    /**
     * <code>required .ChatMessage.ChatType chatType = 3;</code>
     */
    boolean hasChatType();
    /**
     * <code>required .ChatMessage.ChatType chatType = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.ChatMessage.ChatType getChatType();

    /**
     * <code>required string chatText = 4;</code>
     */
    boolean hasChatText();
    /**
     * <code>required string chatText = 4;</code>
     */
    java.lang.String getChatText();
    /**
     * <code>required string chatText = 4;</code>
     */
    com.google.protobuf.ByteString
        getChatTextBytes();
  }
  /**
   * Protobuf type {@code ChatMessage}
   */
  public  static final class ChatMessage extends
      com.google.protobuf.GeneratedMessageLite<
          ChatMessage, ChatMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:ChatMessage)
      ChatMessageOrBuilder {
    private ChatMessage() {
      chatText_ = "";
    }
    /**
     * Protobuf enum {@code ChatMessage.ChatType}
     */
    public enum ChatType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>chatTypeLobby = 0;</code>
       */
      chatTypeLobby(0),
      /**
       * <code>chatTypeGame = 1;</code>
       */
      chatTypeGame(1),
      /**
       * <code>chatTypeBot = 2;</code>
       */
      chatTypeBot(2),
      /**
       * <code>chatTypeBroadcast = 3;</code>
       */
      chatTypeBroadcast(3),
      /**
       * <code>chatTypePrivate = 4;</code>
       */
      chatTypePrivate(4),
      ;

      /**
       * <code>chatTypeLobby = 0;</code>
       */
      public static final int chatTypeLobby_VALUE = 0;
      /**
       * <code>chatTypeGame = 1;</code>
       */
      public static final int chatTypeGame_VALUE = 1;
      /**
       * <code>chatTypeBot = 2;</code>
       */
      public static final int chatTypeBot_VALUE = 2;
      /**
       * <code>chatTypeBroadcast = 3;</code>
       */
      public static final int chatTypeBroadcast_VALUE = 3;
      /**
       * <code>chatTypePrivate = 4;</code>
       */
      public static final int chatTypePrivate_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ChatType valueOf(int value) {
        return forNumber(value);
      }

      public static ChatType forNumber(int value) {
        switch (value) {
          case 0: return chatTypeLobby;
          case 1: return chatTypeGame;
          case 2: return chatTypeBot;
          case 3: return chatTypeBroadcast;
          case 4: return chatTypePrivate;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ChatType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ChatType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ChatType>() {
              public ChatType findValueByNumber(int number) {
                return ChatType.forNumber(number);
              }
            };

      private final int value;

      private ChatType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ChatMessage.ChatType)
    }

    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>optional uint32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }
    /**
     * <code>optional uint32 gameId = 1;</code>
     */
    private void setGameId(int value) {
      bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>optional uint32 gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = 0;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>optional uint32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>optional uint32 playerId = 2;</code>
     */
    private void setPlayerId(int value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
    }
    /**
     * <code>optional uint32 playerId = 2;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0;
    }

    public static final int CHATTYPE_FIELD_NUMBER = 3;
    private int chatType_;
    /**
     * <code>required .ChatMessage.ChatType chatType = 3;</code>
     */
    public boolean hasChatType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .ChatMessage.ChatType chatType = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ChatMessage.ChatType getChatType() {
      de.pokerth.protocol.ProtoBuf.ChatMessage.ChatType result = de.pokerth.protocol.ProtoBuf.ChatMessage.ChatType.forNumber(chatType_);
      return result == null ? de.pokerth.protocol.ProtoBuf.ChatMessage.ChatType.chatTypeLobby : result;
    }
    /**
     * <code>required .ChatMessage.ChatType chatType = 3;</code>
     */
    private void setChatType(de.pokerth.protocol.ProtoBuf.ChatMessage.ChatType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      chatType_ = value.getNumber();
    }
    /**
     * <code>required .ChatMessage.ChatType chatType = 3;</code>
     */
    private void clearChatType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      chatType_ = 0;
    }

    public static final int CHATTEXT_FIELD_NUMBER = 4;
    private java.lang.String chatText_;
    /**
     * <code>required string chatText = 4;</code>
     */
    public boolean hasChatText() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string chatText = 4;</code>
     */
    public java.lang.String getChatText() {
      return chatText_;
    }
    /**
     * <code>required string chatText = 4;</code>
     */
    public com.google.protobuf.ByteString
        getChatTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(chatText_);
    }
    /**
     * <code>required string chatText = 4;</code>
     */
    private void setChatText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      chatText_ = value;
    }
    /**
     * <code>required string chatText = 4;</code>
     */
    private void clearChatText() {
      bitField0_ = (bitField0_ & ~0x00000008);
      chatText_ = getDefaultInstance().getChatText();
    }
    /**
     * <code>required string chatText = 4;</code>
     */
    private void setChatTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      chatText_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, chatType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getChatText());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, chatType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getChatText());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.ChatMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.ChatMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code ChatMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.ChatMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:ChatMessage)
        de.pokerth.protocol.ProtoBuf.ChatMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.ChatMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional uint32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>optional uint32 gameId = 1;</code>
       */
      public int getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>optional uint32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>optional uint32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }

      /**
       * <code>optional uint32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <code>optional uint32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <code>optional uint32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <code>optional uint32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }

      /**
       * <code>required .ChatMessage.ChatType chatType = 3;</code>
       */
      public boolean hasChatType() {
        return instance.hasChatType();
      }
      /**
       * <code>required .ChatMessage.ChatType chatType = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ChatMessage.ChatType getChatType() {
        return instance.getChatType();
      }
      /**
       * <code>required .ChatMessage.ChatType chatType = 3;</code>
       */
      public Builder setChatType(de.pokerth.protocol.ProtoBuf.ChatMessage.ChatType value) {
        copyOnWrite();
        instance.setChatType(value);
        return this;
      }
      /**
       * <code>required .ChatMessage.ChatType chatType = 3;</code>
       */
      public Builder clearChatType() {
        copyOnWrite();
        instance.clearChatType();
        return this;
      }

      /**
       * <code>required string chatText = 4;</code>
       */
      public boolean hasChatText() {
        return instance.hasChatText();
      }
      /**
       * <code>required string chatText = 4;</code>
       */
      public java.lang.String getChatText() {
        return instance.getChatText();
      }
      /**
       * <code>required string chatText = 4;</code>
       */
      public com.google.protobuf.ByteString
          getChatTextBytes() {
        return instance.getChatTextBytes();
      }
      /**
       * <code>required string chatText = 4;</code>
       */
      public Builder setChatText(
          java.lang.String value) {
        copyOnWrite();
        instance.setChatText(value);
        return this;
      }
      /**
       * <code>required string chatText = 4;</code>
       */
      public Builder clearChatText() {
        copyOnWrite();
        instance.clearChatText();
        return this;
      }
      /**
       * <code>required string chatText = 4;</code>
       */
      public Builder setChatTextBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChatTextBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ChatMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.ChatMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasChatType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasChatText()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.ChatMessage other = (de.pokerth.protocol.ProtoBuf.ChatMessage) arg1;
          gameId_ = visitor.visitInt(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          playerId_ = visitor.visitInt(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          chatType_ = visitor.visitInt(hasChatType(), chatType_,
              other.hasChatType(), other.chatType_);
          chatText_ = visitor.visitString(
              hasChatText(), chatText_,
              other.hasChatText(), other.chatText_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerId_ = input.readUInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.ChatMessage.ChatType value = de.pokerth.protocol.ProtoBuf.ChatMessage.ChatType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    chatType_ = rawValue;
                  }
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  chatText_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.ChatMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ChatMessage)
    private static final de.pokerth.protocol.ProtoBuf.ChatMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ChatMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.ChatMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChatMessage> PARSER;

    public static com.google.protobuf.Parser<ChatMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ChatRejectMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ChatRejectMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string chatText = 1;</code>
     */
    boolean hasChatText();
    /**
     * <code>required string chatText = 1;</code>
     */
    java.lang.String getChatText();
    /**
     * <code>required string chatText = 1;</code>
     */
    com.google.protobuf.ByteString
        getChatTextBytes();
  }
  /**
   * Protobuf type {@code ChatRejectMessage}
   */
  public  static final class ChatRejectMessage extends
      com.google.protobuf.GeneratedMessageLite<
          ChatRejectMessage, ChatRejectMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:ChatRejectMessage)
      ChatRejectMessageOrBuilder {
    private ChatRejectMessage() {
      chatText_ = "";
    }
    private int bitField0_;
    public static final int CHATTEXT_FIELD_NUMBER = 1;
    private java.lang.String chatText_;
    /**
     * <code>required string chatText = 1;</code>
     */
    public boolean hasChatText() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string chatText = 1;</code>
     */
    public java.lang.String getChatText() {
      return chatText_;
    }
    /**
     * <code>required string chatText = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChatTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(chatText_);
    }
    /**
     * <code>required string chatText = 1;</code>
     */
    private void setChatText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      chatText_ = value;
    }
    /**
     * <code>required string chatText = 1;</code>
     */
    private void clearChatText() {
      bitField0_ = (bitField0_ & ~0x00000001);
      chatText_ = getDefaultInstance().getChatText();
    }
    /**
     * <code>required string chatText = 1;</code>
     */
    private void setChatTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      chatText_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getChatText());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getChatText());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.ChatRejectMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRejectMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRejectMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRejectMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRejectMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRejectMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRejectMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRejectMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRejectMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ChatRejectMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.ChatRejectMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code ChatRejectMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.ChatRejectMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:ChatRejectMessage)
        de.pokerth.protocol.ProtoBuf.ChatRejectMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.ChatRejectMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string chatText = 1;</code>
       */
      public boolean hasChatText() {
        return instance.hasChatText();
      }
      /**
       * <code>required string chatText = 1;</code>
       */
      public java.lang.String getChatText() {
        return instance.getChatText();
      }
      /**
       * <code>required string chatText = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChatTextBytes() {
        return instance.getChatTextBytes();
      }
      /**
       * <code>required string chatText = 1;</code>
       */
      public Builder setChatText(
          java.lang.String value) {
        copyOnWrite();
        instance.setChatText(value);
        return this;
      }
      /**
       * <code>required string chatText = 1;</code>
       */
      public Builder clearChatText() {
        copyOnWrite();
        instance.clearChatText();
        return this;
      }
      /**
       * <code>required string chatText = 1;</code>
       */
      public Builder setChatTextBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChatTextBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ChatRejectMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.ChatRejectMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasChatText()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.ChatRejectMessage other = (de.pokerth.protocol.ProtoBuf.ChatRejectMessage) arg1;
          chatText_ = visitor.visitString(
              hasChatText(), chatText_,
              other.hasChatText(), other.chatText_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  chatText_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.ChatRejectMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ChatRejectMessage)
    private static final de.pokerth.protocol.ProtoBuf.ChatRejectMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ChatRejectMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.ChatRejectMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChatRejectMessage> PARSER;

    public static com.google.protobuf.Parser<ChatRejectMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DialogMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DialogMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string notificationText = 1;</code>
     */
    boolean hasNotificationText();
    /**
     * <code>required string notificationText = 1;</code>
     */
    java.lang.String getNotificationText();
    /**
     * <code>required string notificationText = 1;</code>
     */
    com.google.protobuf.ByteString
        getNotificationTextBytes();
  }
  /**
   * Protobuf type {@code DialogMessage}
   */
  public  static final class DialogMessage extends
      com.google.protobuf.GeneratedMessageLite<
          DialogMessage, DialogMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:DialogMessage)
      DialogMessageOrBuilder {
    private DialogMessage() {
      notificationText_ = "";
    }
    private int bitField0_;
    public static final int NOTIFICATIONTEXT_FIELD_NUMBER = 1;
    private java.lang.String notificationText_;
    /**
     * <code>required string notificationText = 1;</code>
     */
    public boolean hasNotificationText() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string notificationText = 1;</code>
     */
    public java.lang.String getNotificationText() {
      return notificationText_;
    }
    /**
     * <code>required string notificationText = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNotificationTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(notificationText_);
    }
    /**
     * <code>required string notificationText = 1;</code>
     */
    private void setNotificationText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      notificationText_ = value;
    }
    /**
     * <code>required string notificationText = 1;</code>
     */
    private void clearNotificationText() {
      bitField0_ = (bitField0_ & ~0x00000001);
      notificationText_ = getDefaultInstance().getNotificationText();
    }
    /**
     * <code>required string notificationText = 1;</code>
     */
    private void setNotificationTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      notificationText_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getNotificationText());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getNotificationText());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.DialogMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.DialogMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DialogMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.DialogMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DialogMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DialogMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DialogMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DialogMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.DialogMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.DialogMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.DialogMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code DialogMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.DialogMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:DialogMessage)
        de.pokerth.protocol.ProtoBuf.DialogMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.DialogMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string notificationText = 1;</code>
       */
      public boolean hasNotificationText() {
        return instance.hasNotificationText();
      }
      /**
       * <code>required string notificationText = 1;</code>
       */
      public java.lang.String getNotificationText() {
        return instance.getNotificationText();
      }
      /**
       * <code>required string notificationText = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNotificationTextBytes() {
        return instance.getNotificationTextBytes();
      }
      /**
       * <code>required string notificationText = 1;</code>
       */
      public Builder setNotificationText(
          java.lang.String value) {
        copyOnWrite();
        instance.setNotificationText(value);
        return this;
      }
      /**
       * <code>required string notificationText = 1;</code>
       */
      public Builder clearNotificationText() {
        copyOnWrite();
        instance.clearNotificationText();
        return this;
      }
      /**
       * <code>required string notificationText = 1;</code>
       */
      public Builder setNotificationTextBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNotificationTextBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DialogMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.DialogMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasNotificationText()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.DialogMessage other = (de.pokerth.protocol.ProtoBuf.DialogMessage) arg1;
          notificationText_ = visitor.visitString(
              hasNotificationText(), notificationText_,
              other.hasNotificationText(), other.notificationText_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  notificationText_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.DialogMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:DialogMessage)
    private static final de.pokerth.protocol.ProtoBuf.DialogMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DialogMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.DialogMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DialogMessage> PARSER;

    public static com.google.protobuf.Parser<DialogMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TimeoutWarningMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TimeoutWarningMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .TimeoutWarningMessage.TimeoutReason timeoutReason = 1;</code>
     */
    boolean hasTimeoutReason();
    /**
     * <code>required .TimeoutWarningMessage.TimeoutReason timeoutReason = 1;</code>
     */
    de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.TimeoutReason getTimeoutReason();

    /**
     * <code>required uint32 remainingSeconds = 2;</code>
     */
    boolean hasRemainingSeconds();
    /**
     * <code>required uint32 remainingSeconds = 2;</code>
     */
    int getRemainingSeconds();
  }
  /**
   * Protobuf type {@code TimeoutWarningMessage}
   */
  public  static final class TimeoutWarningMessage extends
      com.google.protobuf.GeneratedMessageLite<
          TimeoutWarningMessage, TimeoutWarningMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:TimeoutWarningMessage)
      TimeoutWarningMessageOrBuilder {
    private TimeoutWarningMessage() {
    }
    /**
     * Protobuf enum {@code TimeoutWarningMessage.TimeoutReason}
     */
    public enum TimeoutReason
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>timeoutNoDataReceived = 0;</code>
       */
      timeoutNoDataReceived(0),
      /**
       * <code>timeoutInactiveGame = 1;</code>
       */
      timeoutInactiveGame(1),
      /**
       * <code>timeoutKickAfterAutofold = 2;</code>
       */
      timeoutKickAfterAutofold(2),
      ;

      /**
       * <code>timeoutNoDataReceived = 0;</code>
       */
      public static final int timeoutNoDataReceived_VALUE = 0;
      /**
       * <code>timeoutInactiveGame = 1;</code>
       */
      public static final int timeoutInactiveGame_VALUE = 1;
      /**
       * <code>timeoutKickAfterAutofold = 2;</code>
       */
      public static final int timeoutKickAfterAutofold_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TimeoutReason valueOf(int value) {
        return forNumber(value);
      }

      public static TimeoutReason forNumber(int value) {
        switch (value) {
          case 0: return timeoutNoDataReceived;
          case 1: return timeoutInactiveGame;
          case 2: return timeoutKickAfterAutofold;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TimeoutReason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TimeoutReason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TimeoutReason>() {
              public TimeoutReason findValueByNumber(int number) {
                return TimeoutReason.forNumber(number);
              }
            };

      private final int value;

      private TimeoutReason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:TimeoutWarningMessage.TimeoutReason)
    }

    private int bitField0_;
    public static final int TIMEOUTREASON_FIELD_NUMBER = 1;
    private int timeoutReason_;
    /**
     * <code>required .TimeoutWarningMessage.TimeoutReason timeoutReason = 1;</code>
     */
    public boolean hasTimeoutReason() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TimeoutWarningMessage.TimeoutReason timeoutReason = 1;</code>
     */
    public de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.TimeoutReason getTimeoutReason() {
      de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.TimeoutReason result = de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.TimeoutReason.forNumber(timeoutReason_);
      return result == null ? de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.TimeoutReason.timeoutNoDataReceived : result;
    }
    /**
     * <code>required .TimeoutWarningMessage.TimeoutReason timeoutReason = 1;</code>
     */
    private void setTimeoutReason(de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.TimeoutReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      timeoutReason_ = value.getNumber();
    }
    /**
     * <code>required .TimeoutWarningMessage.TimeoutReason timeoutReason = 1;</code>
     */
    private void clearTimeoutReason() {
      bitField0_ = (bitField0_ & ~0x00000001);
      timeoutReason_ = 0;
    }

    public static final int REMAININGSECONDS_FIELD_NUMBER = 2;
    private int remainingSeconds_;
    /**
     * <code>required uint32 remainingSeconds = 2;</code>
     */
    public boolean hasRemainingSeconds() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 remainingSeconds = 2;</code>
     */
    public int getRemainingSeconds() {
      return remainingSeconds_;
    }
    /**
     * <code>required uint32 remainingSeconds = 2;</code>
     */
    private void setRemainingSeconds(int value) {
      bitField0_ |= 0x00000002;
      remainingSeconds_ = value;
    }
    /**
     * <code>required uint32 remainingSeconds = 2;</code>
     */
    private void clearRemainingSeconds() {
      bitField0_ = (bitField0_ & ~0x00000002);
      remainingSeconds_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, timeoutReason_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, remainingSeconds_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, timeoutReason_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, remainingSeconds_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TimeoutWarningMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:TimeoutWarningMessage)
        de.pokerth.protocol.ProtoBuf.TimeoutWarningMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .TimeoutWarningMessage.TimeoutReason timeoutReason = 1;</code>
       */
      public boolean hasTimeoutReason() {
        return instance.hasTimeoutReason();
      }
      /**
       * <code>required .TimeoutWarningMessage.TimeoutReason timeoutReason = 1;</code>
       */
      public de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.TimeoutReason getTimeoutReason() {
        return instance.getTimeoutReason();
      }
      /**
       * <code>required .TimeoutWarningMessage.TimeoutReason timeoutReason = 1;</code>
       */
      public Builder setTimeoutReason(de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.TimeoutReason value) {
        copyOnWrite();
        instance.setTimeoutReason(value);
        return this;
      }
      /**
       * <code>required .TimeoutWarningMessage.TimeoutReason timeoutReason = 1;</code>
       */
      public Builder clearTimeoutReason() {
        copyOnWrite();
        instance.clearTimeoutReason();
        return this;
      }

      /**
       * <code>required uint32 remainingSeconds = 2;</code>
       */
      public boolean hasRemainingSeconds() {
        return instance.hasRemainingSeconds();
      }
      /**
       * <code>required uint32 remainingSeconds = 2;</code>
       */
      public int getRemainingSeconds() {
        return instance.getRemainingSeconds();
      }
      /**
       * <code>required uint32 remainingSeconds = 2;</code>
       */
      public Builder setRemainingSeconds(int value) {
        copyOnWrite();
        instance.setRemainingSeconds(value);
        return this;
      }
      /**
       * <code>required uint32 remainingSeconds = 2;</code>
       */
      public Builder clearRemainingSeconds() {
        copyOnWrite();
        instance.clearRemainingSeconds();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TimeoutWarningMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasTimeoutReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasRemainingSeconds()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage other = (de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage) arg1;
          timeoutReason_ = visitor.visitInt(hasTimeoutReason(), timeoutReason_,
              other.hasTimeoutReason(), other.timeoutReason_);
          remainingSeconds_ = visitor.visitInt(
              hasRemainingSeconds(), remainingSeconds_,
              other.hasRemainingSeconds(), other.remainingSeconds_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.TimeoutReason value = de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.TimeoutReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    timeoutReason_ = rawValue;
                  }
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  remainingSeconds_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TimeoutWarningMessage)
    private static final de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TimeoutWarningMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TimeoutWarningMessage> PARSER;

    public static com.google.protobuf.Parser<TimeoutWarningMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ResetTimeoutMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ResetTimeoutMessage)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code ResetTimeoutMessage}
   */
  public  static final class ResetTimeoutMessage extends
      com.google.protobuf.GeneratedMessageLite<
          ResetTimeoutMessage, ResetTimeoutMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:ResetTimeoutMessage)
      ResetTimeoutMessageOrBuilder {
    private ResetTimeoutMessage() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code ResetTimeoutMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:ResetTimeoutMessage)
        de.pokerth.protocol.ProtoBuf.ResetTimeoutMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:ResetTimeoutMessage)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage other = (de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ResetTimeoutMessage)
    private static final de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ResetTimeoutMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ResetTimeoutMessage> PARSER;

    public static com.google.protobuf.Parser<ResetTimeoutMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ReportAvatarMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReportAvatarMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    boolean hasReportedPlayerId();
    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    int getReportedPlayerId();

    /**
     * <code>required bytes reportedAvatarHash = 2;</code>
     */
    boolean hasReportedAvatarHash();
    /**
     * <code>required bytes reportedAvatarHash = 2;</code>
     */
    com.google.protobuf.ByteString getReportedAvatarHash();
  }
  /**
   * Protobuf type {@code ReportAvatarMessage}
   */
  public  static final class ReportAvatarMessage extends
      com.google.protobuf.GeneratedMessageLite<
          ReportAvatarMessage, ReportAvatarMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:ReportAvatarMessage)
      ReportAvatarMessageOrBuilder {
    private ReportAvatarMessage() {
      reportedAvatarHash_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int REPORTEDPLAYERID_FIELD_NUMBER = 1;
    private int reportedPlayerId_;
    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    public boolean hasReportedPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    public int getReportedPlayerId() {
      return reportedPlayerId_;
    }
    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    private void setReportedPlayerId(int value) {
      bitField0_ |= 0x00000001;
      reportedPlayerId_ = value;
    }
    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    private void clearReportedPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      reportedPlayerId_ = 0;
    }

    public static final int REPORTEDAVATARHASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString reportedAvatarHash_;
    /**
     * <code>required bytes reportedAvatarHash = 2;</code>
     */
    public boolean hasReportedAvatarHash() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes reportedAvatarHash = 2;</code>
     */
    public com.google.protobuf.ByteString getReportedAvatarHash() {
      return reportedAvatarHash_;
    }
    /**
     * <code>required bytes reportedAvatarHash = 2;</code>
     */
    private void setReportedAvatarHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      reportedAvatarHash_ = value;
    }
    /**
     * <code>required bytes reportedAvatarHash = 2;</code>
     */
    private void clearReportedAvatarHash() {
      bitField0_ = (bitField0_ & ~0x00000002);
      reportedAvatarHash_ = getDefaultInstance().getReportedAvatarHash();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, reportedPlayerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, reportedAvatarHash_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, reportedPlayerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, reportedAvatarHash_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.ReportAvatarMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.ReportAvatarMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code ReportAvatarMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.ReportAvatarMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:ReportAvatarMessage)
        de.pokerth.protocol.ProtoBuf.ReportAvatarMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.ReportAvatarMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 reportedPlayerId = 1;</code>
       */
      public boolean hasReportedPlayerId() {
        return instance.hasReportedPlayerId();
      }
      /**
       * <code>required uint32 reportedPlayerId = 1;</code>
       */
      public int getReportedPlayerId() {
        return instance.getReportedPlayerId();
      }
      /**
       * <code>required uint32 reportedPlayerId = 1;</code>
       */
      public Builder setReportedPlayerId(int value) {
        copyOnWrite();
        instance.setReportedPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 reportedPlayerId = 1;</code>
       */
      public Builder clearReportedPlayerId() {
        copyOnWrite();
        instance.clearReportedPlayerId();
        return this;
      }

      /**
       * <code>required bytes reportedAvatarHash = 2;</code>
       */
      public boolean hasReportedAvatarHash() {
        return instance.hasReportedAvatarHash();
      }
      /**
       * <code>required bytes reportedAvatarHash = 2;</code>
       */
      public com.google.protobuf.ByteString getReportedAvatarHash() {
        return instance.getReportedAvatarHash();
      }
      /**
       * <code>required bytes reportedAvatarHash = 2;</code>
       */
      public Builder setReportedAvatarHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setReportedAvatarHash(value);
        return this;
      }
      /**
       * <code>required bytes reportedAvatarHash = 2;</code>
       */
      public Builder clearReportedAvatarHash() {
        copyOnWrite();
        instance.clearReportedAvatarHash();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ReportAvatarMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.ReportAvatarMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasReportedPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasReportedAvatarHash()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.ReportAvatarMessage other = (de.pokerth.protocol.ProtoBuf.ReportAvatarMessage) arg1;
          reportedPlayerId_ = visitor.visitInt(
              hasReportedPlayerId(), reportedPlayerId_,
              other.hasReportedPlayerId(), other.reportedPlayerId_);
          reportedAvatarHash_ = visitor.visitByteString(
              hasReportedAvatarHash(), reportedAvatarHash_,
              other.hasReportedAvatarHash(), other.reportedAvatarHash_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  reportedPlayerId_ = input.readUInt32();
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  reportedAvatarHash_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.ReportAvatarMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ReportAvatarMessage)
    private static final de.pokerth.protocol.ProtoBuf.ReportAvatarMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ReportAvatarMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.ReportAvatarMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ReportAvatarMessage> PARSER;

    public static com.google.protobuf.Parser<ReportAvatarMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ReportAvatarAckMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReportAvatarAckMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    boolean hasReportedPlayerId();
    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    int getReportedPlayerId();

    /**
     * <code>required .ReportAvatarAckMessage.ReportAvatarResult reportAvatarResult = 2;</code>
     */
    boolean hasReportAvatarResult();
    /**
     * <code>required .ReportAvatarAckMessage.ReportAvatarResult reportAvatarResult = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.ReportAvatarResult getReportAvatarResult();
  }
  /**
   * Protobuf type {@code ReportAvatarAckMessage}
   */
  public  static final class ReportAvatarAckMessage extends
      com.google.protobuf.GeneratedMessageLite<
          ReportAvatarAckMessage, ReportAvatarAckMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:ReportAvatarAckMessage)
      ReportAvatarAckMessageOrBuilder {
    private ReportAvatarAckMessage() {
    }
    /**
     * Protobuf enum {@code ReportAvatarAckMessage.ReportAvatarResult}
     */
    public enum ReportAvatarResult
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>avatarReportAccepted = 0;</code>
       */
      avatarReportAccepted(0),
      /**
       * <code>avatarReportDuplicate = 1;</code>
       */
      avatarReportDuplicate(1),
      /**
       * <code>avatarReportInvalid = 2;</code>
       */
      avatarReportInvalid(2),
      ;

      /**
       * <code>avatarReportAccepted = 0;</code>
       */
      public static final int avatarReportAccepted_VALUE = 0;
      /**
       * <code>avatarReportDuplicate = 1;</code>
       */
      public static final int avatarReportDuplicate_VALUE = 1;
      /**
       * <code>avatarReportInvalid = 2;</code>
       */
      public static final int avatarReportInvalid_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReportAvatarResult valueOf(int value) {
        return forNumber(value);
      }

      public static ReportAvatarResult forNumber(int value) {
        switch (value) {
          case 0: return avatarReportAccepted;
          case 1: return avatarReportDuplicate;
          case 2: return avatarReportInvalid;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ReportAvatarResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ReportAvatarResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ReportAvatarResult>() {
              public ReportAvatarResult findValueByNumber(int number) {
                return ReportAvatarResult.forNumber(number);
              }
            };

      private final int value;

      private ReportAvatarResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ReportAvatarAckMessage.ReportAvatarResult)
    }

    private int bitField0_;
    public static final int REPORTEDPLAYERID_FIELD_NUMBER = 1;
    private int reportedPlayerId_;
    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    public boolean hasReportedPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    public int getReportedPlayerId() {
      return reportedPlayerId_;
    }
    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    private void setReportedPlayerId(int value) {
      bitField0_ |= 0x00000001;
      reportedPlayerId_ = value;
    }
    /**
     * <code>required uint32 reportedPlayerId = 1;</code>
     */
    private void clearReportedPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      reportedPlayerId_ = 0;
    }

    public static final int REPORTAVATARRESULT_FIELD_NUMBER = 2;
    private int reportAvatarResult_;
    /**
     * <code>required .ReportAvatarAckMessage.ReportAvatarResult reportAvatarResult = 2;</code>
     */
    public boolean hasReportAvatarResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .ReportAvatarAckMessage.ReportAvatarResult reportAvatarResult = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.ReportAvatarResult getReportAvatarResult() {
      de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.ReportAvatarResult result = de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.ReportAvatarResult.forNumber(reportAvatarResult_);
      return result == null ? de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.ReportAvatarResult.avatarReportAccepted : result;
    }
    /**
     * <code>required .ReportAvatarAckMessage.ReportAvatarResult reportAvatarResult = 2;</code>
     */
    private void setReportAvatarResult(de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.ReportAvatarResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      reportAvatarResult_ = value.getNumber();
    }
    /**
     * <code>required .ReportAvatarAckMessage.ReportAvatarResult reportAvatarResult = 2;</code>
     */
    private void clearReportAvatarResult() {
      bitField0_ = (bitField0_ & ~0x00000002);
      reportAvatarResult_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, reportedPlayerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, reportAvatarResult_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, reportedPlayerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, reportAvatarResult_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code ReportAvatarAckMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:ReportAvatarAckMessage)
        de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 reportedPlayerId = 1;</code>
       */
      public boolean hasReportedPlayerId() {
        return instance.hasReportedPlayerId();
      }
      /**
       * <code>required uint32 reportedPlayerId = 1;</code>
       */
      public int getReportedPlayerId() {
        return instance.getReportedPlayerId();
      }
      /**
       * <code>required uint32 reportedPlayerId = 1;</code>
       */
      public Builder setReportedPlayerId(int value) {
        copyOnWrite();
        instance.setReportedPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 reportedPlayerId = 1;</code>
       */
      public Builder clearReportedPlayerId() {
        copyOnWrite();
        instance.clearReportedPlayerId();
        return this;
      }

      /**
       * <code>required .ReportAvatarAckMessage.ReportAvatarResult reportAvatarResult = 2;</code>
       */
      public boolean hasReportAvatarResult() {
        return instance.hasReportAvatarResult();
      }
      /**
       * <code>required .ReportAvatarAckMessage.ReportAvatarResult reportAvatarResult = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.ReportAvatarResult getReportAvatarResult() {
        return instance.getReportAvatarResult();
      }
      /**
       * <code>required .ReportAvatarAckMessage.ReportAvatarResult reportAvatarResult = 2;</code>
       */
      public Builder setReportAvatarResult(de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.ReportAvatarResult value) {
        copyOnWrite();
        instance.setReportAvatarResult(value);
        return this;
      }
      /**
       * <code>required .ReportAvatarAckMessage.ReportAvatarResult reportAvatarResult = 2;</code>
       */
      public Builder clearReportAvatarResult() {
        copyOnWrite();
        instance.clearReportAvatarResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ReportAvatarAckMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasReportedPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasReportAvatarResult()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage other = (de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage) arg1;
          reportedPlayerId_ = visitor.visitInt(
              hasReportedPlayerId(), reportedPlayerId_,
              other.hasReportedPlayerId(), other.reportedPlayerId_);
          reportAvatarResult_ = visitor.visitInt(hasReportAvatarResult(), reportAvatarResult_,
              other.hasReportAvatarResult(), other.reportAvatarResult_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  reportedPlayerId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.ReportAvatarResult value = de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.ReportAvatarResult.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    reportAvatarResult_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ReportAvatarAckMessage)
    private static final de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ReportAvatarAckMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ReportAvatarAckMessage> PARSER;

    public static com.google.protobuf.Parser<ReportAvatarAckMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ReportGameMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReportGameMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    boolean hasReportedGameId();
    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    int getReportedGameId();
  }
  /**
   * Protobuf type {@code ReportGameMessage}
   */
  public  static final class ReportGameMessage extends
      com.google.protobuf.GeneratedMessageLite<
          ReportGameMessage, ReportGameMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:ReportGameMessage)
      ReportGameMessageOrBuilder {
    private ReportGameMessage() {
    }
    private int bitField0_;
    public static final int REPORTEDGAMEID_FIELD_NUMBER = 1;
    private int reportedGameId_;
    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    public boolean hasReportedGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    public int getReportedGameId() {
      return reportedGameId_;
    }
    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    private void setReportedGameId(int value) {
      bitField0_ |= 0x00000001;
      reportedGameId_ = value;
    }
    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    private void clearReportedGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      reportedGameId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, reportedGameId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, reportedGameId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.ReportGameMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.ReportGameMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code ReportGameMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.ReportGameMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:ReportGameMessage)
        de.pokerth.protocol.ProtoBuf.ReportGameMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.ReportGameMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 reportedGameId = 1;</code>
       */
      public boolean hasReportedGameId() {
        return instance.hasReportedGameId();
      }
      /**
       * <code>required uint32 reportedGameId = 1;</code>
       */
      public int getReportedGameId() {
        return instance.getReportedGameId();
      }
      /**
       * <code>required uint32 reportedGameId = 1;</code>
       */
      public Builder setReportedGameId(int value) {
        copyOnWrite();
        instance.setReportedGameId(value);
        return this;
      }
      /**
       * <code>required uint32 reportedGameId = 1;</code>
       */
      public Builder clearReportedGameId() {
        copyOnWrite();
        instance.clearReportedGameId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ReportGameMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.ReportGameMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasReportedGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.ReportGameMessage other = (de.pokerth.protocol.ProtoBuf.ReportGameMessage) arg1;
          reportedGameId_ = visitor.visitInt(
              hasReportedGameId(), reportedGameId_,
              other.hasReportedGameId(), other.reportedGameId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  reportedGameId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.ReportGameMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ReportGameMessage)
    private static final de.pokerth.protocol.ProtoBuf.ReportGameMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ReportGameMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.ReportGameMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ReportGameMessage> PARSER;

    public static com.google.protobuf.Parser<ReportGameMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ReportGameAckMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReportGameAckMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    boolean hasReportedGameId();
    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    int getReportedGameId();

    /**
     * <code>required .ReportGameAckMessage.ReportGameResult reportGameResult = 2;</code>
     */
    boolean hasReportGameResult();
    /**
     * <code>required .ReportGameAckMessage.ReportGameResult reportGameResult = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.ReportGameResult getReportGameResult();
  }
  /**
   * Protobuf type {@code ReportGameAckMessage}
   */
  public  static final class ReportGameAckMessage extends
      com.google.protobuf.GeneratedMessageLite<
          ReportGameAckMessage, ReportGameAckMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:ReportGameAckMessage)
      ReportGameAckMessageOrBuilder {
    private ReportGameAckMessage() {
    }
    /**
     * Protobuf enum {@code ReportGameAckMessage.ReportGameResult}
     */
    public enum ReportGameResult
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>gameReportAccepted = 0;</code>
       */
      gameReportAccepted(0),
      /**
       * <code>gameReportDuplicate = 1;</code>
       */
      gameReportDuplicate(1),
      /**
       * <code>gameReportInvalid = 2;</code>
       */
      gameReportInvalid(2),
      ;

      /**
       * <code>gameReportAccepted = 0;</code>
       */
      public static final int gameReportAccepted_VALUE = 0;
      /**
       * <code>gameReportDuplicate = 1;</code>
       */
      public static final int gameReportDuplicate_VALUE = 1;
      /**
       * <code>gameReportInvalid = 2;</code>
       */
      public static final int gameReportInvalid_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReportGameResult valueOf(int value) {
        return forNumber(value);
      }

      public static ReportGameResult forNumber(int value) {
        switch (value) {
          case 0: return gameReportAccepted;
          case 1: return gameReportDuplicate;
          case 2: return gameReportInvalid;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ReportGameResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ReportGameResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ReportGameResult>() {
              public ReportGameResult findValueByNumber(int number) {
                return ReportGameResult.forNumber(number);
              }
            };

      private final int value;

      private ReportGameResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ReportGameAckMessage.ReportGameResult)
    }

    private int bitField0_;
    public static final int REPORTEDGAMEID_FIELD_NUMBER = 1;
    private int reportedGameId_;
    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    public boolean hasReportedGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    public int getReportedGameId() {
      return reportedGameId_;
    }
    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    private void setReportedGameId(int value) {
      bitField0_ |= 0x00000001;
      reportedGameId_ = value;
    }
    /**
     * <code>required uint32 reportedGameId = 1;</code>
     */
    private void clearReportedGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      reportedGameId_ = 0;
    }

    public static final int REPORTGAMERESULT_FIELD_NUMBER = 2;
    private int reportGameResult_;
    /**
     * <code>required .ReportGameAckMessage.ReportGameResult reportGameResult = 2;</code>
     */
    public boolean hasReportGameResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .ReportGameAckMessage.ReportGameResult reportGameResult = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.ReportGameResult getReportGameResult() {
      de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.ReportGameResult result = de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.ReportGameResult.forNumber(reportGameResult_);
      return result == null ? de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.ReportGameResult.gameReportAccepted : result;
    }
    /**
     * <code>required .ReportGameAckMessage.ReportGameResult reportGameResult = 2;</code>
     */
    private void setReportGameResult(de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.ReportGameResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      reportGameResult_ = value.getNumber();
    }
    /**
     * <code>required .ReportGameAckMessage.ReportGameResult reportGameResult = 2;</code>
     */
    private void clearReportGameResult() {
      bitField0_ = (bitField0_ & ~0x00000002);
      reportGameResult_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, reportedGameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, reportGameResult_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, reportedGameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, reportGameResult_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.ReportGameAckMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameAckMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameAckMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameAckMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameAckMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameAckMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameAckMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameAckMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ReportGameAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.ReportGameAckMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code ReportGameAckMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.ReportGameAckMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:ReportGameAckMessage)
        de.pokerth.protocol.ProtoBuf.ReportGameAckMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 reportedGameId = 1;</code>
       */
      public boolean hasReportedGameId() {
        return instance.hasReportedGameId();
      }
      /**
       * <code>required uint32 reportedGameId = 1;</code>
       */
      public int getReportedGameId() {
        return instance.getReportedGameId();
      }
      /**
       * <code>required uint32 reportedGameId = 1;</code>
       */
      public Builder setReportedGameId(int value) {
        copyOnWrite();
        instance.setReportedGameId(value);
        return this;
      }
      /**
       * <code>required uint32 reportedGameId = 1;</code>
       */
      public Builder clearReportedGameId() {
        copyOnWrite();
        instance.clearReportedGameId();
        return this;
      }

      /**
       * <code>required .ReportGameAckMessage.ReportGameResult reportGameResult = 2;</code>
       */
      public boolean hasReportGameResult() {
        return instance.hasReportGameResult();
      }
      /**
       * <code>required .ReportGameAckMessage.ReportGameResult reportGameResult = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.ReportGameResult getReportGameResult() {
        return instance.getReportGameResult();
      }
      /**
       * <code>required .ReportGameAckMessage.ReportGameResult reportGameResult = 2;</code>
       */
      public Builder setReportGameResult(de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.ReportGameResult value) {
        copyOnWrite();
        instance.setReportGameResult(value);
        return this;
      }
      /**
       * <code>required .ReportGameAckMessage.ReportGameResult reportGameResult = 2;</code>
       */
      public Builder clearReportGameResult() {
        copyOnWrite();
        instance.clearReportGameResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ReportGameAckMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.ReportGameAckMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasReportedGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasReportGameResult()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.ReportGameAckMessage other = (de.pokerth.protocol.ProtoBuf.ReportGameAckMessage) arg1;
          reportedGameId_ = visitor.visitInt(
              hasReportedGameId(), reportedGameId_,
              other.hasReportedGameId(), other.reportedGameId_);
          reportGameResult_ = visitor.visitInt(hasReportGameResult(), reportGameResult_,
              other.hasReportGameResult(), other.reportGameResult_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  reportedGameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.ReportGameResult value = de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.ReportGameResult.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    reportGameResult_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ReportGameAckMessage)
    private static final de.pokerth.protocol.ProtoBuf.ReportGameAckMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ReportGameAckMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.ReportGameAckMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ReportGameAckMessage> PARSER;

    public static com.google.protobuf.Parser<ReportGameAckMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ErrorMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ErrorMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .ErrorMessage.ErrorReason errorReason = 1;</code>
     */
    boolean hasErrorReason();
    /**
     * <code>required .ErrorMessage.ErrorReason errorReason = 1;</code>
     */
    de.pokerth.protocol.ProtoBuf.ErrorMessage.ErrorReason getErrorReason();
  }
  /**
   * Protobuf type {@code ErrorMessage}
   */
  public  static final class ErrorMessage extends
      com.google.protobuf.GeneratedMessageLite<
          ErrorMessage, ErrorMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:ErrorMessage)
      ErrorMessageOrBuilder {
    private ErrorMessage() {
    }
    /**
     * Protobuf enum {@code ErrorMessage.ErrorReason}
     */
    public enum ErrorReason
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>custReserved = 0;</code>
       */
      custReserved(0),
      /**
       * <code>initVersionNotSupported = 1;</code>
       */
      initVersionNotSupported(1),
      /**
       * <code>initServerFull = 2;</code>
       */
      initServerFull(2),
      /**
       * <code>initAuthFailure = 3;</code>
       */
      initAuthFailure(3),
      /**
       * <code>initPlayerNameInUse = 4;</code>
       */
      initPlayerNameInUse(4),
      /**
       * <code>initInvalidPlayerName = 5;</code>
       */
      initInvalidPlayerName(5),
      /**
       * <code>initServerMaintenance = 6;</code>
       */
      initServerMaintenance(6),
      /**
       * <code>initBlocked = 7;</code>
       */
      initBlocked(7),
      /**
       * <code>avatarTooLarge = 8;</code>
       */
      avatarTooLarge(8),
      /**
       * <code>invalidPacket = 9;</code>
       */
      invalidPacket(9),
      /**
       * <code>invalidState = 10;</code>
       */
      invalidState(10),
      /**
       * <code>kickedFromServer = 11;</code>
       */
      kickedFromServer(11),
      /**
       * <code>bannedFromServer = 12;</code>
       */
      bannedFromServer(12),
      /**
       * <code>blockedByServer = 13;</code>
       */
      blockedByServer(13),
      /**
       * <code>sessionTimeout = 14;</code>
       */
      sessionTimeout(14),
      ;

      /**
       * <code>custReserved = 0;</code>
       */
      public static final int custReserved_VALUE = 0;
      /**
       * <code>initVersionNotSupported = 1;</code>
       */
      public static final int initVersionNotSupported_VALUE = 1;
      /**
       * <code>initServerFull = 2;</code>
       */
      public static final int initServerFull_VALUE = 2;
      /**
       * <code>initAuthFailure = 3;</code>
       */
      public static final int initAuthFailure_VALUE = 3;
      /**
       * <code>initPlayerNameInUse = 4;</code>
       */
      public static final int initPlayerNameInUse_VALUE = 4;
      /**
       * <code>initInvalidPlayerName = 5;</code>
       */
      public static final int initInvalidPlayerName_VALUE = 5;
      /**
       * <code>initServerMaintenance = 6;</code>
       */
      public static final int initServerMaintenance_VALUE = 6;
      /**
       * <code>initBlocked = 7;</code>
       */
      public static final int initBlocked_VALUE = 7;
      /**
       * <code>avatarTooLarge = 8;</code>
       */
      public static final int avatarTooLarge_VALUE = 8;
      /**
       * <code>invalidPacket = 9;</code>
       */
      public static final int invalidPacket_VALUE = 9;
      /**
       * <code>invalidState = 10;</code>
       */
      public static final int invalidState_VALUE = 10;
      /**
       * <code>kickedFromServer = 11;</code>
       */
      public static final int kickedFromServer_VALUE = 11;
      /**
       * <code>bannedFromServer = 12;</code>
       */
      public static final int bannedFromServer_VALUE = 12;
      /**
       * <code>blockedByServer = 13;</code>
       */
      public static final int blockedByServer_VALUE = 13;
      /**
       * <code>sessionTimeout = 14;</code>
       */
      public static final int sessionTimeout_VALUE = 14;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ErrorReason valueOf(int value) {
        return forNumber(value);
      }

      public static ErrorReason forNumber(int value) {
        switch (value) {
          case 0: return custReserved;
          case 1: return initVersionNotSupported;
          case 2: return initServerFull;
          case 3: return initAuthFailure;
          case 4: return initPlayerNameInUse;
          case 5: return initInvalidPlayerName;
          case 6: return initServerMaintenance;
          case 7: return initBlocked;
          case 8: return avatarTooLarge;
          case 9: return invalidPacket;
          case 10: return invalidState;
          case 11: return kickedFromServer;
          case 12: return bannedFromServer;
          case 13: return blockedByServer;
          case 14: return sessionTimeout;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ErrorReason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ErrorReason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ErrorReason>() {
              public ErrorReason findValueByNumber(int number) {
                return ErrorReason.forNumber(number);
              }
            };

      private final int value;

      private ErrorReason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ErrorMessage.ErrorReason)
    }

    private int bitField0_;
    public static final int ERRORREASON_FIELD_NUMBER = 1;
    private int errorReason_;
    /**
     * <code>required .ErrorMessage.ErrorReason errorReason = 1;</code>
     */
    public boolean hasErrorReason() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ErrorMessage.ErrorReason errorReason = 1;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ErrorMessage.ErrorReason getErrorReason() {
      de.pokerth.protocol.ProtoBuf.ErrorMessage.ErrorReason result = de.pokerth.protocol.ProtoBuf.ErrorMessage.ErrorReason.forNumber(errorReason_);
      return result == null ? de.pokerth.protocol.ProtoBuf.ErrorMessage.ErrorReason.custReserved : result;
    }
    /**
     * <code>required .ErrorMessage.ErrorReason errorReason = 1;</code>
     */
    private void setErrorReason(de.pokerth.protocol.ProtoBuf.ErrorMessage.ErrorReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      errorReason_ = value.getNumber();
    }
    /**
     * <code>required .ErrorMessage.ErrorReason errorReason = 1;</code>
     */
    private void clearErrorReason() {
      bitField0_ = (bitField0_ & ~0x00000001);
      errorReason_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, errorReason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, errorReason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.ErrorMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ErrorMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ErrorMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.ErrorMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ErrorMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ErrorMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ErrorMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ErrorMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.ErrorMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.ErrorMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.ErrorMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code ErrorMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.ErrorMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:ErrorMessage)
        de.pokerth.protocol.ProtoBuf.ErrorMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.ErrorMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .ErrorMessage.ErrorReason errorReason = 1;</code>
       */
      public boolean hasErrorReason() {
        return instance.hasErrorReason();
      }
      /**
       * <code>required .ErrorMessage.ErrorReason errorReason = 1;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ErrorMessage.ErrorReason getErrorReason() {
        return instance.getErrorReason();
      }
      /**
       * <code>required .ErrorMessage.ErrorReason errorReason = 1;</code>
       */
      public Builder setErrorReason(de.pokerth.protocol.ProtoBuf.ErrorMessage.ErrorReason value) {
        copyOnWrite();
        instance.setErrorReason(value);
        return this;
      }
      /**
       * <code>required .ErrorMessage.ErrorReason errorReason = 1;</code>
       */
      public Builder clearErrorReason() {
        copyOnWrite();
        instance.clearErrorReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ErrorMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.ErrorMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasErrorReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.ErrorMessage other = (de.pokerth.protocol.ProtoBuf.ErrorMessage) arg1;
          errorReason_ = visitor.visitInt(hasErrorReason(), errorReason_,
              other.hasErrorReason(), other.errorReason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.ErrorMessage.ErrorReason value = de.pokerth.protocol.ProtoBuf.ErrorMessage.ErrorReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    errorReason_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.ErrorMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ErrorMessage)
    private static final de.pokerth.protocol.ProtoBuf.ErrorMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ErrorMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.ErrorMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ErrorMessage> PARSER;

    public static com.google.protobuf.Parser<ErrorMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AdminRemoveGameMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AdminRemoveGameMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    boolean hasRemoveGameId();
    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    int getRemoveGameId();
  }
  /**
   * Protobuf type {@code AdminRemoveGameMessage}
   */
  public  static final class AdminRemoveGameMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AdminRemoveGameMessage, AdminRemoveGameMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AdminRemoveGameMessage)
      AdminRemoveGameMessageOrBuilder {
    private AdminRemoveGameMessage() {
    }
    private int bitField0_;
    public static final int REMOVEGAMEID_FIELD_NUMBER = 1;
    private int removeGameId_;
    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    public boolean hasRemoveGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    public int getRemoveGameId() {
      return removeGameId_;
    }
    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    private void setRemoveGameId(int value) {
      bitField0_ |= 0x00000001;
      removeGameId_ = value;
    }
    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    private void clearRemoveGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      removeGameId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, removeGameId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, removeGameId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AdminRemoveGameMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AdminRemoveGameMessage)
        de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 removeGameId = 1;</code>
       */
      public boolean hasRemoveGameId() {
        return instance.hasRemoveGameId();
      }
      /**
       * <code>required uint32 removeGameId = 1;</code>
       */
      public int getRemoveGameId() {
        return instance.getRemoveGameId();
      }
      /**
       * <code>required uint32 removeGameId = 1;</code>
       */
      public Builder setRemoveGameId(int value) {
        copyOnWrite();
        instance.setRemoveGameId(value);
        return this;
      }
      /**
       * <code>required uint32 removeGameId = 1;</code>
       */
      public Builder clearRemoveGameId() {
        copyOnWrite();
        instance.clearRemoveGameId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AdminRemoveGameMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRemoveGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage other = (de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage) arg1;
          removeGameId_ = visitor.visitInt(
              hasRemoveGameId(), removeGameId_,
              other.hasRemoveGameId(), other.removeGameId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  removeGameId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AdminRemoveGameMessage)
    private static final de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AdminRemoveGameMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AdminRemoveGameMessage> PARSER;

    public static com.google.protobuf.Parser<AdminRemoveGameMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AdminRemoveGameAckMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AdminRemoveGameAckMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    boolean hasRemoveGameId();
    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    int getRemoveGameId();

    /**
     * <code>required .AdminRemoveGameAckMessage.AdminRemoveGameResult removeGameResult = 2;</code>
     */
    boolean hasRemoveGameResult();
    /**
     * <code>required .AdminRemoveGameAckMessage.AdminRemoveGameResult removeGameResult = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.AdminRemoveGameResult getRemoveGameResult();
  }
  /**
   * Protobuf type {@code AdminRemoveGameAckMessage}
   */
  public  static final class AdminRemoveGameAckMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AdminRemoveGameAckMessage, AdminRemoveGameAckMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AdminRemoveGameAckMessage)
      AdminRemoveGameAckMessageOrBuilder {
    private AdminRemoveGameAckMessage() {
    }
    /**
     * Protobuf enum {@code AdminRemoveGameAckMessage.AdminRemoveGameResult}
     */
    public enum AdminRemoveGameResult
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>gameRemoveAccepted = 0;</code>
       */
      gameRemoveAccepted(0),
      /**
       * <code>gameRemoveInvalid = 1;</code>
       */
      gameRemoveInvalid(1),
      ;

      /**
       * <code>gameRemoveAccepted = 0;</code>
       */
      public static final int gameRemoveAccepted_VALUE = 0;
      /**
       * <code>gameRemoveInvalid = 1;</code>
       */
      public static final int gameRemoveInvalid_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AdminRemoveGameResult valueOf(int value) {
        return forNumber(value);
      }

      public static AdminRemoveGameResult forNumber(int value) {
        switch (value) {
          case 0: return gameRemoveAccepted;
          case 1: return gameRemoveInvalid;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AdminRemoveGameResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AdminRemoveGameResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AdminRemoveGameResult>() {
              public AdminRemoveGameResult findValueByNumber(int number) {
                return AdminRemoveGameResult.forNumber(number);
              }
            };

      private final int value;

      private AdminRemoveGameResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:AdminRemoveGameAckMessage.AdminRemoveGameResult)
    }

    private int bitField0_;
    public static final int REMOVEGAMEID_FIELD_NUMBER = 1;
    private int removeGameId_;
    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    public boolean hasRemoveGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    public int getRemoveGameId() {
      return removeGameId_;
    }
    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    private void setRemoveGameId(int value) {
      bitField0_ |= 0x00000001;
      removeGameId_ = value;
    }
    /**
     * <code>required uint32 removeGameId = 1;</code>
     */
    private void clearRemoveGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      removeGameId_ = 0;
    }

    public static final int REMOVEGAMERESULT_FIELD_NUMBER = 2;
    private int removeGameResult_;
    /**
     * <code>required .AdminRemoveGameAckMessage.AdminRemoveGameResult removeGameResult = 2;</code>
     */
    public boolean hasRemoveGameResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .AdminRemoveGameAckMessage.AdminRemoveGameResult removeGameResult = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.AdminRemoveGameResult getRemoveGameResult() {
      de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.AdminRemoveGameResult result = de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.AdminRemoveGameResult.forNumber(removeGameResult_);
      return result == null ? de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.AdminRemoveGameResult.gameRemoveAccepted : result;
    }
    /**
     * <code>required .AdminRemoveGameAckMessage.AdminRemoveGameResult removeGameResult = 2;</code>
     */
    private void setRemoveGameResult(de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.AdminRemoveGameResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      removeGameResult_ = value.getNumber();
    }
    /**
     * <code>required .AdminRemoveGameAckMessage.AdminRemoveGameResult removeGameResult = 2;</code>
     */
    private void clearRemoveGameResult() {
      bitField0_ = (bitField0_ & ~0x00000002);
      removeGameResult_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, removeGameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, removeGameResult_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, removeGameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, removeGameResult_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AdminRemoveGameAckMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AdminRemoveGameAckMessage)
        de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 removeGameId = 1;</code>
       */
      public boolean hasRemoveGameId() {
        return instance.hasRemoveGameId();
      }
      /**
       * <code>required uint32 removeGameId = 1;</code>
       */
      public int getRemoveGameId() {
        return instance.getRemoveGameId();
      }
      /**
       * <code>required uint32 removeGameId = 1;</code>
       */
      public Builder setRemoveGameId(int value) {
        copyOnWrite();
        instance.setRemoveGameId(value);
        return this;
      }
      /**
       * <code>required uint32 removeGameId = 1;</code>
       */
      public Builder clearRemoveGameId() {
        copyOnWrite();
        instance.clearRemoveGameId();
        return this;
      }

      /**
       * <code>required .AdminRemoveGameAckMessage.AdminRemoveGameResult removeGameResult = 2;</code>
       */
      public boolean hasRemoveGameResult() {
        return instance.hasRemoveGameResult();
      }
      /**
       * <code>required .AdminRemoveGameAckMessage.AdminRemoveGameResult removeGameResult = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.AdminRemoveGameResult getRemoveGameResult() {
        return instance.getRemoveGameResult();
      }
      /**
       * <code>required .AdminRemoveGameAckMessage.AdminRemoveGameResult removeGameResult = 2;</code>
       */
      public Builder setRemoveGameResult(de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.AdminRemoveGameResult value) {
        copyOnWrite();
        instance.setRemoveGameResult(value);
        return this;
      }
      /**
       * <code>required .AdminRemoveGameAckMessage.AdminRemoveGameResult removeGameResult = 2;</code>
       */
      public Builder clearRemoveGameResult() {
        copyOnWrite();
        instance.clearRemoveGameResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AdminRemoveGameAckMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRemoveGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasRemoveGameResult()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage other = (de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage) arg1;
          removeGameId_ = visitor.visitInt(
              hasRemoveGameId(), removeGameId_,
              other.hasRemoveGameId(), other.removeGameId_);
          removeGameResult_ = visitor.visitInt(hasRemoveGameResult(), removeGameResult_,
              other.hasRemoveGameResult(), other.removeGameResult_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  removeGameId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.AdminRemoveGameResult value = de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.AdminRemoveGameResult.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    removeGameResult_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AdminRemoveGameAckMessage)
    private static final de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AdminRemoveGameAckMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AdminRemoveGameAckMessage> PARSER;

    public static com.google.protobuf.Parser<AdminRemoveGameAckMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AdminBanPlayerMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AdminBanPlayerMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    boolean hasBanPlayerId();
    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    int getBanPlayerId();
  }
  /**
   * Protobuf type {@code AdminBanPlayerMessage}
   */
  public  static final class AdminBanPlayerMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AdminBanPlayerMessage, AdminBanPlayerMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AdminBanPlayerMessage)
      AdminBanPlayerMessageOrBuilder {
    private AdminBanPlayerMessage() {
    }
    private int bitField0_;
    public static final int BANPLAYERID_FIELD_NUMBER = 1;
    private int banPlayerId_;
    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    public boolean hasBanPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    public int getBanPlayerId() {
      return banPlayerId_;
    }
    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    private void setBanPlayerId(int value) {
      bitField0_ |= 0x00000001;
      banPlayerId_ = value;
    }
    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    private void clearBanPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      banPlayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, banPlayerId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, banPlayerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AdminBanPlayerMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AdminBanPlayerMessage)
        de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 banPlayerId = 1;</code>
       */
      public boolean hasBanPlayerId() {
        return instance.hasBanPlayerId();
      }
      /**
       * <code>required uint32 banPlayerId = 1;</code>
       */
      public int getBanPlayerId() {
        return instance.getBanPlayerId();
      }
      /**
       * <code>required uint32 banPlayerId = 1;</code>
       */
      public Builder setBanPlayerId(int value) {
        copyOnWrite();
        instance.setBanPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 banPlayerId = 1;</code>
       */
      public Builder clearBanPlayerId() {
        copyOnWrite();
        instance.clearBanPlayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AdminBanPlayerMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasBanPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage other = (de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage) arg1;
          banPlayerId_ = visitor.visitInt(
              hasBanPlayerId(), banPlayerId_,
              other.hasBanPlayerId(), other.banPlayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  banPlayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AdminBanPlayerMessage)
    private static final de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AdminBanPlayerMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AdminBanPlayerMessage> PARSER;

    public static com.google.protobuf.Parser<AdminBanPlayerMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AdminBanPlayerAckMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AdminBanPlayerAckMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    boolean hasBanPlayerId();
    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    int getBanPlayerId();

    /**
     * <code>required .AdminBanPlayerAckMessage.AdminBanPlayerResult banPlayerResult = 2;</code>
     */
    boolean hasBanPlayerResult();
    /**
     * <code>required .AdminBanPlayerAckMessage.AdminBanPlayerResult banPlayerResult = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.AdminBanPlayerResult getBanPlayerResult();
  }
  /**
   * Protobuf type {@code AdminBanPlayerAckMessage}
   */
  public  static final class AdminBanPlayerAckMessage extends
      com.google.protobuf.GeneratedMessageLite<
          AdminBanPlayerAckMessage, AdminBanPlayerAckMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:AdminBanPlayerAckMessage)
      AdminBanPlayerAckMessageOrBuilder {
    private AdminBanPlayerAckMessage() {
    }
    /**
     * Protobuf enum {@code AdminBanPlayerAckMessage.AdminBanPlayerResult}
     */
    public enum AdminBanPlayerResult
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>banPlayerAccepted = 0;</code>
       */
      banPlayerAccepted(0),
      /**
       * <code>banPlayerPending = 1;</code>
       */
      banPlayerPending(1),
      /**
       * <code>banPlayerNoDB = 2;</code>
       */
      banPlayerNoDB(2),
      /**
       * <code>banPlayerDBError = 3;</code>
       */
      banPlayerDBError(3),
      /**
       * <code>banPlayerInvalid = 4;</code>
       */
      banPlayerInvalid(4),
      ;

      /**
       * <code>banPlayerAccepted = 0;</code>
       */
      public static final int banPlayerAccepted_VALUE = 0;
      /**
       * <code>banPlayerPending = 1;</code>
       */
      public static final int banPlayerPending_VALUE = 1;
      /**
       * <code>banPlayerNoDB = 2;</code>
       */
      public static final int banPlayerNoDB_VALUE = 2;
      /**
       * <code>banPlayerDBError = 3;</code>
       */
      public static final int banPlayerDBError_VALUE = 3;
      /**
       * <code>banPlayerInvalid = 4;</code>
       */
      public static final int banPlayerInvalid_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AdminBanPlayerResult valueOf(int value) {
        return forNumber(value);
      }

      public static AdminBanPlayerResult forNumber(int value) {
        switch (value) {
          case 0: return banPlayerAccepted;
          case 1: return banPlayerPending;
          case 2: return banPlayerNoDB;
          case 3: return banPlayerDBError;
          case 4: return banPlayerInvalid;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AdminBanPlayerResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AdminBanPlayerResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AdminBanPlayerResult>() {
              public AdminBanPlayerResult findValueByNumber(int number) {
                return AdminBanPlayerResult.forNumber(number);
              }
            };

      private final int value;

      private AdminBanPlayerResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:AdminBanPlayerAckMessage.AdminBanPlayerResult)
    }

    private int bitField0_;
    public static final int BANPLAYERID_FIELD_NUMBER = 1;
    private int banPlayerId_;
    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    public boolean hasBanPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    public int getBanPlayerId() {
      return banPlayerId_;
    }
    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    private void setBanPlayerId(int value) {
      bitField0_ |= 0x00000001;
      banPlayerId_ = value;
    }
    /**
     * <code>required uint32 banPlayerId = 1;</code>
     */
    private void clearBanPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      banPlayerId_ = 0;
    }

    public static final int BANPLAYERRESULT_FIELD_NUMBER = 2;
    private int banPlayerResult_;
    /**
     * <code>required .AdminBanPlayerAckMessage.AdminBanPlayerResult banPlayerResult = 2;</code>
     */
    public boolean hasBanPlayerResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .AdminBanPlayerAckMessage.AdminBanPlayerResult banPlayerResult = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.AdminBanPlayerResult getBanPlayerResult() {
      de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.AdminBanPlayerResult result = de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.AdminBanPlayerResult.forNumber(banPlayerResult_);
      return result == null ? de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.AdminBanPlayerResult.banPlayerAccepted : result;
    }
    /**
     * <code>required .AdminBanPlayerAckMessage.AdminBanPlayerResult banPlayerResult = 2;</code>
     */
    private void setBanPlayerResult(de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.AdminBanPlayerResult value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      banPlayerResult_ = value.getNumber();
    }
    /**
     * <code>required .AdminBanPlayerAckMessage.AdminBanPlayerResult banPlayerResult = 2;</code>
     */
    private void clearBanPlayerResult() {
      bitField0_ = (bitField0_ & ~0x00000002);
      banPlayerResult_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, banPlayerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, banPlayerResult_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, banPlayerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, banPlayerResult_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AdminBanPlayerAckMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:AdminBanPlayerAckMessage)
        de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 banPlayerId = 1;</code>
       */
      public boolean hasBanPlayerId() {
        return instance.hasBanPlayerId();
      }
      /**
       * <code>required uint32 banPlayerId = 1;</code>
       */
      public int getBanPlayerId() {
        return instance.getBanPlayerId();
      }
      /**
       * <code>required uint32 banPlayerId = 1;</code>
       */
      public Builder setBanPlayerId(int value) {
        copyOnWrite();
        instance.setBanPlayerId(value);
        return this;
      }
      /**
       * <code>required uint32 banPlayerId = 1;</code>
       */
      public Builder clearBanPlayerId() {
        copyOnWrite();
        instance.clearBanPlayerId();
        return this;
      }

      /**
       * <code>required .AdminBanPlayerAckMessage.AdminBanPlayerResult banPlayerResult = 2;</code>
       */
      public boolean hasBanPlayerResult() {
        return instance.hasBanPlayerResult();
      }
      /**
       * <code>required .AdminBanPlayerAckMessage.AdminBanPlayerResult banPlayerResult = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.AdminBanPlayerResult getBanPlayerResult() {
        return instance.getBanPlayerResult();
      }
      /**
       * <code>required .AdminBanPlayerAckMessage.AdminBanPlayerResult banPlayerResult = 2;</code>
       */
      public Builder setBanPlayerResult(de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.AdminBanPlayerResult value) {
        copyOnWrite();
        instance.setBanPlayerResult(value);
        return this;
      }
      /**
       * <code>required .AdminBanPlayerAckMessage.AdminBanPlayerResult banPlayerResult = 2;</code>
       */
      public Builder clearBanPlayerResult() {
        copyOnWrite();
        instance.clearBanPlayerResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AdminBanPlayerAckMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasBanPlayerId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasBanPlayerResult()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage other = (de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage) arg1;
          banPlayerId_ = visitor.visitInt(
              hasBanPlayerId(), banPlayerId_,
              other.hasBanPlayerId(), other.banPlayerId_);
          banPlayerResult_ = visitor.visitInt(hasBanPlayerResult(), banPlayerResult_,
              other.hasBanPlayerResult(), other.banPlayerResult_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  banPlayerId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.AdminBanPlayerResult value = de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.AdminBanPlayerResult.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    banPlayerResult_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AdminBanPlayerAckMessage)
    private static final de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AdminBanPlayerAckMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AdminBanPlayerAckMessage> PARSER;

    public static com.google.protobuf.Parser<AdminBanPlayerAckMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PokerTHMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PokerTHMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .PokerTHMessage.PokerTHMessageType messageType = 1;</code>
     */
    boolean hasMessageType();
    /**
     * <code>required .PokerTHMessage.PokerTHMessageType messageType = 1;</code>
     */
    de.pokerth.protocol.ProtoBuf.PokerTHMessage.PokerTHMessageType getMessageType();

    /**
     * <code>optional .AnnounceMessage announceMessage = 2;</code>
     */
    boolean hasAnnounceMessage();
    /**
     * <code>optional .AnnounceMessage announceMessage = 2;</code>
     */
    de.pokerth.protocol.ProtoBuf.AnnounceMessage getAnnounceMessage();

    /**
     * <code>optional .InitMessage initMessage = 3;</code>
     */
    boolean hasInitMessage();
    /**
     * <code>optional .InitMessage initMessage = 3;</code>
     */
    de.pokerth.protocol.ProtoBuf.InitMessage getInitMessage();

    /**
     * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
     */
    boolean hasAuthServerChallengeMessage();
    /**
     * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
     */
    de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage getAuthServerChallengeMessage();

    /**
     * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
     */
    boolean hasAuthClientResponseMessage();
    /**
     * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
     */
    de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage getAuthClientResponseMessage();

    /**
     * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
     */
    boolean hasAuthServerVerificationMessage();
    /**
     * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
     */
    de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage getAuthServerVerificationMessage();

    /**
     * <code>optional .InitAckMessage initAckMessage = 7;</code>
     */
    boolean hasInitAckMessage();
    /**
     * <code>optional .InitAckMessage initAckMessage = 7;</code>
     */
    de.pokerth.protocol.ProtoBuf.InitAckMessage getInitAckMessage();

    /**
     * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
     */
    boolean hasAvatarRequestMessage();
    /**
     * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
     */
    de.pokerth.protocol.ProtoBuf.AvatarRequestMessage getAvatarRequestMessage();

    /**
     * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
     */
    boolean hasAvatarHeaderMessage();
    /**
     * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
     */
    de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage getAvatarHeaderMessage();

    /**
     * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
     */
    boolean hasAvatarDataMessage();
    /**
     * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
     */
    de.pokerth.protocol.ProtoBuf.AvatarDataMessage getAvatarDataMessage();

    /**
     * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
     */
    boolean hasAvatarEndMessage();
    /**
     * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
     */
    de.pokerth.protocol.ProtoBuf.AvatarEndMessage getAvatarEndMessage();

    /**
     * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
     */
    boolean hasUnknownAvatarMessage();
    /**
     * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
     */
    de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage getUnknownAvatarMessage();

    /**
     * <code>optional .PlayerListMessage playerListMessage = 13;</code>
     */
    boolean hasPlayerListMessage();
    /**
     * <code>optional .PlayerListMessage playerListMessage = 13;</code>
     */
    de.pokerth.protocol.ProtoBuf.PlayerListMessage getPlayerListMessage();

    /**
     * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
     */
    boolean hasGameListNewMessage();
    /**
     * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameListNewMessage getGameListNewMessage();

    /**
     * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
     */
    boolean hasGameListUpdateMessage();
    /**
     * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameListUpdateMessage getGameListUpdateMessage();

    /**
     * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
     */
    boolean hasGameListPlayerJoinedMessage();
    /**
     * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage getGameListPlayerJoinedMessage();

    /**
     * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
     */
    boolean hasGameListPlayerLeftMessage();
    /**
     * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage getGameListPlayerLeftMessage();

    /**
     * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
     */
    boolean hasGameListAdminChangedMessage();
    /**
     * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage getGameListAdminChangedMessage();

    /**
     * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
     */
    boolean hasPlayerInfoRequestMessage();
    /**
     * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
     */
    de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage getPlayerInfoRequestMessage();

    /**
     * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
     */
    boolean hasPlayerInfoReplyMessage();
    /**
     * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
     */
    de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage getPlayerInfoReplyMessage();

    /**
     * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
     */
    boolean hasSubscriptionRequestMessage();
    /**
     * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
     */
    de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage getSubscriptionRequestMessage();

    /**
     * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
     */
    boolean hasJoinExistingGameMessage();
    /**
     * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
     */
    de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage getJoinExistingGameMessage();

    /**
     * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
     */
    boolean hasJoinNewGameMessage();
    /**
     * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
     */
    de.pokerth.protocol.ProtoBuf.JoinNewGameMessage getJoinNewGameMessage();

    /**
     * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
     */
    boolean hasRejoinExistingGameMessage();
    /**
     * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
     */
    de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage getRejoinExistingGameMessage();

    /**
     * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
     */
    boolean hasJoinGameAckMessage();
    /**
     * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
     */
    de.pokerth.protocol.ProtoBuf.JoinGameAckMessage getJoinGameAckMessage();

    /**
     * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
     */
    boolean hasJoinGameFailedMessage();
    /**
     * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
     */
    de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage getJoinGameFailedMessage();

    /**
     * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
     */
    boolean hasGamePlayerJoinedMessage();
    /**
     * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
     */
    de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage getGamePlayerJoinedMessage();

    /**
     * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
     */
    boolean hasGamePlayerLeftMessage();
    /**
     * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
     */
    de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage getGamePlayerLeftMessage();

    /**
     * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
     */
    boolean hasGameAdminChangedMessage();
    /**
     * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage getGameAdminChangedMessage();

    /**
     * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
     */
    boolean hasRemovedFromGameMessage();
    /**
     * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
     */
    de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage getRemovedFromGameMessage();

    /**
     * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
     */
    boolean hasKickPlayerRequestMessage();
    /**
     * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
     */
    de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage getKickPlayerRequestMessage();

    /**
     * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
     */
    boolean hasLeaveGameRequestMessage();
    /**
     * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
     */
    de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage getLeaveGameRequestMessage();

    /**
     * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
     */
    boolean hasInvitePlayerToGameMessage();
    /**
     * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
     */
    de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage getInvitePlayerToGameMessage();

    /**
     * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
     */
    boolean hasInviteNotifyMessage();
    /**
     * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
     */
    de.pokerth.protocol.ProtoBuf.InviteNotifyMessage getInviteNotifyMessage();

    /**
     * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
     */
    boolean hasRejectGameInvitationMessage();
    /**
     * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
     */
    de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage getRejectGameInvitationMessage();

    /**
     * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
     */
    boolean hasRejectInvNotifyMessage();
    /**
     * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
     */
    de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage getRejectInvNotifyMessage();

    /**
     * <code>optional .StartEventMessage startEventMessage = 37;</code>
     */
    boolean hasStartEventMessage();
    /**
     * <code>optional .StartEventMessage startEventMessage = 37;</code>
     */
    de.pokerth.protocol.ProtoBuf.StartEventMessage getStartEventMessage();

    /**
     * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
     */
    boolean hasStartEventAckMessage();
    /**
     * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
     */
    de.pokerth.protocol.ProtoBuf.StartEventAckMessage getStartEventAckMessage();

    /**
     * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
     */
    boolean hasGameStartInitialMessage();
    /**
     * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameStartInitialMessage getGameStartInitialMessage();

    /**
     * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
     */
    boolean hasGameStartRejoinMessage();
    /**
     * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage getGameStartRejoinMessage();

    /**
     * <code>optional .HandStartMessage handStartMessage = 41;</code>
     */
    boolean hasHandStartMessage();
    /**
     * <code>optional .HandStartMessage handStartMessage = 41;</code>
     */
    de.pokerth.protocol.ProtoBuf.HandStartMessage getHandStartMessage();

    /**
     * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
     */
    boolean hasPlayersTurnMessage();
    /**
     * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
     */
    de.pokerth.protocol.ProtoBuf.PlayersTurnMessage getPlayersTurnMessage();

    /**
     * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
     */
    boolean hasMyActionRequestMessage();
    /**
     * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
     */
    de.pokerth.protocol.ProtoBuf.MyActionRequestMessage getMyActionRequestMessage();

    /**
     * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
     */
    boolean hasYourActionRejectedMessage();
    /**
     * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
     */
    de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage getYourActionRejectedMessage();

    /**
     * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
     */
    boolean hasPlayersActionDoneMessage();
    /**
     * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
     */
    de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage getPlayersActionDoneMessage();

    /**
     * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
     */
    boolean hasDealFlopCardsMessage();
    /**
     * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
     */
    de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage getDealFlopCardsMessage();

    /**
     * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
     */
    boolean hasDealTurnCardMessage();
    /**
     * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
     */
    de.pokerth.protocol.ProtoBuf.DealTurnCardMessage getDealTurnCardMessage();

    /**
     * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
     */
    boolean hasDealRiverCardMessage();
    /**
     * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
     */
    de.pokerth.protocol.ProtoBuf.DealRiverCardMessage getDealRiverCardMessage();

    /**
     * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
     */
    boolean hasAllInShowCardsMessage();
    /**
     * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
     */
    de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage getAllInShowCardsMessage();

    /**
     * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
     */
    boolean hasEndOfHandShowCardsMessage();
    /**
     * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
     */
    de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage getEndOfHandShowCardsMessage();

    /**
     * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
     */
    boolean hasEndOfHandHideCardsMessage();
    /**
     * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
     */
    de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage getEndOfHandHideCardsMessage();

    /**
     * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
     */
    boolean hasShowMyCardsRequestMessage();
    /**
     * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
     */
    de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage getShowMyCardsRequestMessage();

    /**
     * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
     */
    boolean hasAfterHandShowCardsMessage();
    /**
     * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
     */
    de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage getAfterHandShowCardsMessage();

    /**
     * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
     */
    boolean hasEndOfGameMessage();
    /**
     * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
     */
    de.pokerth.protocol.ProtoBuf.EndOfGameMessage getEndOfGameMessage();

    /**
     * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
     */
    boolean hasPlayerIdChangedMessage();
    /**
     * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
     */
    de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage getPlayerIdChangedMessage();

    /**
     * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
     */
    boolean hasAskKickPlayerMessage();
    /**
     * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
     */
    de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage getAskKickPlayerMessage();

    /**
     * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
     */
    boolean hasAskKickDeniedMessage();
    /**
     * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
     */
    de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage getAskKickDeniedMessage();

    /**
     * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
     */
    boolean hasStartKickPetitionMessage();
    /**
     * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
     */
    de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage getStartKickPetitionMessage();

    /**
     * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
     */
    boolean hasVoteKickRequestMessage();
    /**
     * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
     */
    de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage getVoteKickRequestMessage();

    /**
     * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
     */
    boolean hasVoteKickReplyMessage();
    /**
     * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
     */
    de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage getVoteKickReplyMessage();

    /**
     * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
     */
    boolean hasKickPetitionUpdateMessage();
    /**
     * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
     */
    de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage getKickPetitionUpdateMessage();

    /**
     * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
     */
    boolean hasEndKickPetitionMessage();
    /**
     * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
     */
    de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage getEndKickPetitionMessage();

    /**
     * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
     */
    boolean hasStatisticsMessage();
    /**
     * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
     */
    de.pokerth.protocol.ProtoBuf.StatisticsMessage getStatisticsMessage();

    /**
     * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
     */
    boolean hasChatRequestMessage();
    /**
     * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
     */
    de.pokerth.protocol.ProtoBuf.ChatRequestMessage getChatRequestMessage();

    /**
     * <code>optional .ChatMessage chatMessage = 65;</code>
     */
    boolean hasChatMessage();
    /**
     * <code>optional .ChatMessage chatMessage = 65;</code>
     */
    de.pokerth.protocol.ProtoBuf.ChatMessage getChatMessage();

    /**
     * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
     */
    boolean hasChatRejectMessage();
    /**
     * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
     */
    de.pokerth.protocol.ProtoBuf.ChatRejectMessage getChatRejectMessage();

    /**
     * <code>optional .DialogMessage dialogMessage = 67;</code>
     */
    boolean hasDialogMessage();
    /**
     * <code>optional .DialogMessage dialogMessage = 67;</code>
     */
    de.pokerth.protocol.ProtoBuf.DialogMessage getDialogMessage();

    /**
     * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
     */
    boolean hasTimeoutWarningMessage();
    /**
     * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
     */
    de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage getTimeoutWarningMessage();

    /**
     * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
     */
    boolean hasResetTimeoutMessage();
    /**
     * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
     */
    de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage getResetTimeoutMessage();

    /**
     * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
     */
    boolean hasReportAvatarMessage();
    /**
     * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
     */
    de.pokerth.protocol.ProtoBuf.ReportAvatarMessage getReportAvatarMessage();

    /**
     * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
     */
    boolean hasReportAvatarAckMessage();
    /**
     * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
     */
    de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage getReportAvatarAckMessage();

    /**
     * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
     */
    boolean hasReportGameMessage();
    /**
     * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
     */
    de.pokerth.protocol.ProtoBuf.ReportGameMessage getReportGameMessage();

    /**
     * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
     */
    boolean hasReportGameAckMessage();
    /**
     * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
     */
    de.pokerth.protocol.ProtoBuf.ReportGameAckMessage getReportGameAckMessage();

    /**
     * <code>optional .ErrorMessage errorMessage = 74;</code>
     */
    boolean hasErrorMessage();
    /**
     * <code>optional .ErrorMessage errorMessage = 74;</code>
     */
    de.pokerth.protocol.ProtoBuf.ErrorMessage getErrorMessage();

    /**
     * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
     */
    boolean hasAdminRemoveGameMessage();
    /**
     * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
     */
    de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage getAdminRemoveGameMessage();

    /**
     * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
     */
    boolean hasAdminRemoveGameAckMessage();
    /**
     * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
     */
    de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage getAdminRemoveGameAckMessage();

    /**
     * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
     */
    boolean hasAdminBanPlayerMessage();
    /**
     * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
     */
    de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage getAdminBanPlayerMessage();

    /**
     * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
     */
    boolean hasAdminBanPlayerAckMessage();
    /**
     * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
     */
    de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage getAdminBanPlayerAckMessage();

    /**
     * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
     */
    boolean hasGameListSpectatorJoinedMessage();
    /**
     * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage getGameListSpectatorJoinedMessage();

    /**
     * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
     */
    boolean hasGameListSpectatorLeftMessage();
    /**
     * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage getGameListSpectatorLeftMessage();

    /**
     * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
     */
    boolean hasGameSpectatorJoinedMessage();
    /**
     * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage getGameSpectatorJoinedMessage();

    /**
     * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
     */
    boolean hasGameSpectatorLeftMessage();
    /**
     * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
     */
    de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage getGameSpectatorLeftMessage();
  }
  /**
   * Protobuf type {@code PokerTHMessage}
   */
  public  static final class PokerTHMessage extends
      com.google.protobuf.GeneratedMessageLite<
          PokerTHMessage, PokerTHMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:PokerTHMessage)
      PokerTHMessageOrBuilder {
    private PokerTHMessage() {
      messageType_ = 1;
    }
    /**
     * Protobuf enum {@code PokerTHMessage.PokerTHMessageType}
     */
    public enum PokerTHMessageType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>Type_AnnounceMessage = 1;</code>
       */
      Type_AnnounceMessage(1),
      /**
       * <code>Type_InitMessage = 2;</code>
       */
      Type_InitMessage(2),
      /**
       * <code>Type_AuthServerChallengeMessage = 3;</code>
       */
      Type_AuthServerChallengeMessage(3),
      /**
       * <code>Type_AuthClientResponseMessage = 4;</code>
       */
      Type_AuthClientResponseMessage(4),
      /**
       * <code>Type_AuthServerVerificationMessage = 5;</code>
       */
      Type_AuthServerVerificationMessage(5),
      /**
       * <code>Type_InitAckMessage = 6;</code>
       */
      Type_InitAckMessage(6),
      /**
       * <code>Type_AvatarRequestMessage = 7;</code>
       */
      Type_AvatarRequestMessage(7),
      /**
       * <code>Type_AvatarHeaderMessage = 8;</code>
       */
      Type_AvatarHeaderMessage(8),
      /**
       * <code>Type_AvatarDataMessage = 9;</code>
       */
      Type_AvatarDataMessage(9),
      /**
       * <code>Type_AvatarEndMessage = 10;</code>
       */
      Type_AvatarEndMessage(10),
      /**
       * <code>Type_UnknownAvatarMessage = 11;</code>
       */
      Type_UnknownAvatarMessage(11),
      /**
       * <code>Type_PlayerListMessage = 12;</code>
       */
      Type_PlayerListMessage(12),
      /**
       * <code>Type_GameListNewMessage = 13;</code>
       */
      Type_GameListNewMessage(13),
      /**
       * <code>Type_GameListUpdateMessage = 14;</code>
       */
      Type_GameListUpdateMessage(14),
      /**
       * <code>Type_GameListPlayerJoinedMessage = 15;</code>
       */
      Type_GameListPlayerJoinedMessage(15),
      /**
       * <code>Type_GameListPlayerLeftMessage = 16;</code>
       */
      Type_GameListPlayerLeftMessage(16),
      /**
       * <code>Type_GameListAdminChangedMessage = 17;</code>
       */
      Type_GameListAdminChangedMessage(17),
      /**
       * <code>Type_PlayerInfoRequestMessage = 18;</code>
       */
      Type_PlayerInfoRequestMessage(18),
      /**
       * <code>Type_PlayerInfoReplyMessage = 19;</code>
       */
      Type_PlayerInfoReplyMessage(19),
      /**
       * <code>Type_SubscriptionRequestMessage = 20;</code>
       */
      Type_SubscriptionRequestMessage(20),
      /**
       * <code>Type_JoinExistingGameMessage = 21;</code>
       */
      Type_JoinExistingGameMessage(21),
      /**
       * <code>Type_JoinNewGameMessage = 22;</code>
       */
      Type_JoinNewGameMessage(22),
      /**
       * <code>Type_RejoinExistingGameMessage = 23;</code>
       */
      Type_RejoinExistingGameMessage(23),
      /**
       * <code>Type_JoinGameAckMessage = 24;</code>
       */
      Type_JoinGameAckMessage(24),
      /**
       * <code>Type_JoinGameFailedMessage = 25;</code>
       */
      Type_JoinGameFailedMessage(25),
      /**
       * <code>Type_GamePlayerJoinedMessage = 26;</code>
       */
      Type_GamePlayerJoinedMessage(26),
      /**
       * <code>Type_GamePlayerLeftMessage = 27;</code>
       */
      Type_GamePlayerLeftMessage(27),
      /**
       * <code>Type_GameAdminChangedMessage = 28;</code>
       */
      Type_GameAdminChangedMessage(28),
      /**
       * <code>Type_RemovedFromGameMessage = 29;</code>
       */
      Type_RemovedFromGameMessage(29),
      /**
       * <code>Type_KickPlayerRequestMessage = 30;</code>
       */
      Type_KickPlayerRequestMessage(30),
      /**
       * <code>Type_LeaveGameRequestMessage = 31;</code>
       */
      Type_LeaveGameRequestMessage(31),
      /**
       * <code>Type_InvitePlayerToGameMessage = 32;</code>
       */
      Type_InvitePlayerToGameMessage(32),
      /**
       * <code>Type_InviteNotifyMessage = 33;</code>
       */
      Type_InviteNotifyMessage(33),
      /**
       * <code>Type_RejectGameInvitationMessage = 34;</code>
       */
      Type_RejectGameInvitationMessage(34),
      /**
       * <code>Type_RejectInvNotifyMessage = 35;</code>
       */
      Type_RejectInvNotifyMessage(35),
      /**
       * <code>Type_StartEventMessage = 36;</code>
       */
      Type_StartEventMessage(36),
      /**
       * <code>Type_StartEventAckMessage = 37;</code>
       */
      Type_StartEventAckMessage(37),
      /**
       * <code>Type_GameStartInitialMessage = 38;</code>
       */
      Type_GameStartInitialMessage(38),
      /**
       * <code>Type_GameStartRejoinMessage = 39;</code>
       */
      Type_GameStartRejoinMessage(39),
      /**
       * <code>Type_HandStartMessage = 40;</code>
       */
      Type_HandStartMessage(40),
      /**
       * <code>Type_PlayersTurnMessage = 41;</code>
       */
      Type_PlayersTurnMessage(41),
      /**
       * <code>Type_MyActionRequestMessage = 42;</code>
       */
      Type_MyActionRequestMessage(42),
      /**
       * <code>Type_YourActionRejectedMessage = 43;</code>
       */
      Type_YourActionRejectedMessage(43),
      /**
       * <code>Type_PlayersActionDoneMessage = 44;</code>
       */
      Type_PlayersActionDoneMessage(44),
      /**
       * <code>Type_DealFlopCardsMessage = 45;</code>
       */
      Type_DealFlopCardsMessage(45),
      /**
       * <code>Type_DealTurnCardMessage = 46;</code>
       */
      Type_DealTurnCardMessage(46),
      /**
       * <code>Type_DealRiverCardMessage = 47;</code>
       */
      Type_DealRiverCardMessage(47),
      /**
       * <code>Type_AllInShowCardsMessage = 48;</code>
       */
      Type_AllInShowCardsMessage(48),
      /**
       * <code>Type_EndOfHandShowCardsMessage = 49;</code>
       */
      Type_EndOfHandShowCardsMessage(49),
      /**
       * <code>Type_EndOfHandHideCardsMessage = 50;</code>
       */
      Type_EndOfHandHideCardsMessage(50),
      /**
       * <code>Type_ShowMyCardsRequestMessage = 51;</code>
       */
      Type_ShowMyCardsRequestMessage(51),
      /**
       * <code>Type_AfterHandShowCardsMessage = 52;</code>
       */
      Type_AfterHandShowCardsMessage(52),
      /**
       * <code>Type_EndOfGameMessage = 53;</code>
       */
      Type_EndOfGameMessage(53),
      /**
       * <code>Type_PlayerIdChangedMessage = 54;</code>
       */
      Type_PlayerIdChangedMessage(54),
      /**
       * <code>Type_AskKickPlayerMessage = 55;</code>
       */
      Type_AskKickPlayerMessage(55),
      /**
       * <code>Type_AskKickDeniedMessage = 56;</code>
       */
      Type_AskKickDeniedMessage(56),
      /**
       * <code>Type_StartKickPetitionMessage = 57;</code>
       */
      Type_StartKickPetitionMessage(57),
      /**
       * <code>Type_VoteKickRequestMessage = 58;</code>
       */
      Type_VoteKickRequestMessage(58),
      /**
       * <code>Type_VoteKickReplyMessage = 59;</code>
       */
      Type_VoteKickReplyMessage(59),
      /**
       * <code>Type_KickPetitionUpdateMessage = 60;</code>
       */
      Type_KickPetitionUpdateMessage(60),
      /**
       * <code>Type_EndKickPetitionMessage = 61;</code>
       */
      Type_EndKickPetitionMessage(61),
      /**
       * <code>Type_StatisticsMessage = 62;</code>
       */
      Type_StatisticsMessage(62),
      /**
       * <code>Type_ChatRequestMessage = 63;</code>
       */
      Type_ChatRequestMessage(63),
      /**
       * <code>Type_ChatMessage = 64;</code>
       */
      Type_ChatMessage(64),
      /**
       * <code>Type_ChatRejectMessage = 65;</code>
       */
      Type_ChatRejectMessage(65),
      /**
       * <code>Type_DialogMessage = 66;</code>
       */
      Type_DialogMessage(66),
      /**
       * <code>Type_TimeoutWarningMessage = 67;</code>
       */
      Type_TimeoutWarningMessage(67),
      /**
       * <code>Type_ResetTimeoutMessage = 68;</code>
       */
      Type_ResetTimeoutMessage(68),
      /**
       * <code>Type_ReportAvatarMessage = 69;</code>
       */
      Type_ReportAvatarMessage(69),
      /**
       * <code>Type_ReportAvatarAckMessage = 70;</code>
       */
      Type_ReportAvatarAckMessage(70),
      /**
       * <code>Type_ReportGameMessage = 71;</code>
       */
      Type_ReportGameMessage(71),
      /**
       * <code>Type_ReportGameAckMessage = 72;</code>
       */
      Type_ReportGameAckMessage(72),
      /**
       * <code>Type_ErrorMessage = 73;</code>
       */
      Type_ErrorMessage(73),
      /**
       * <code>Type_AdminRemoveGameMessage = 74;</code>
       */
      Type_AdminRemoveGameMessage(74),
      /**
       * <code>Type_AdminRemoveGameAckMessage = 75;</code>
       */
      Type_AdminRemoveGameAckMessage(75),
      /**
       * <code>Type_AdminBanPlayerMessage = 76;</code>
       */
      Type_AdminBanPlayerMessage(76),
      /**
       * <code>Type_AdminBanPlayerAckMessage = 77;</code>
       */
      Type_AdminBanPlayerAckMessage(77),
      /**
       * <code>Type_GameListSpectatorJoinedMessage = 78;</code>
       */
      Type_GameListSpectatorJoinedMessage(78),
      /**
       * <code>Type_GameListSpectatorLeftMessage = 79;</code>
       */
      Type_GameListSpectatorLeftMessage(79),
      /**
       * <code>Type_GameSpectatorJoinedMessage = 80;</code>
       */
      Type_GameSpectatorJoinedMessage(80),
      /**
       * <code>Type_GameSpectatorLeftMessage = 81;</code>
       */
      Type_GameSpectatorLeftMessage(81),
      ;

      /**
       * <code>Type_AnnounceMessage = 1;</code>
       */
      public static final int Type_AnnounceMessage_VALUE = 1;
      /**
       * <code>Type_InitMessage = 2;</code>
       */
      public static final int Type_InitMessage_VALUE = 2;
      /**
       * <code>Type_AuthServerChallengeMessage = 3;</code>
       */
      public static final int Type_AuthServerChallengeMessage_VALUE = 3;
      /**
       * <code>Type_AuthClientResponseMessage = 4;</code>
       */
      public static final int Type_AuthClientResponseMessage_VALUE = 4;
      /**
       * <code>Type_AuthServerVerificationMessage = 5;</code>
       */
      public static final int Type_AuthServerVerificationMessage_VALUE = 5;
      /**
       * <code>Type_InitAckMessage = 6;</code>
       */
      public static final int Type_InitAckMessage_VALUE = 6;
      /**
       * <code>Type_AvatarRequestMessage = 7;</code>
       */
      public static final int Type_AvatarRequestMessage_VALUE = 7;
      /**
       * <code>Type_AvatarHeaderMessage = 8;</code>
       */
      public static final int Type_AvatarHeaderMessage_VALUE = 8;
      /**
       * <code>Type_AvatarDataMessage = 9;</code>
       */
      public static final int Type_AvatarDataMessage_VALUE = 9;
      /**
       * <code>Type_AvatarEndMessage = 10;</code>
       */
      public static final int Type_AvatarEndMessage_VALUE = 10;
      /**
       * <code>Type_UnknownAvatarMessage = 11;</code>
       */
      public static final int Type_UnknownAvatarMessage_VALUE = 11;
      /**
       * <code>Type_PlayerListMessage = 12;</code>
       */
      public static final int Type_PlayerListMessage_VALUE = 12;
      /**
       * <code>Type_GameListNewMessage = 13;</code>
       */
      public static final int Type_GameListNewMessage_VALUE = 13;
      /**
       * <code>Type_GameListUpdateMessage = 14;</code>
       */
      public static final int Type_GameListUpdateMessage_VALUE = 14;
      /**
       * <code>Type_GameListPlayerJoinedMessage = 15;</code>
       */
      public static final int Type_GameListPlayerJoinedMessage_VALUE = 15;
      /**
       * <code>Type_GameListPlayerLeftMessage = 16;</code>
       */
      public static final int Type_GameListPlayerLeftMessage_VALUE = 16;
      /**
       * <code>Type_GameListAdminChangedMessage = 17;</code>
       */
      public static final int Type_GameListAdminChangedMessage_VALUE = 17;
      /**
       * <code>Type_PlayerInfoRequestMessage = 18;</code>
       */
      public static final int Type_PlayerInfoRequestMessage_VALUE = 18;
      /**
       * <code>Type_PlayerInfoReplyMessage = 19;</code>
       */
      public static final int Type_PlayerInfoReplyMessage_VALUE = 19;
      /**
       * <code>Type_SubscriptionRequestMessage = 20;</code>
       */
      public static final int Type_SubscriptionRequestMessage_VALUE = 20;
      /**
       * <code>Type_JoinExistingGameMessage = 21;</code>
       */
      public static final int Type_JoinExistingGameMessage_VALUE = 21;
      /**
       * <code>Type_JoinNewGameMessage = 22;</code>
       */
      public static final int Type_JoinNewGameMessage_VALUE = 22;
      /**
       * <code>Type_RejoinExistingGameMessage = 23;</code>
       */
      public static final int Type_RejoinExistingGameMessage_VALUE = 23;
      /**
       * <code>Type_JoinGameAckMessage = 24;</code>
       */
      public static final int Type_JoinGameAckMessage_VALUE = 24;
      /**
       * <code>Type_JoinGameFailedMessage = 25;</code>
       */
      public static final int Type_JoinGameFailedMessage_VALUE = 25;
      /**
       * <code>Type_GamePlayerJoinedMessage = 26;</code>
       */
      public static final int Type_GamePlayerJoinedMessage_VALUE = 26;
      /**
       * <code>Type_GamePlayerLeftMessage = 27;</code>
       */
      public static final int Type_GamePlayerLeftMessage_VALUE = 27;
      /**
       * <code>Type_GameAdminChangedMessage = 28;</code>
       */
      public static final int Type_GameAdminChangedMessage_VALUE = 28;
      /**
       * <code>Type_RemovedFromGameMessage = 29;</code>
       */
      public static final int Type_RemovedFromGameMessage_VALUE = 29;
      /**
       * <code>Type_KickPlayerRequestMessage = 30;</code>
       */
      public static final int Type_KickPlayerRequestMessage_VALUE = 30;
      /**
       * <code>Type_LeaveGameRequestMessage = 31;</code>
       */
      public static final int Type_LeaveGameRequestMessage_VALUE = 31;
      /**
       * <code>Type_InvitePlayerToGameMessage = 32;</code>
       */
      public static final int Type_InvitePlayerToGameMessage_VALUE = 32;
      /**
       * <code>Type_InviteNotifyMessage = 33;</code>
       */
      public static final int Type_InviteNotifyMessage_VALUE = 33;
      /**
       * <code>Type_RejectGameInvitationMessage = 34;</code>
       */
      public static final int Type_RejectGameInvitationMessage_VALUE = 34;
      /**
       * <code>Type_RejectInvNotifyMessage = 35;</code>
       */
      public static final int Type_RejectInvNotifyMessage_VALUE = 35;
      /**
       * <code>Type_StartEventMessage = 36;</code>
       */
      public static final int Type_StartEventMessage_VALUE = 36;
      /**
       * <code>Type_StartEventAckMessage = 37;</code>
       */
      public static final int Type_StartEventAckMessage_VALUE = 37;
      /**
       * <code>Type_GameStartInitialMessage = 38;</code>
       */
      public static final int Type_GameStartInitialMessage_VALUE = 38;
      /**
       * <code>Type_GameStartRejoinMessage = 39;</code>
       */
      public static final int Type_GameStartRejoinMessage_VALUE = 39;
      /**
       * <code>Type_HandStartMessage = 40;</code>
       */
      public static final int Type_HandStartMessage_VALUE = 40;
      /**
       * <code>Type_PlayersTurnMessage = 41;</code>
       */
      public static final int Type_PlayersTurnMessage_VALUE = 41;
      /**
       * <code>Type_MyActionRequestMessage = 42;</code>
       */
      public static final int Type_MyActionRequestMessage_VALUE = 42;
      /**
       * <code>Type_YourActionRejectedMessage = 43;</code>
       */
      public static final int Type_YourActionRejectedMessage_VALUE = 43;
      /**
       * <code>Type_PlayersActionDoneMessage = 44;</code>
       */
      public static final int Type_PlayersActionDoneMessage_VALUE = 44;
      /**
       * <code>Type_DealFlopCardsMessage = 45;</code>
       */
      public static final int Type_DealFlopCardsMessage_VALUE = 45;
      /**
       * <code>Type_DealTurnCardMessage = 46;</code>
       */
      public static final int Type_DealTurnCardMessage_VALUE = 46;
      /**
       * <code>Type_DealRiverCardMessage = 47;</code>
       */
      public static final int Type_DealRiverCardMessage_VALUE = 47;
      /**
       * <code>Type_AllInShowCardsMessage = 48;</code>
       */
      public static final int Type_AllInShowCardsMessage_VALUE = 48;
      /**
       * <code>Type_EndOfHandShowCardsMessage = 49;</code>
       */
      public static final int Type_EndOfHandShowCardsMessage_VALUE = 49;
      /**
       * <code>Type_EndOfHandHideCardsMessage = 50;</code>
       */
      public static final int Type_EndOfHandHideCardsMessage_VALUE = 50;
      /**
       * <code>Type_ShowMyCardsRequestMessage = 51;</code>
       */
      public static final int Type_ShowMyCardsRequestMessage_VALUE = 51;
      /**
       * <code>Type_AfterHandShowCardsMessage = 52;</code>
       */
      public static final int Type_AfterHandShowCardsMessage_VALUE = 52;
      /**
       * <code>Type_EndOfGameMessage = 53;</code>
       */
      public static final int Type_EndOfGameMessage_VALUE = 53;
      /**
       * <code>Type_PlayerIdChangedMessage = 54;</code>
       */
      public static final int Type_PlayerIdChangedMessage_VALUE = 54;
      /**
       * <code>Type_AskKickPlayerMessage = 55;</code>
       */
      public static final int Type_AskKickPlayerMessage_VALUE = 55;
      /**
       * <code>Type_AskKickDeniedMessage = 56;</code>
       */
      public static final int Type_AskKickDeniedMessage_VALUE = 56;
      /**
       * <code>Type_StartKickPetitionMessage = 57;</code>
       */
      public static final int Type_StartKickPetitionMessage_VALUE = 57;
      /**
       * <code>Type_VoteKickRequestMessage = 58;</code>
       */
      public static final int Type_VoteKickRequestMessage_VALUE = 58;
      /**
       * <code>Type_VoteKickReplyMessage = 59;</code>
       */
      public static final int Type_VoteKickReplyMessage_VALUE = 59;
      /**
       * <code>Type_KickPetitionUpdateMessage = 60;</code>
       */
      public static final int Type_KickPetitionUpdateMessage_VALUE = 60;
      /**
       * <code>Type_EndKickPetitionMessage = 61;</code>
       */
      public static final int Type_EndKickPetitionMessage_VALUE = 61;
      /**
       * <code>Type_StatisticsMessage = 62;</code>
       */
      public static final int Type_StatisticsMessage_VALUE = 62;
      /**
       * <code>Type_ChatRequestMessage = 63;</code>
       */
      public static final int Type_ChatRequestMessage_VALUE = 63;
      /**
       * <code>Type_ChatMessage = 64;</code>
       */
      public static final int Type_ChatMessage_VALUE = 64;
      /**
       * <code>Type_ChatRejectMessage = 65;</code>
       */
      public static final int Type_ChatRejectMessage_VALUE = 65;
      /**
       * <code>Type_DialogMessage = 66;</code>
       */
      public static final int Type_DialogMessage_VALUE = 66;
      /**
       * <code>Type_TimeoutWarningMessage = 67;</code>
       */
      public static final int Type_TimeoutWarningMessage_VALUE = 67;
      /**
       * <code>Type_ResetTimeoutMessage = 68;</code>
       */
      public static final int Type_ResetTimeoutMessage_VALUE = 68;
      /**
       * <code>Type_ReportAvatarMessage = 69;</code>
       */
      public static final int Type_ReportAvatarMessage_VALUE = 69;
      /**
       * <code>Type_ReportAvatarAckMessage = 70;</code>
       */
      public static final int Type_ReportAvatarAckMessage_VALUE = 70;
      /**
       * <code>Type_ReportGameMessage = 71;</code>
       */
      public static final int Type_ReportGameMessage_VALUE = 71;
      /**
       * <code>Type_ReportGameAckMessage = 72;</code>
       */
      public static final int Type_ReportGameAckMessage_VALUE = 72;
      /**
       * <code>Type_ErrorMessage = 73;</code>
       */
      public static final int Type_ErrorMessage_VALUE = 73;
      /**
       * <code>Type_AdminRemoveGameMessage = 74;</code>
       */
      public static final int Type_AdminRemoveGameMessage_VALUE = 74;
      /**
       * <code>Type_AdminRemoveGameAckMessage = 75;</code>
       */
      public static final int Type_AdminRemoveGameAckMessage_VALUE = 75;
      /**
       * <code>Type_AdminBanPlayerMessage = 76;</code>
       */
      public static final int Type_AdminBanPlayerMessage_VALUE = 76;
      /**
       * <code>Type_AdminBanPlayerAckMessage = 77;</code>
       */
      public static final int Type_AdminBanPlayerAckMessage_VALUE = 77;
      /**
       * <code>Type_GameListSpectatorJoinedMessage = 78;</code>
       */
      public static final int Type_GameListSpectatorJoinedMessage_VALUE = 78;
      /**
       * <code>Type_GameListSpectatorLeftMessage = 79;</code>
       */
      public static final int Type_GameListSpectatorLeftMessage_VALUE = 79;
      /**
       * <code>Type_GameSpectatorJoinedMessage = 80;</code>
       */
      public static final int Type_GameSpectatorJoinedMessage_VALUE = 80;
      /**
       * <code>Type_GameSpectatorLeftMessage = 81;</code>
       */
      public static final int Type_GameSpectatorLeftMessage_VALUE = 81;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PokerTHMessageType valueOf(int value) {
        return forNumber(value);
      }

      public static PokerTHMessageType forNumber(int value) {
        switch (value) {
          case 1: return Type_AnnounceMessage;
          case 2: return Type_InitMessage;
          case 3: return Type_AuthServerChallengeMessage;
          case 4: return Type_AuthClientResponseMessage;
          case 5: return Type_AuthServerVerificationMessage;
          case 6: return Type_InitAckMessage;
          case 7: return Type_AvatarRequestMessage;
          case 8: return Type_AvatarHeaderMessage;
          case 9: return Type_AvatarDataMessage;
          case 10: return Type_AvatarEndMessage;
          case 11: return Type_UnknownAvatarMessage;
          case 12: return Type_PlayerListMessage;
          case 13: return Type_GameListNewMessage;
          case 14: return Type_GameListUpdateMessage;
          case 15: return Type_GameListPlayerJoinedMessage;
          case 16: return Type_GameListPlayerLeftMessage;
          case 17: return Type_GameListAdminChangedMessage;
          case 18: return Type_PlayerInfoRequestMessage;
          case 19: return Type_PlayerInfoReplyMessage;
          case 20: return Type_SubscriptionRequestMessage;
          case 21: return Type_JoinExistingGameMessage;
          case 22: return Type_JoinNewGameMessage;
          case 23: return Type_RejoinExistingGameMessage;
          case 24: return Type_JoinGameAckMessage;
          case 25: return Type_JoinGameFailedMessage;
          case 26: return Type_GamePlayerJoinedMessage;
          case 27: return Type_GamePlayerLeftMessage;
          case 28: return Type_GameAdminChangedMessage;
          case 29: return Type_RemovedFromGameMessage;
          case 30: return Type_KickPlayerRequestMessage;
          case 31: return Type_LeaveGameRequestMessage;
          case 32: return Type_InvitePlayerToGameMessage;
          case 33: return Type_InviteNotifyMessage;
          case 34: return Type_RejectGameInvitationMessage;
          case 35: return Type_RejectInvNotifyMessage;
          case 36: return Type_StartEventMessage;
          case 37: return Type_StartEventAckMessage;
          case 38: return Type_GameStartInitialMessage;
          case 39: return Type_GameStartRejoinMessage;
          case 40: return Type_HandStartMessage;
          case 41: return Type_PlayersTurnMessage;
          case 42: return Type_MyActionRequestMessage;
          case 43: return Type_YourActionRejectedMessage;
          case 44: return Type_PlayersActionDoneMessage;
          case 45: return Type_DealFlopCardsMessage;
          case 46: return Type_DealTurnCardMessage;
          case 47: return Type_DealRiverCardMessage;
          case 48: return Type_AllInShowCardsMessage;
          case 49: return Type_EndOfHandShowCardsMessage;
          case 50: return Type_EndOfHandHideCardsMessage;
          case 51: return Type_ShowMyCardsRequestMessage;
          case 52: return Type_AfterHandShowCardsMessage;
          case 53: return Type_EndOfGameMessage;
          case 54: return Type_PlayerIdChangedMessage;
          case 55: return Type_AskKickPlayerMessage;
          case 56: return Type_AskKickDeniedMessage;
          case 57: return Type_StartKickPetitionMessage;
          case 58: return Type_VoteKickRequestMessage;
          case 59: return Type_VoteKickReplyMessage;
          case 60: return Type_KickPetitionUpdateMessage;
          case 61: return Type_EndKickPetitionMessage;
          case 62: return Type_StatisticsMessage;
          case 63: return Type_ChatRequestMessage;
          case 64: return Type_ChatMessage;
          case 65: return Type_ChatRejectMessage;
          case 66: return Type_DialogMessage;
          case 67: return Type_TimeoutWarningMessage;
          case 68: return Type_ResetTimeoutMessage;
          case 69: return Type_ReportAvatarMessage;
          case 70: return Type_ReportAvatarAckMessage;
          case 71: return Type_ReportGameMessage;
          case 72: return Type_ReportGameAckMessage;
          case 73: return Type_ErrorMessage;
          case 74: return Type_AdminRemoveGameMessage;
          case 75: return Type_AdminRemoveGameAckMessage;
          case 76: return Type_AdminBanPlayerMessage;
          case 77: return Type_AdminBanPlayerAckMessage;
          case 78: return Type_GameListSpectatorJoinedMessage;
          case 79: return Type_GameListSpectatorLeftMessage;
          case 80: return Type_GameSpectatorJoinedMessage;
          case 81: return Type_GameSpectatorLeftMessage;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PokerTHMessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PokerTHMessageType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PokerTHMessageType>() {
              public PokerTHMessageType findValueByNumber(int number) {
                return PokerTHMessageType.forNumber(number);
              }
            };

      private final int value;

      private PokerTHMessageType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:PokerTHMessage.PokerTHMessageType)
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    public static final int MESSAGETYPE_FIELD_NUMBER = 1;
    private int messageType_;
    /**
     * <code>required .PokerTHMessage.PokerTHMessageType messageType = 1;</code>
     */
    public boolean hasMessageType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PokerTHMessage.PokerTHMessageType messageType = 1;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PokerTHMessage.PokerTHMessageType getMessageType() {
      de.pokerth.protocol.ProtoBuf.PokerTHMessage.PokerTHMessageType result = de.pokerth.protocol.ProtoBuf.PokerTHMessage.PokerTHMessageType.forNumber(messageType_);
      return result == null ? de.pokerth.protocol.ProtoBuf.PokerTHMessage.PokerTHMessageType.Type_AnnounceMessage : result;
    }
    /**
     * <code>required .PokerTHMessage.PokerTHMessageType messageType = 1;</code>
     */
    private void setMessageType(de.pokerth.protocol.ProtoBuf.PokerTHMessage.PokerTHMessageType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      messageType_ = value.getNumber();
    }
    /**
     * <code>required .PokerTHMessage.PokerTHMessageType messageType = 1;</code>
     */
    private void clearMessageType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      messageType_ = 1;
    }

    public static final int ANNOUNCEMESSAGE_FIELD_NUMBER = 2;
    private de.pokerth.protocol.ProtoBuf.AnnounceMessage announceMessage_;
    /**
     * <code>optional .AnnounceMessage announceMessage = 2;</code>
     */
    public boolean hasAnnounceMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .AnnounceMessage announceMessage = 2;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AnnounceMessage getAnnounceMessage() {
      return announceMessage_ == null ? de.pokerth.protocol.ProtoBuf.AnnounceMessage.getDefaultInstance() : announceMessage_;
    }
    /**
     * <code>optional .AnnounceMessage announceMessage = 2;</code>
     */
    private void setAnnounceMessage(de.pokerth.protocol.ProtoBuf.AnnounceMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      announceMessage_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .AnnounceMessage announceMessage = 2;</code>
     */
    private void setAnnounceMessage(
        de.pokerth.protocol.ProtoBuf.AnnounceMessage.Builder builderForValue) {
      announceMessage_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .AnnounceMessage announceMessage = 2;</code>
     */
    private void mergeAnnounceMessage(de.pokerth.protocol.ProtoBuf.AnnounceMessage value) {
      if (announceMessage_ != null &&
          announceMessage_ != de.pokerth.protocol.ProtoBuf.AnnounceMessage.getDefaultInstance()) {
        announceMessage_ =
          de.pokerth.protocol.ProtoBuf.AnnounceMessage.newBuilder(announceMessage_).mergeFrom(value).buildPartial();
      } else {
        announceMessage_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .AnnounceMessage announceMessage = 2;</code>
     */
    private void clearAnnounceMessage() {  announceMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int INITMESSAGE_FIELD_NUMBER = 3;
    private de.pokerth.protocol.ProtoBuf.InitMessage initMessage_;
    /**
     * <code>optional .InitMessage initMessage = 3;</code>
     */
    public boolean hasInitMessage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .InitMessage initMessage = 3;</code>
     */
    public de.pokerth.protocol.ProtoBuf.InitMessage getInitMessage() {
      return initMessage_ == null ? de.pokerth.protocol.ProtoBuf.InitMessage.getDefaultInstance() : initMessage_;
    }
    /**
     * <code>optional .InitMessage initMessage = 3;</code>
     */
    private void setInitMessage(de.pokerth.protocol.ProtoBuf.InitMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      initMessage_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>optional .InitMessage initMessage = 3;</code>
     */
    private void setInitMessage(
        de.pokerth.protocol.ProtoBuf.InitMessage.Builder builderForValue) {
      initMessage_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .InitMessage initMessage = 3;</code>
     */
    private void mergeInitMessage(de.pokerth.protocol.ProtoBuf.InitMessage value) {
      if (initMessage_ != null &&
          initMessage_ != de.pokerth.protocol.ProtoBuf.InitMessage.getDefaultInstance()) {
        initMessage_ =
          de.pokerth.protocol.ProtoBuf.InitMessage.newBuilder(initMessage_).mergeFrom(value).buildPartial();
      } else {
        initMessage_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .InitMessage initMessage = 3;</code>
     */
    private void clearInitMessage() {  initMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int AUTHSERVERCHALLENGEMESSAGE_FIELD_NUMBER = 4;
    private de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage authServerChallengeMessage_;
    /**
     * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
     */
    public boolean hasAuthServerChallengeMessage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage getAuthServerChallengeMessage() {
      return authServerChallengeMessage_ == null ? de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage.getDefaultInstance() : authServerChallengeMessage_;
    }
    /**
     * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
     */
    private void setAuthServerChallengeMessage(de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      authServerChallengeMessage_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
     */
    private void setAuthServerChallengeMessage(
        de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage.Builder builderForValue) {
      authServerChallengeMessage_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
     */
    private void mergeAuthServerChallengeMessage(de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage value) {
      if (authServerChallengeMessage_ != null &&
          authServerChallengeMessage_ != de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage.getDefaultInstance()) {
        authServerChallengeMessage_ =
          de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage.newBuilder(authServerChallengeMessage_).mergeFrom(value).buildPartial();
      } else {
        authServerChallengeMessage_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
     */
    private void clearAuthServerChallengeMessage() {  authServerChallengeMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int AUTHCLIENTRESPONSEMESSAGE_FIELD_NUMBER = 5;
    private de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage authClientResponseMessage_;
    /**
     * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
     */
    public boolean hasAuthClientResponseMessage() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage getAuthClientResponseMessage() {
      return authClientResponseMessage_ == null ? de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage.getDefaultInstance() : authClientResponseMessage_;
    }
    /**
     * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
     */
    private void setAuthClientResponseMessage(de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      authClientResponseMessage_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
     */
    private void setAuthClientResponseMessage(
        de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage.Builder builderForValue) {
      authClientResponseMessage_ = builderForValue.build();
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
     */
    private void mergeAuthClientResponseMessage(de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage value) {
      if (authClientResponseMessage_ != null &&
          authClientResponseMessage_ != de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage.getDefaultInstance()) {
        authClientResponseMessage_ =
          de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage.newBuilder(authClientResponseMessage_).mergeFrom(value).buildPartial();
      } else {
        authClientResponseMessage_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
     */
    private void clearAuthClientResponseMessage() {  authClientResponseMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int AUTHSERVERVERIFICATIONMESSAGE_FIELD_NUMBER = 6;
    private de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage authServerVerificationMessage_;
    /**
     * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
     */
    public boolean hasAuthServerVerificationMessage() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage getAuthServerVerificationMessage() {
      return authServerVerificationMessage_ == null ? de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage.getDefaultInstance() : authServerVerificationMessage_;
    }
    /**
     * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
     */
    private void setAuthServerVerificationMessage(de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      authServerVerificationMessage_ = value;
      bitField0_ |= 0x00000020;
      }
    /**
     * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
     */
    private void setAuthServerVerificationMessage(
        de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage.Builder builderForValue) {
      authServerVerificationMessage_ = builderForValue.build();
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
     */
    private void mergeAuthServerVerificationMessage(de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage value) {
      if (authServerVerificationMessage_ != null &&
          authServerVerificationMessage_ != de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage.getDefaultInstance()) {
        authServerVerificationMessage_ =
          de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage.newBuilder(authServerVerificationMessage_).mergeFrom(value).buildPartial();
      } else {
        authServerVerificationMessage_ = value;
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
     */
    private void clearAuthServerVerificationMessage() {  authServerVerificationMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00000020);
    }

    public static final int INITACKMESSAGE_FIELD_NUMBER = 7;
    private de.pokerth.protocol.ProtoBuf.InitAckMessage initAckMessage_;
    /**
     * <code>optional .InitAckMessage initAckMessage = 7;</code>
     */
    public boolean hasInitAckMessage() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .InitAckMessage initAckMessage = 7;</code>
     */
    public de.pokerth.protocol.ProtoBuf.InitAckMessage getInitAckMessage() {
      return initAckMessage_ == null ? de.pokerth.protocol.ProtoBuf.InitAckMessage.getDefaultInstance() : initAckMessage_;
    }
    /**
     * <code>optional .InitAckMessage initAckMessage = 7;</code>
     */
    private void setInitAckMessage(de.pokerth.protocol.ProtoBuf.InitAckMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      initAckMessage_ = value;
      bitField0_ |= 0x00000040;
      }
    /**
     * <code>optional .InitAckMessage initAckMessage = 7;</code>
     */
    private void setInitAckMessage(
        de.pokerth.protocol.ProtoBuf.InitAckMessage.Builder builderForValue) {
      initAckMessage_ = builderForValue.build();
      bitField0_ |= 0x00000040;
    }
    /**
     * <code>optional .InitAckMessage initAckMessage = 7;</code>
     */
    private void mergeInitAckMessage(de.pokerth.protocol.ProtoBuf.InitAckMessage value) {
      if (initAckMessage_ != null &&
          initAckMessage_ != de.pokerth.protocol.ProtoBuf.InitAckMessage.getDefaultInstance()) {
        initAckMessage_ =
          de.pokerth.protocol.ProtoBuf.InitAckMessage.newBuilder(initAckMessage_).mergeFrom(value).buildPartial();
      } else {
        initAckMessage_ = value;
      }
      bitField0_ |= 0x00000040;
    }
    /**
     * <code>optional .InitAckMessage initAckMessage = 7;</code>
     */
    private void clearInitAckMessage() {  initAckMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00000040);
    }

    public static final int AVATARREQUESTMESSAGE_FIELD_NUMBER = 8;
    private de.pokerth.protocol.ProtoBuf.AvatarRequestMessage avatarRequestMessage_;
    /**
     * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
     */
    public boolean hasAvatarRequestMessage() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AvatarRequestMessage getAvatarRequestMessage() {
      return avatarRequestMessage_ == null ? de.pokerth.protocol.ProtoBuf.AvatarRequestMessage.getDefaultInstance() : avatarRequestMessage_;
    }
    /**
     * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
     */
    private void setAvatarRequestMessage(de.pokerth.protocol.ProtoBuf.AvatarRequestMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      avatarRequestMessage_ = value;
      bitField0_ |= 0x00000080;
      }
    /**
     * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
     */
    private void setAvatarRequestMessage(
        de.pokerth.protocol.ProtoBuf.AvatarRequestMessage.Builder builderForValue) {
      avatarRequestMessage_ = builderForValue.build();
      bitField0_ |= 0x00000080;
    }
    /**
     * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
     */
    private void mergeAvatarRequestMessage(de.pokerth.protocol.ProtoBuf.AvatarRequestMessage value) {
      if (avatarRequestMessage_ != null &&
          avatarRequestMessage_ != de.pokerth.protocol.ProtoBuf.AvatarRequestMessage.getDefaultInstance()) {
        avatarRequestMessage_ =
          de.pokerth.protocol.ProtoBuf.AvatarRequestMessage.newBuilder(avatarRequestMessage_).mergeFrom(value).buildPartial();
      } else {
        avatarRequestMessage_ = value;
      }
      bitField0_ |= 0x00000080;
    }
    /**
     * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
     */
    private void clearAvatarRequestMessage() {  avatarRequestMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00000080);
    }

    public static final int AVATARHEADERMESSAGE_FIELD_NUMBER = 9;
    private de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage avatarHeaderMessage_;
    /**
     * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
     */
    public boolean hasAvatarHeaderMessage() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage getAvatarHeaderMessage() {
      return avatarHeaderMessage_ == null ? de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage.getDefaultInstance() : avatarHeaderMessage_;
    }
    /**
     * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
     */
    private void setAvatarHeaderMessage(de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      avatarHeaderMessage_ = value;
      bitField0_ |= 0x00000100;
      }
    /**
     * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
     */
    private void setAvatarHeaderMessage(
        de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage.Builder builderForValue) {
      avatarHeaderMessage_ = builderForValue.build();
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
     */
    private void mergeAvatarHeaderMessage(de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage value) {
      if (avatarHeaderMessage_ != null &&
          avatarHeaderMessage_ != de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage.getDefaultInstance()) {
        avatarHeaderMessage_ =
          de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage.newBuilder(avatarHeaderMessage_).mergeFrom(value).buildPartial();
      } else {
        avatarHeaderMessage_ = value;
      }
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
     */
    private void clearAvatarHeaderMessage() {  avatarHeaderMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00000100);
    }

    public static final int AVATARDATAMESSAGE_FIELD_NUMBER = 10;
    private de.pokerth.protocol.ProtoBuf.AvatarDataMessage avatarDataMessage_;
    /**
     * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
     */
    public boolean hasAvatarDataMessage() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AvatarDataMessage getAvatarDataMessage() {
      return avatarDataMessage_ == null ? de.pokerth.protocol.ProtoBuf.AvatarDataMessage.getDefaultInstance() : avatarDataMessage_;
    }
    /**
     * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
     */
    private void setAvatarDataMessage(de.pokerth.protocol.ProtoBuf.AvatarDataMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      avatarDataMessage_ = value;
      bitField0_ |= 0x00000200;
      }
    /**
     * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
     */
    private void setAvatarDataMessage(
        de.pokerth.protocol.ProtoBuf.AvatarDataMessage.Builder builderForValue) {
      avatarDataMessage_ = builderForValue.build();
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
     */
    private void mergeAvatarDataMessage(de.pokerth.protocol.ProtoBuf.AvatarDataMessage value) {
      if (avatarDataMessage_ != null &&
          avatarDataMessage_ != de.pokerth.protocol.ProtoBuf.AvatarDataMessage.getDefaultInstance()) {
        avatarDataMessage_ =
          de.pokerth.protocol.ProtoBuf.AvatarDataMessage.newBuilder(avatarDataMessage_).mergeFrom(value).buildPartial();
      } else {
        avatarDataMessage_ = value;
      }
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
     */
    private void clearAvatarDataMessage() {  avatarDataMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00000200);
    }

    public static final int AVATARENDMESSAGE_FIELD_NUMBER = 11;
    private de.pokerth.protocol.ProtoBuf.AvatarEndMessage avatarEndMessage_;
    /**
     * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
     */
    public boolean hasAvatarEndMessage() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AvatarEndMessage getAvatarEndMessage() {
      return avatarEndMessage_ == null ? de.pokerth.protocol.ProtoBuf.AvatarEndMessage.getDefaultInstance() : avatarEndMessage_;
    }
    /**
     * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
     */
    private void setAvatarEndMessage(de.pokerth.protocol.ProtoBuf.AvatarEndMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      avatarEndMessage_ = value;
      bitField0_ |= 0x00000400;
      }
    /**
     * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
     */
    private void setAvatarEndMessage(
        de.pokerth.protocol.ProtoBuf.AvatarEndMessage.Builder builderForValue) {
      avatarEndMessage_ = builderForValue.build();
      bitField0_ |= 0x00000400;
    }
    /**
     * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
     */
    private void mergeAvatarEndMessage(de.pokerth.protocol.ProtoBuf.AvatarEndMessage value) {
      if (avatarEndMessage_ != null &&
          avatarEndMessage_ != de.pokerth.protocol.ProtoBuf.AvatarEndMessage.getDefaultInstance()) {
        avatarEndMessage_ =
          de.pokerth.protocol.ProtoBuf.AvatarEndMessage.newBuilder(avatarEndMessage_).mergeFrom(value).buildPartial();
      } else {
        avatarEndMessage_ = value;
      }
      bitField0_ |= 0x00000400;
    }
    /**
     * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
     */
    private void clearAvatarEndMessage() {  avatarEndMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00000400);
    }

    public static final int UNKNOWNAVATARMESSAGE_FIELD_NUMBER = 12;
    private de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage unknownAvatarMessage_;
    /**
     * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
     */
    public boolean hasUnknownAvatarMessage() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
     */
    public de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage getUnknownAvatarMessage() {
      return unknownAvatarMessage_ == null ? de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage.getDefaultInstance() : unknownAvatarMessage_;
    }
    /**
     * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
     */
    private void setUnknownAvatarMessage(de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      unknownAvatarMessage_ = value;
      bitField0_ |= 0x00000800;
      }
    /**
     * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
     */
    private void setUnknownAvatarMessage(
        de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage.Builder builderForValue) {
      unknownAvatarMessage_ = builderForValue.build();
      bitField0_ |= 0x00000800;
    }
    /**
     * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
     */
    private void mergeUnknownAvatarMessage(de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage value) {
      if (unknownAvatarMessage_ != null &&
          unknownAvatarMessage_ != de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage.getDefaultInstance()) {
        unknownAvatarMessage_ =
          de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage.newBuilder(unknownAvatarMessage_).mergeFrom(value).buildPartial();
      } else {
        unknownAvatarMessage_ = value;
      }
      bitField0_ |= 0x00000800;
    }
    /**
     * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
     */
    private void clearUnknownAvatarMessage() {  unknownAvatarMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00000800);
    }

    public static final int PLAYERLISTMESSAGE_FIELD_NUMBER = 13;
    private de.pokerth.protocol.ProtoBuf.PlayerListMessage playerListMessage_;
    /**
     * <code>optional .PlayerListMessage playerListMessage = 13;</code>
     */
    public boolean hasPlayerListMessage() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .PlayerListMessage playerListMessage = 13;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PlayerListMessage getPlayerListMessage() {
      return playerListMessage_ == null ? de.pokerth.protocol.ProtoBuf.PlayerListMessage.getDefaultInstance() : playerListMessage_;
    }
    /**
     * <code>optional .PlayerListMessage playerListMessage = 13;</code>
     */
    private void setPlayerListMessage(de.pokerth.protocol.ProtoBuf.PlayerListMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      playerListMessage_ = value;
      bitField0_ |= 0x00001000;
      }
    /**
     * <code>optional .PlayerListMessage playerListMessage = 13;</code>
     */
    private void setPlayerListMessage(
        de.pokerth.protocol.ProtoBuf.PlayerListMessage.Builder builderForValue) {
      playerListMessage_ = builderForValue.build();
      bitField0_ |= 0x00001000;
    }
    /**
     * <code>optional .PlayerListMessage playerListMessage = 13;</code>
     */
    private void mergePlayerListMessage(de.pokerth.protocol.ProtoBuf.PlayerListMessage value) {
      if (playerListMessage_ != null &&
          playerListMessage_ != de.pokerth.protocol.ProtoBuf.PlayerListMessage.getDefaultInstance()) {
        playerListMessage_ =
          de.pokerth.protocol.ProtoBuf.PlayerListMessage.newBuilder(playerListMessage_).mergeFrom(value).buildPartial();
      } else {
        playerListMessage_ = value;
      }
      bitField0_ |= 0x00001000;
    }
    /**
     * <code>optional .PlayerListMessage playerListMessage = 13;</code>
     */
    private void clearPlayerListMessage() {  playerListMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00001000);
    }

    public static final int GAMELISTNEWMESSAGE_FIELD_NUMBER = 14;
    private de.pokerth.protocol.ProtoBuf.GameListNewMessage gameListNewMessage_;
    /**
     * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
     */
    public boolean hasGameListNewMessage() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameListNewMessage getGameListNewMessage() {
      return gameListNewMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameListNewMessage.getDefaultInstance() : gameListNewMessage_;
    }
    /**
     * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
     */
    private void setGameListNewMessage(de.pokerth.protocol.ProtoBuf.GameListNewMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameListNewMessage_ = value;
      bitField0_ |= 0x00002000;
      }
    /**
     * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
     */
    private void setGameListNewMessage(
        de.pokerth.protocol.ProtoBuf.GameListNewMessage.Builder builderForValue) {
      gameListNewMessage_ = builderForValue.build();
      bitField0_ |= 0x00002000;
    }
    /**
     * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
     */
    private void mergeGameListNewMessage(de.pokerth.protocol.ProtoBuf.GameListNewMessage value) {
      if (gameListNewMessage_ != null &&
          gameListNewMessage_ != de.pokerth.protocol.ProtoBuf.GameListNewMessage.getDefaultInstance()) {
        gameListNewMessage_ =
          de.pokerth.protocol.ProtoBuf.GameListNewMessage.newBuilder(gameListNewMessage_).mergeFrom(value).buildPartial();
      } else {
        gameListNewMessage_ = value;
      }
      bitField0_ |= 0x00002000;
    }
    /**
     * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
     */
    private void clearGameListNewMessage() {  gameListNewMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00002000);
    }

    public static final int GAMELISTUPDATEMESSAGE_FIELD_NUMBER = 15;
    private de.pokerth.protocol.ProtoBuf.GameListUpdateMessage gameListUpdateMessage_;
    /**
     * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
     */
    public boolean hasGameListUpdateMessage() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameListUpdateMessage getGameListUpdateMessage() {
      return gameListUpdateMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameListUpdateMessage.getDefaultInstance() : gameListUpdateMessage_;
    }
    /**
     * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
     */
    private void setGameListUpdateMessage(de.pokerth.protocol.ProtoBuf.GameListUpdateMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameListUpdateMessage_ = value;
      bitField0_ |= 0x00004000;
      }
    /**
     * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
     */
    private void setGameListUpdateMessage(
        de.pokerth.protocol.ProtoBuf.GameListUpdateMessage.Builder builderForValue) {
      gameListUpdateMessage_ = builderForValue.build();
      bitField0_ |= 0x00004000;
    }
    /**
     * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
     */
    private void mergeGameListUpdateMessage(de.pokerth.protocol.ProtoBuf.GameListUpdateMessage value) {
      if (gameListUpdateMessage_ != null &&
          gameListUpdateMessage_ != de.pokerth.protocol.ProtoBuf.GameListUpdateMessage.getDefaultInstance()) {
        gameListUpdateMessage_ =
          de.pokerth.protocol.ProtoBuf.GameListUpdateMessage.newBuilder(gameListUpdateMessage_).mergeFrom(value).buildPartial();
      } else {
        gameListUpdateMessage_ = value;
      }
      bitField0_ |= 0x00004000;
    }
    /**
     * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
     */
    private void clearGameListUpdateMessage() {  gameListUpdateMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00004000);
    }

    public static final int GAMELISTPLAYERJOINEDMESSAGE_FIELD_NUMBER = 16;
    private de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage gameListPlayerJoinedMessage_;
    /**
     * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
     */
    public boolean hasGameListPlayerJoinedMessage() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage getGameListPlayerJoinedMessage() {
      return gameListPlayerJoinedMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage.getDefaultInstance() : gameListPlayerJoinedMessage_;
    }
    /**
     * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
     */
    private void setGameListPlayerJoinedMessage(de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameListPlayerJoinedMessage_ = value;
      bitField0_ |= 0x00008000;
      }
    /**
     * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
     */
    private void setGameListPlayerJoinedMessage(
        de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage.Builder builderForValue) {
      gameListPlayerJoinedMessage_ = builderForValue.build();
      bitField0_ |= 0x00008000;
    }
    /**
     * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
     */
    private void mergeGameListPlayerJoinedMessage(de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage value) {
      if (gameListPlayerJoinedMessage_ != null &&
          gameListPlayerJoinedMessage_ != de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage.getDefaultInstance()) {
        gameListPlayerJoinedMessage_ =
          de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage.newBuilder(gameListPlayerJoinedMessage_).mergeFrom(value).buildPartial();
      } else {
        gameListPlayerJoinedMessage_ = value;
      }
      bitField0_ |= 0x00008000;
    }
    /**
     * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
     */
    private void clearGameListPlayerJoinedMessage() {  gameListPlayerJoinedMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00008000);
    }

    public static final int GAMELISTPLAYERLEFTMESSAGE_FIELD_NUMBER = 17;
    private de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage gameListPlayerLeftMessage_;
    /**
     * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
     */
    public boolean hasGameListPlayerLeftMessage() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage getGameListPlayerLeftMessage() {
      return gameListPlayerLeftMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage.getDefaultInstance() : gameListPlayerLeftMessage_;
    }
    /**
     * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
     */
    private void setGameListPlayerLeftMessage(de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameListPlayerLeftMessage_ = value;
      bitField0_ |= 0x00010000;
      }
    /**
     * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
     */
    private void setGameListPlayerLeftMessage(
        de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage.Builder builderForValue) {
      gameListPlayerLeftMessage_ = builderForValue.build();
      bitField0_ |= 0x00010000;
    }
    /**
     * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
     */
    private void mergeGameListPlayerLeftMessage(de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage value) {
      if (gameListPlayerLeftMessage_ != null &&
          gameListPlayerLeftMessage_ != de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage.getDefaultInstance()) {
        gameListPlayerLeftMessage_ =
          de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage.newBuilder(gameListPlayerLeftMessage_).mergeFrom(value).buildPartial();
      } else {
        gameListPlayerLeftMessage_ = value;
      }
      bitField0_ |= 0x00010000;
    }
    /**
     * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
     */
    private void clearGameListPlayerLeftMessage() {  gameListPlayerLeftMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00010000);
    }

    public static final int GAMELISTADMINCHANGEDMESSAGE_FIELD_NUMBER = 18;
    private de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage gameListAdminChangedMessage_;
    /**
     * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
     */
    public boolean hasGameListAdminChangedMessage() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage getGameListAdminChangedMessage() {
      return gameListAdminChangedMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage.getDefaultInstance() : gameListAdminChangedMessage_;
    }
    /**
     * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
     */
    private void setGameListAdminChangedMessage(de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameListAdminChangedMessage_ = value;
      bitField0_ |= 0x00020000;
      }
    /**
     * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
     */
    private void setGameListAdminChangedMessage(
        de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage.Builder builderForValue) {
      gameListAdminChangedMessage_ = builderForValue.build();
      bitField0_ |= 0x00020000;
    }
    /**
     * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
     */
    private void mergeGameListAdminChangedMessage(de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage value) {
      if (gameListAdminChangedMessage_ != null &&
          gameListAdminChangedMessage_ != de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage.getDefaultInstance()) {
        gameListAdminChangedMessage_ =
          de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage.newBuilder(gameListAdminChangedMessage_).mergeFrom(value).buildPartial();
      } else {
        gameListAdminChangedMessage_ = value;
      }
      bitField0_ |= 0x00020000;
    }
    /**
     * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
     */
    private void clearGameListAdminChangedMessage() {  gameListAdminChangedMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00020000);
    }

    public static final int PLAYERINFOREQUESTMESSAGE_FIELD_NUMBER = 19;
    private de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage playerInfoRequestMessage_;
    /**
     * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
     */
    public boolean hasPlayerInfoRequestMessage() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage getPlayerInfoRequestMessage() {
      return playerInfoRequestMessage_ == null ? de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage.getDefaultInstance() : playerInfoRequestMessage_;
    }
    /**
     * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
     */
    private void setPlayerInfoRequestMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      playerInfoRequestMessage_ = value;
      bitField0_ |= 0x00040000;
      }
    /**
     * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
     */
    private void setPlayerInfoRequestMessage(
        de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage.Builder builderForValue) {
      playerInfoRequestMessage_ = builderForValue.build();
      bitField0_ |= 0x00040000;
    }
    /**
     * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
     */
    private void mergePlayerInfoRequestMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage value) {
      if (playerInfoRequestMessage_ != null &&
          playerInfoRequestMessage_ != de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage.getDefaultInstance()) {
        playerInfoRequestMessage_ =
          de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage.newBuilder(playerInfoRequestMessage_).mergeFrom(value).buildPartial();
      } else {
        playerInfoRequestMessage_ = value;
      }
      bitField0_ |= 0x00040000;
    }
    /**
     * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
     */
    private void clearPlayerInfoRequestMessage() {  playerInfoRequestMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00040000);
    }

    public static final int PLAYERINFOREPLYMESSAGE_FIELD_NUMBER = 20;
    private de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage playerInfoReplyMessage_;
    /**
     * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
     */
    public boolean hasPlayerInfoReplyMessage() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage getPlayerInfoReplyMessage() {
      return playerInfoReplyMessage_ == null ? de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.getDefaultInstance() : playerInfoReplyMessage_;
    }
    /**
     * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
     */
    private void setPlayerInfoReplyMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      playerInfoReplyMessage_ = value;
      bitField0_ |= 0x00080000;
      }
    /**
     * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
     */
    private void setPlayerInfoReplyMessage(
        de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.Builder builderForValue) {
      playerInfoReplyMessage_ = builderForValue.build();
      bitField0_ |= 0x00080000;
    }
    /**
     * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
     */
    private void mergePlayerInfoReplyMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage value) {
      if (playerInfoReplyMessage_ != null &&
          playerInfoReplyMessage_ != de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.getDefaultInstance()) {
        playerInfoReplyMessage_ =
          de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.newBuilder(playerInfoReplyMessage_).mergeFrom(value).buildPartial();
      } else {
        playerInfoReplyMessage_ = value;
      }
      bitField0_ |= 0x00080000;
    }
    /**
     * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
     */
    private void clearPlayerInfoReplyMessage() {  playerInfoReplyMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00080000);
    }

    public static final int SUBSCRIPTIONREQUESTMESSAGE_FIELD_NUMBER = 21;
    private de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage subscriptionRequestMessage_;
    /**
     * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
     */
    public boolean hasSubscriptionRequestMessage() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
     */
    public de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage getSubscriptionRequestMessage() {
      return subscriptionRequestMessage_ == null ? de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.getDefaultInstance() : subscriptionRequestMessage_;
    }
    /**
     * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
     */
    private void setSubscriptionRequestMessage(de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      subscriptionRequestMessage_ = value;
      bitField0_ |= 0x00100000;
      }
    /**
     * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
     */
    private void setSubscriptionRequestMessage(
        de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.Builder builderForValue) {
      subscriptionRequestMessage_ = builderForValue.build();
      bitField0_ |= 0x00100000;
    }
    /**
     * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
     */
    private void mergeSubscriptionRequestMessage(de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage value) {
      if (subscriptionRequestMessage_ != null &&
          subscriptionRequestMessage_ != de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.getDefaultInstance()) {
        subscriptionRequestMessage_ =
          de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.newBuilder(subscriptionRequestMessage_).mergeFrom(value).buildPartial();
      } else {
        subscriptionRequestMessage_ = value;
      }
      bitField0_ |= 0x00100000;
    }
    /**
     * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
     */
    private void clearSubscriptionRequestMessage() {  subscriptionRequestMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00100000);
    }

    public static final int JOINEXISTINGGAMEMESSAGE_FIELD_NUMBER = 22;
    private de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage joinExistingGameMessage_;
    /**
     * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
     */
    public boolean hasJoinExistingGameMessage() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
     */
    public de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage getJoinExistingGameMessage() {
      return joinExistingGameMessage_ == null ? de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage.getDefaultInstance() : joinExistingGameMessage_;
    }
    /**
     * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
     */
    private void setJoinExistingGameMessage(de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      joinExistingGameMessage_ = value;
      bitField0_ |= 0x00200000;
      }
    /**
     * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
     */
    private void setJoinExistingGameMessage(
        de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage.Builder builderForValue) {
      joinExistingGameMessage_ = builderForValue.build();
      bitField0_ |= 0x00200000;
    }
    /**
     * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
     */
    private void mergeJoinExistingGameMessage(de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage value) {
      if (joinExistingGameMessage_ != null &&
          joinExistingGameMessage_ != de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage.getDefaultInstance()) {
        joinExistingGameMessage_ =
          de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage.newBuilder(joinExistingGameMessage_).mergeFrom(value).buildPartial();
      } else {
        joinExistingGameMessage_ = value;
      }
      bitField0_ |= 0x00200000;
    }
    /**
     * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
     */
    private void clearJoinExistingGameMessage() {  joinExistingGameMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00200000);
    }

    public static final int JOINNEWGAMEMESSAGE_FIELD_NUMBER = 23;
    private de.pokerth.protocol.ProtoBuf.JoinNewGameMessage joinNewGameMessage_;
    /**
     * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
     */
    public boolean hasJoinNewGameMessage() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
     */
    public de.pokerth.protocol.ProtoBuf.JoinNewGameMessage getJoinNewGameMessage() {
      return joinNewGameMessage_ == null ? de.pokerth.protocol.ProtoBuf.JoinNewGameMessage.getDefaultInstance() : joinNewGameMessage_;
    }
    /**
     * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
     */
    private void setJoinNewGameMessage(de.pokerth.protocol.ProtoBuf.JoinNewGameMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      joinNewGameMessage_ = value;
      bitField0_ |= 0x00400000;
      }
    /**
     * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
     */
    private void setJoinNewGameMessage(
        de.pokerth.protocol.ProtoBuf.JoinNewGameMessage.Builder builderForValue) {
      joinNewGameMessage_ = builderForValue.build();
      bitField0_ |= 0x00400000;
    }
    /**
     * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
     */
    private void mergeJoinNewGameMessage(de.pokerth.protocol.ProtoBuf.JoinNewGameMessage value) {
      if (joinNewGameMessage_ != null &&
          joinNewGameMessage_ != de.pokerth.protocol.ProtoBuf.JoinNewGameMessage.getDefaultInstance()) {
        joinNewGameMessage_ =
          de.pokerth.protocol.ProtoBuf.JoinNewGameMessage.newBuilder(joinNewGameMessage_).mergeFrom(value).buildPartial();
      } else {
        joinNewGameMessage_ = value;
      }
      bitField0_ |= 0x00400000;
    }
    /**
     * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
     */
    private void clearJoinNewGameMessage() {  joinNewGameMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00400000);
    }

    public static final int REJOINEXISTINGGAMEMESSAGE_FIELD_NUMBER = 24;
    private de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage rejoinExistingGameMessage_;
    /**
     * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
     */
    public boolean hasRejoinExistingGameMessage() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
     */
    public de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage getRejoinExistingGameMessage() {
      return rejoinExistingGameMessage_ == null ? de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage.getDefaultInstance() : rejoinExistingGameMessage_;
    }
    /**
     * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
     */
    private void setRejoinExistingGameMessage(de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rejoinExistingGameMessage_ = value;
      bitField0_ |= 0x00800000;
      }
    /**
     * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
     */
    private void setRejoinExistingGameMessage(
        de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage.Builder builderForValue) {
      rejoinExistingGameMessage_ = builderForValue.build();
      bitField0_ |= 0x00800000;
    }
    /**
     * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
     */
    private void mergeRejoinExistingGameMessage(de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage value) {
      if (rejoinExistingGameMessage_ != null &&
          rejoinExistingGameMessage_ != de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage.getDefaultInstance()) {
        rejoinExistingGameMessage_ =
          de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage.newBuilder(rejoinExistingGameMessage_).mergeFrom(value).buildPartial();
      } else {
        rejoinExistingGameMessage_ = value;
      }
      bitField0_ |= 0x00800000;
    }
    /**
     * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
     */
    private void clearRejoinExistingGameMessage() {  rejoinExistingGameMessage_ = null;
      bitField0_ = (bitField0_ & ~0x00800000);
    }

    public static final int JOINGAMEACKMESSAGE_FIELD_NUMBER = 25;
    private de.pokerth.protocol.ProtoBuf.JoinGameAckMessage joinGameAckMessage_;
    /**
     * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
     */
    public boolean hasJoinGameAckMessage() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
     */
    public de.pokerth.protocol.ProtoBuf.JoinGameAckMessage getJoinGameAckMessage() {
      return joinGameAckMessage_ == null ? de.pokerth.protocol.ProtoBuf.JoinGameAckMessage.getDefaultInstance() : joinGameAckMessage_;
    }
    /**
     * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
     */
    private void setJoinGameAckMessage(de.pokerth.protocol.ProtoBuf.JoinGameAckMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      joinGameAckMessage_ = value;
      bitField0_ |= 0x01000000;
      }
    /**
     * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
     */
    private void setJoinGameAckMessage(
        de.pokerth.protocol.ProtoBuf.JoinGameAckMessage.Builder builderForValue) {
      joinGameAckMessage_ = builderForValue.build();
      bitField0_ |= 0x01000000;
    }
    /**
     * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
     */
    private void mergeJoinGameAckMessage(de.pokerth.protocol.ProtoBuf.JoinGameAckMessage value) {
      if (joinGameAckMessage_ != null &&
          joinGameAckMessage_ != de.pokerth.protocol.ProtoBuf.JoinGameAckMessage.getDefaultInstance()) {
        joinGameAckMessage_ =
          de.pokerth.protocol.ProtoBuf.JoinGameAckMessage.newBuilder(joinGameAckMessage_).mergeFrom(value).buildPartial();
      } else {
        joinGameAckMessage_ = value;
      }
      bitField0_ |= 0x01000000;
    }
    /**
     * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
     */
    private void clearJoinGameAckMessage() {  joinGameAckMessage_ = null;
      bitField0_ = (bitField0_ & ~0x01000000);
    }

    public static final int JOINGAMEFAILEDMESSAGE_FIELD_NUMBER = 26;
    private de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage joinGameFailedMessage_;
    /**
     * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
     */
    public boolean hasJoinGameFailedMessage() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
     */
    public de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage getJoinGameFailedMessage() {
      return joinGameFailedMessage_ == null ? de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.getDefaultInstance() : joinGameFailedMessage_;
    }
    /**
     * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
     */
    private void setJoinGameFailedMessage(de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      joinGameFailedMessage_ = value;
      bitField0_ |= 0x02000000;
      }
    /**
     * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
     */
    private void setJoinGameFailedMessage(
        de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.Builder builderForValue) {
      joinGameFailedMessage_ = builderForValue.build();
      bitField0_ |= 0x02000000;
    }
    /**
     * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
     */
    private void mergeJoinGameFailedMessage(de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage value) {
      if (joinGameFailedMessage_ != null &&
          joinGameFailedMessage_ != de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.getDefaultInstance()) {
        joinGameFailedMessage_ =
          de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.newBuilder(joinGameFailedMessage_).mergeFrom(value).buildPartial();
      } else {
        joinGameFailedMessage_ = value;
      }
      bitField0_ |= 0x02000000;
    }
    /**
     * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
     */
    private void clearJoinGameFailedMessage() {  joinGameFailedMessage_ = null;
      bitField0_ = (bitField0_ & ~0x02000000);
    }

    public static final int GAMEPLAYERJOINEDMESSAGE_FIELD_NUMBER = 27;
    private de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage gamePlayerJoinedMessage_;
    /**
     * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
     */
    public boolean hasGamePlayerJoinedMessage() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage getGamePlayerJoinedMessage() {
      return gamePlayerJoinedMessage_ == null ? de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage.getDefaultInstance() : gamePlayerJoinedMessage_;
    }
    /**
     * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
     */
    private void setGamePlayerJoinedMessage(de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gamePlayerJoinedMessage_ = value;
      bitField0_ |= 0x04000000;
      }
    /**
     * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
     */
    private void setGamePlayerJoinedMessage(
        de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage.Builder builderForValue) {
      gamePlayerJoinedMessage_ = builderForValue.build();
      bitField0_ |= 0x04000000;
    }
    /**
     * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
     */
    private void mergeGamePlayerJoinedMessage(de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage value) {
      if (gamePlayerJoinedMessage_ != null &&
          gamePlayerJoinedMessage_ != de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage.getDefaultInstance()) {
        gamePlayerJoinedMessage_ =
          de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage.newBuilder(gamePlayerJoinedMessage_).mergeFrom(value).buildPartial();
      } else {
        gamePlayerJoinedMessage_ = value;
      }
      bitField0_ |= 0x04000000;
    }
    /**
     * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
     */
    private void clearGamePlayerJoinedMessage() {  gamePlayerJoinedMessage_ = null;
      bitField0_ = (bitField0_ & ~0x04000000);
    }

    public static final int GAMEPLAYERLEFTMESSAGE_FIELD_NUMBER = 28;
    private de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage gamePlayerLeftMessage_;
    /**
     * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
     */
    public boolean hasGamePlayerLeftMessage() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage getGamePlayerLeftMessage() {
      return gamePlayerLeftMessage_ == null ? de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.getDefaultInstance() : gamePlayerLeftMessage_;
    }
    /**
     * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
     */
    private void setGamePlayerLeftMessage(de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gamePlayerLeftMessage_ = value;
      bitField0_ |= 0x08000000;
      }
    /**
     * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
     */
    private void setGamePlayerLeftMessage(
        de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.Builder builderForValue) {
      gamePlayerLeftMessage_ = builderForValue.build();
      bitField0_ |= 0x08000000;
    }
    /**
     * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
     */
    private void mergeGamePlayerLeftMessage(de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage value) {
      if (gamePlayerLeftMessage_ != null &&
          gamePlayerLeftMessage_ != de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.getDefaultInstance()) {
        gamePlayerLeftMessage_ =
          de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.newBuilder(gamePlayerLeftMessage_).mergeFrom(value).buildPartial();
      } else {
        gamePlayerLeftMessage_ = value;
      }
      bitField0_ |= 0x08000000;
    }
    /**
     * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
     */
    private void clearGamePlayerLeftMessage() {  gamePlayerLeftMessage_ = null;
      bitField0_ = (bitField0_ & ~0x08000000);
    }

    public static final int GAMEADMINCHANGEDMESSAGE_FIELD_NUMBER = 29;
    private de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage gameAdminChangedMessage_;
    /**
     * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
     */
    public boolean hasGameAdminChangedMessage() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage getGameAdminChangedMessage() {
      return gameAdminChangedMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage.getDefaultInstance() : gameAdminChangedMessage_;
    }
    /**
     * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
     */
    private void setGameAdminChangedMessage(de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameAdminChangedMessage_ = value;
      bitField0_ |= 0x10000000;
      }
    /**
     * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
     */
    private void setGameAdminChangedMessage(
        de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage.Builder builderForValue) {
      gameAdminChangedMessage_ = builderForValue.build();
      bitField0_ |= 0x10000000;
    }
    /**
     * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
     */
    private void mergeGameAdminChangedMessage(de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage value) {
      if (gameAdminChangedMessage_ != null &&
          gameAdminChangedMessage_ != de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage.getDefaultInstance()) {
        gameAdminChangedMessage_ =
          de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage.newBuilder(gameAdminChangedMessage_).mergeFrom(value).buildPartial();
      } else {
        gameAdminChangedMessage_ = value;
      }
      bitField0_ |= 0x10000000;
    }
    /**
     * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
     */
    private void clearGameAdminChangedMessage() {  gameAdminChangedMessage_ = null;
      bitField0_ = (bitField0_ & ~0x10000000);
    }

    public static final int REMOVEDFROMGAMEMESSAGE_FIELD_NUMBER = 30;
    private de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage removedFromGameMessage_;
    /**
     * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
     */
    public boolean hasRemovedFromGameMessage() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
     */
    public de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage getRemovedFromGameMessage() {
      return removedFromGameMessage_ == null ? de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.getDefaultInstance() : removedFromGameMessage_;
    }
    /**
     * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
     */
    private void setRemovedFromGameMessage(de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      removedFromGameMessage_ = value;
      bitField0_ |= 0x20000000;
      }
    /**
     * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
     */
    private void setRemovedFromGameMessage(
        de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.Builder builderForValue) {
      removedFromGameMessage_ = builderForValue.build();
      bitField0_ |= 0x20000000;
    }
    /**
     * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
     */
    private void mergeRemovedFromGameMessage(de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage value) {
      if (removedFromGameMessage_ != null &&
          removedFromGameMessage_ != de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.getDefaultInstance()) {
        removedFromGameMessage_ =
          de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.newBuilder(removedFromGameMessage_).mergeFrom(value).buildPartial();
      } else {
        removedFromGameMessage_ = value;
      }
      bitField0_ |= 0x20000000;
    }
    /**
     * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
     */
    private void clearRemovedFromGameMessage() {  removedFromGameMessage_ = null;
      bitField0_ = (bitField0_ & ~0x20000000);
    }

    public static final int KICKPLAYERREQUESTMESSAGE_FIELD_NUMBER = 31;
    private de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage kickPlayerRequestMessage_;
    /**
     * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
     */
    public boolean hasKickPlayerRequestMessage() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
     */
    public de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage getKickPlayerRequestMessage() {
      return kickPlayerRequestMessage_ == null ? de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage.getDefaultInstance() : kickPlayerRequestMessage_;
    }
    /**
     * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
     */
    private void setKickPlayerRequestMessage(de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      kickPlayerRequestMessage_ = value;
      bitField0_ |= 0x40000000;
      }
    /**
     * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
     */
    private void setKickPlayerRequestMessage(
        de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage.Builder builderForValue) {
      kickPlayerRequestMessage_ = builderForValue.build();
      bitField0_ |= 0x40000000;
    }
    /**
     * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
     */
    private void mergeKickPlayerRequestMessage(de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage value) {
      if (kickPlayerRequestMessage_ != null &&
          kickPlayerRequestMessage_ != de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage.getDefaultInstance()) {
        kickPlayerRequestMessage_ =
          de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage.newBuilder(kickPlayerRequestMessage_).mergeFrom(value).buildPartial();
      } else {
        kickPlayerRequestMessage_ = value;
      }
      bitField0_ |= 0x40000000;
    }
    /**
     * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
     */
    private void clearKickPlayerRequestMessage() {  kickPlayerRequestMessage_ = null;
      bitField0_ = (bitField0_ & ~0x40000000);
    }

    public static final int LEAVEGAMEREQUESTMESSAGE_FIELD_NUMBER = 32;
    private de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage leaveGameRequestMessage_;
    /**
     * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
     */
    public boolean hasLeaveGameRequestMessage() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
     */
    public de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage getLeaveGameRequestMessage() {
      return leaveGameRequestMessage_ == null ? de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage.getDefaultInstance() : leaveGameRequestMessage_;
    }
    /**
     * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
     */
    private void setLeaveGameRequestMessage(de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      leaveGameRequestMessage_ = value;
      bitField0_ |= 0x80000000;
      }
    /**
     * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
     */
    private void setLeaveGameRequestMessage(
        de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage.Builder builderForValue) {
      leaveGameRequestMessage_ = builderForValue.build();
      bitField0_ |= 0x80000000;
    }
    /**
     * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
     */
    private void mergeLeaveGameRequestMessage(de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage value) {
      if (leaveGameRequestMessage_ != null &&
          leaveGameRequestMessage_ != de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage.getDefaultInstance()) {
        leaveGameRequestMessage_ =
          de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage.newBuilder(leaveGameRequestMessage_).mergeFrom(value).buildPartial();
      } else {
        leaveGameRequestMessage_ = value;
      }
      bitField0_ |= 0x80000000;
    }
    /**
     * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
     */
    private void clearLeaveGameRequestMessage() {  leaveGameRequestMessage_ = null;
      bitField0_ = (bitField0_ & ~0x80000000);
    }

    public static final int INVITEPLAYERTOGAMEMESSAGE_FIELD_NUMBER = 33;
    private de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage invitePlayerToGameMessage_;
    /**
     * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
     */
    public boolean hasInvitePlayerToGameMessage() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
     */
    public de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage getInvitePlayerToGameMessage() {
      return invitePlayerToGameMessage_ == null ? de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage.getDefaultInstance() : invitePlayerToGameMessage_;
    }
    /**
     * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
     */
    private void setInvitePlayerToGameMessage(de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      invitePlayerToGameMessage_ = value;
      bitField1_ |= 0x00000001;
      }
    /**
     * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
     */
    private void setInvitePlayerToGameMessage(
        de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage.Builder builderForValue) {
      invitePlayerToGameMessage_ = builderForValue.build();
      bitField1_ |= 0x00000001;
    }
    /**
     * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
     */
    private void mergeInvitePlayerToGameMessage(de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage value) {
      if (invitePlayerToGameMessage_ != null &&
          invitePlayerToGameMessage_ != de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage.getDefaultInstance()) {
        invitePlayerToGameMessage_ =
          de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage.newBuilder(invitePlayerToGameMessage_).mergeFrom(value).buildPartial();
      } else {
        invitePlayerToGameMessage_ = value;
      }
      bitField1_ |= 0x00000001;
    }
    /**
     * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
     */
    private void clearInvitePlayerToGameMessage() {  invitePlayerToGameMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000001);
    }

    public static final int INVITENOTIFYMESSAGE_FIELD_NUMBER = 34;
    private de.pokerth.protocol.ProtoBuf.InviteNotifyMessage inviteNotifyMessage_;
    /**
     * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
     */
    public boolean hasInviteNotifyMessage() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
     */
    public de.pokerth.protocol.ProtoBuf.InviteNotifyMessage getInviteNotifyMessage() {
      return inviteNotifyMessage_ == null ? de.pokerth.protocol.ProtoBuf.InviteNotifyMessage.getDefaultInstance() : inviteNotifyMessage_;
    }
    /**
     * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
     */
    private void setInviteNotifyMessage(de.pokerth.protocol.ProtoBuf.InviteNotifyMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      inviteNotifyMessage_ = value;
      bitField1_ |= 0x00000002;
      }
    /**
     * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
     */
    private void setInviteNotifyMessage(
        de.pokerth.protocol.ProtoBuf.InviteNotifyMessage.Builder builderForValue) {
      inviteNotifyMessage_ = builderForValue.build();
      bitField1_ |= 0x00000002;
    }
    /**
     * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
     */
    private void mergeInviteNotifyMessage(de.pokerth.protocol.ProtoBuf.InviteNotifyMessage value) {
      if (inviteNotifyMessage_ != null &&
          inviteNotifyMessage_ != de.pokerth.protocol.ProtoBuf.InviteNotifyMessage.getDefaultInstance()) {
        inviteNotifyMessage_ =
          de.pokerth.protocol.ProtoBuf.InviteNotifyMessage.newBuilder(inviteNotifyMessage_).mergeFrom(value).buildPartial();
      } else {
        inviteNotifyMessage_ = value;
      }
      bitField1_ |= 0x00000002;
    }
    /**
     * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
     */
    private void clearInviteNotifyMessage() {  inviteNotifyMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000002);
    }

    public static final int REJECTGAMEINVITATIONMESSAGE_FIELD_NUMBER = 35;
    private de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage rejectGameInvitationMessage_;
    /**
     * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
     */
    public boolean hasRejectGameInvitationMessage() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
     */
    public de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage getRejectGameInvitationMessage() {
      return rejectGameInvitationMessage_ == null ? de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.getDefaultInstance() : rejectGameInvitationMessage_;
    }
    /**
     * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
     */
    private void setRejectGameInvitationMessage(de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rejectGameInvitationMessage_ = value;
      bitField1_ |= 0x00000004;
      }
    /**
     * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
     */
    private void setRejectGameInvitationMessage(
        de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.Builder builderForValue) {
      rejectGameInvitationMessage_ = builderForValue.build();
      bitField1_ |= 0x00000004;
    }
    /**
     * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
     */
    private void mergeRejectGameInvitationMessage(de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage value) {
      if (rejectGameInvitationMessage_ != null &&
          rejectGameInvitationMessage_ != de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.getDefaultInstance()) {
        rejectGameInvitationMessage_ =
          de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.newBuilder(rejectGameInvitationMessage_).mergeFrom(value).buildPartial();
      } else {
        rejectGameInvitationMessage_ = value;
      }
      bitField1_ |= 0x00000004;
    }
    /**
     * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
     */
    private void clearRejectGameInvitationMessage() {  rejectGameInvitationMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000004);
    }

    public static final int REJECTINVNOTIFYMESSAGE_FIELD_NUMBER = 36;
    private de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage rejectInvNotifyMessage_;
    /**
     * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
     */
    public boolean hasRejectInvNotifyMessage() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
     */
    public de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage getRejectInvNotifyMessage() {
      return rejectInvNotifyMessage_ == null ? de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage.getDefaultInstance() : rejectInvNotifyMessage_;
    }
    /**
     * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
     */
    private void setRejectInvNotifyMessage(de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rejectInvNotifyMessage_ = value;
      bitField1_ |= 0x00000008;
      }
    /**
     * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
     */
    private void setRejectInvNotifyMessage(
        de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage.Builder builderForValue) {
      rejectInvNotifyMessage_ = builderForValue.build();
      bitField1_ |= 0x00000008;
    }
    /**
     * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
     */
    private void mergeRejectInvNotifyMessage(de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage value) {
      if (rejectInvNotifyMessage_ != null &&
          rejectInvNotifyMessage_ != de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage.getDefaultInstance()) {
        rejectInvNotifyMessage_ =
          de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage.newBuilder(rejectInvNotifyMessage_).mergeFrom(value).buildPartial();
      } else {
        rejectInvNotifyMessage_ = value;
      }
      bitField1_ |= 0x00000008;
    }
    /**
     * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
     */
    private void clearRejectInvNotifyMessage() {  rejectInvNotifyMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000008);
    }

    public static final int STARTEVENTMESSAGE_FIELD_NUMBER = 37;
    private de.pokerth.protocol.ProtoBuf.StartEventMessage startEventMessage_;
    /**
     * <code>optional .StartEventMessage startEventMessage = 37;</code>
     */
    public boolean hasStartEventMessage() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .StartEventMessage startEventMessage = 37;</code>
     */
    public de.pokerth.protocol.ProtoBuf.StartEventMessage getStartEventMessage() {
      return startEventMessage_ == null ? de.pokerth.protocol.ProtoBuf.StartEventMessage.getDefaultInstance() : startEventMessage_;
    }
    /**
     * <code>optional .StartEventMessage startEventMessage = 37;</code>
     */
    private void setStartEventMessage(de.pokerth.protocol.ProtoBuf.StartEventMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      startEventMessage_ = value;
      bitField1_ |= 0x00000010;
      }
    /**
     * <code>optional .StartEventMessage startEventMessage = 37;</code>
     */
    private void setStartEventMessage(
        de.pokerth.protocol.ProtoBuf.StartEventMessage.Builder builderForValue) {
      startEventMessage_ = builderForValue.build();
      bitField1_ |= 0x00000010;
    }
    /**
     * <code>optional .StartEventMessage startEventMessage = 37;</code>
     */
    private void mergeStartEventMessage(de.pokerth.protocol.ProtoBuf.StartEventMessage value) {
      if (startEventMessage_ != null &&
          startEventMessage_ != de.pokerth.protocol.ProtoBuf.StartEventMessage.getDefaultInstance()) {
        startEventMessage_ =
          de.pokerth.protocol.ProtoBuf.StartEventMessage.newBuilder(startEventMessage_).mergeFrom(value).buildPartial();
      } else {
        startEventMessage_ = value;
      }
      bitField1_ |= 0x00000010;
    }
    /**
     * <code>optional .StartEventMessage startEventMessage = 37;</code>
     */
    private void clearStartEventMessage() {  startEventMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000010);
    }

    public static final int STARTEVENTACKMESSAGE_FIELD_NUMBER = 38;
    private de.pokerth.protocol.ProtoBuf.StartEventAckMessage startEventAckMessage_;
    /**
     * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
     */
    public boolean hasStartEventAckMessage() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
     */
    public de.pokerth.protocol.ProtoBuf.StartEventAckMessage getStartEventAckMessage() {
      return startEventAckMessage_ == null ? de.pokerth.protocol.ProtoBuf.StartEventAckMessage.getDefaultInstance() : startEventAckMessage_;
    }
    /**
     * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
     */
    private void setStartEventAckMessage(de.pokerth.protocol.ProtoBuf.StartEventAckMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      startEventAckMessage_ = value;
      bitField1_ |= 0x00000020;
      }
    /**
     * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
     */
    private void setStartEventAckMessage(
        de.pokerth.protocol.ProtoBuf.StartEventAckMessage.Builder builderForValue) {
      startEventAckMessage_ = builderForValue.build();
      bitField1_ |= 0x00000020;
    }
    /**
     * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
     */
    private void mergeStartEventAckMessage(de.pokerth.protocol.ProtoBuf.StartEventAckMessage value) {
      if (startEventAckMessage_ != null &&
          startEventAckMessage_ != de.pokerth.protocol.ProtoBuf.StartEventAckMessage.getDefaultInstance()) {
        startEventAckMessage_ =
          de.pokerth.protocol.ProtoBuf.StartEventAckMessage.newBuilder(startEventAckMessage_).mergeFrom(value).buildPartial();
      } else {
        startEventAckMessage_ = value;
      }
      bitField1_ |= 0x00000020;
    }
    /**
     * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
     */
    private void clearStartEventAckMessage() {  startEventAckMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000020);
    }

    public static final int GAMESTARTINITIALMESSAGE_FIELD_NUMBER = 39;
    private de.pokerth.protocol.ProtoBuf.GameStartInitialMessage gameStartInitialMessage_;
    /**
     * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
     */
    public boolean hasGameStartInitialMessage() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameStartInitialMessage getGameStartInitialMessage() {
      return gameStartInitialMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameStartInitialMessage.getDefaultInstance() : gameStartInitialMessage_;
    }
    /**
     * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
     */
    private void setGameStartInitialMessage(de.pokerth.protocol.ProtoBuf.GameStartInitialMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameStartInitialMessage_ = value;
      bitField1_ |= 0x00000040;
      }
    /**
     * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
     */
    private void setGameStartInitialMessage(
        de.pokerth.protocol.ProtoBuf.GameStartInitialMessage.Builder builderForValue) {
      gameStartInitialMessage_ = builderForValue.build();
      bitField1_ |= 0x00000040;
    }
    /**
     * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
     */
    private void mergeGameStartInitialMessage(de.pokerth.protocol.ProtoBuf.GameStartInitialMessage value) {
      if (gameStartInitialMessage_ != null &&
          gameStartInitialMessage_ != de.pokerth.protocol.ProtoBuf.GameStartInitialMessage.getDefaultInstance()) {
        gameStartInitialMessage_ =
          de.pokerth.protocol.ProtoBuf.GameStartInitialMessage.newBuilder(gameStartInitialMessage_).mergeFrom(value).buildPartial();
      } else {
        gameStartInitialMessage_ = value;
      }
      bitField1_ |= 0x00000040;
    }
    /**
     * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
     */
    private void clearGameStartInitialMessage() {  gameStartInitialMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000040);
    }

    public static final int GAMESTARTREJOINMESSAGE_FIELD_NUMBER = 40;
    private de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage gameStartRejoinMessage_;
    /**
     * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
     */
    public boolean hasGameStartRejoinMessage() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage getGameStartRejoinMessage() {
      return gameStartRejoinMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.getDefaultInstance() : gameStartRejoinMessage_;
    }
    /**
     * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
     */
    private void setGameStartRejoinMessage(de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameStartRejoinMessage_ = value;
      bitField1_ |= 0x00000080;
      }
    /**
     * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
     */
    private void setGameStartRejoinMessage(
        de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.Builder builderForValue) {
      gameStartRejoinMessage_ = builderForValue.build();
      bitField1_ |= 0x00000080;
    }
    /**
     * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
     */
    private void mergeGameStartRejoinMessage(de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage value) {
      if (gameStartRejoinMessage_ != null &&
          gameStartRejoinMessage_ != de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.getDefaultInstance()) {
        gameStartRejoinMessage_ =
          de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.newBuilder(gameStartRejoinMessage_).mergeFrom(value).buildPartial();
      } else {
        gameStartRejoinMessage_ = value;
      }
      bitField1_ |= 0x00000080;
    }
    /**
     * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
     */
    private void clearGameStartRejoinMessage() {  gameStartRejoinMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000080);
    }

    public static final int HANDSTARTMESSAGE_FIELD_NUMBER = 41;
    private de.pokerth.protocol.ProtoBuf.HandStartMessage handStartMessage_;
    /**
     * <code>optional .HandStartMessage handStartMessage = 41;</code>
     */
    public boolean hasHandStartMessage() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .HandStartMessage handStartMessage = 41;</code>
     */
    public de.pokerth.protocol.ProtoBuf.HandStartMessage getHandStartMessage() {
      return handStartMessage_ == null ? de.pokerth.protocol.ProtoBuf.HandStartMessage.getDefaultInstance() : handStartMessage_;
    }
    /**
     * <code>optional .HandStartMessage handStartMessage = 41;</code>
     */
    private void setHandStartMessage(de.pokerth.protocol.ProtoBuf.HandStartMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      handStartMessage_ = value;
      bitField1_ |= 0x00000100;
      }
    /**
     * <code>optional .HandStartMessage handStartMessage = 41;</code>
     */
    private void setHandStartMessage(
        de.pokerth.protocol.ProtoBuf.HandStartMessage.Builder builderForValue) {
      handStartMessage_ = builderForValue.build();
      bitField1_ |= 0x00000100;
    }
    /**
     * <code>optional .HandStartMessage handStartMessage = 41;</code>
     */
    private void mergeHandStartMessage(de.pokerth.protocol.ProtoBuf.HandStartMessage value) {
      if (handStartMessage_ != null &&
          handStartMessage_ != de.pokerth.protocol.ProtoBuf.HandStartMessage.getDefaultInstance()) {
        handStartMessage_ =
          de.pokerth.protocol.ProtoBuf.HandStartMessage.newBuilder(handStartMessage_).mergeFrom(value).buildPartial();
      } else {
        handStartMessage_ = value;
      }
      bitField1_ |= 0x00000100;
    }
    /**
     * <code>optional .HandStartMessage handStartMessage = 41;</code>
     */
    private void clearHandStartMessage() {  handStartMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000100);
    }

    public static final int PLAYERSTURNMESSAGE_FIELD_NUMBER = 42;
    private de.pokerth.protocol.ProtoBuf.PlayersTurnMessage playersTurnMessage_;
    /**
     * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
     */
    public boolean hasPlayersTurnMessage() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PlayersTurnMessage getPlayersTurnMessage() {
      return playersTurnMessage_ == null ? de.pokerth.protocol.ProtoBuf.PlayersTurnMessage.getDefaultInstance() : playersTurnMessage_;
    }
    /**
     * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
     */
    private void setPlayersTurnMessage(de.pokerth.protocol.ProtoBuf.PlayersTurnMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      playersTurnMessage_ = value;
      bitField1_ |= 0x00000200;
      }
    /**
     * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
     */
    private void setPlayersTurnMessage(
        de.pokerth.protocol.ProtoBuf.PlayersTurnMessage.Builder builderForValue) {
      playersTurnMessage_ = builderForValue.build();
      bitField1_ |= 0x00000200;
    }
    /**
     * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
     */
    private void mergePlayersTurnMessage(de.pokerth.protocol.ProtoBuf.PlayersTurnMessage value) {
      if (playersTurnMessage_ != null &&
          playersTurnMessage_ != de.pokerth.protocol.ProtoBuf.PlayersTurnMessage.getDefaultInstance()) {
        playersTurnMessage_ =
          de.pokerth.protocol.ProtoBuf.PlayersTurnMessage.newBuilder(playersTurnMessage_).mergeFrom(value).buildPartial();
      } else {
        playersTurnMessage_ = value;
      }
      bitField1_ |= 0x00000200;
    }
    /**
     * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
     */
    private void clearPlayersTurnMessage() {  playersTurnMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000200);
    }

    public static final int MYACTIONREQUESTMESSAGE_FIELD_NUMBER = 43;
    private de.pokerth.protocol.ProtoBuf.MyActionRequestMessage myActionRequestMessage_;
    /**
     * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
     */
    public boolean hasMyActionRequestMessage() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
     */
    public de.pokerth.protocol.ProtoBuf.MyActionRequestMessage getMyActionRequestMessage() {
      return myActionRequestMessage_ == null ? de.pokerth.protocol.ProtoBuf.MyActionRequestMessage.getDefaultInstance() : myActionRequestMessage_;
    }
    /**
     * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
     */
    private void setMyActionRequestMessage(de.pokerth.protocol.ProtoBuf.MyActionRequestMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      myActionRequestMessage_ = value;
      bitField1_ |= 0x00000400;
      }
    /**
     * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
     */
    private void setMyActionRequestMessage(
        de.pokerth.protocol.ProtoBuf.MyActionRequestMessage.Builder builderForValue) {
      myActionRequestMessage_ = builderForValue.build();
      bitField1_ |= 0x00000400;
    }
    /**
     * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
     */
    private void mergeMyActionRequestMessage(de.pokerth.protocol.ProtoBuf.MyActionRequestMessage value) {
      if (myActionRequestMessage_ != null &&
          myActionRequestMessage_ != de.pokerth.protocol.ProtoBuf.MyActionRequestMessage.getDefaultInstance()) {
        myActionRequestMessage_ =
          de.pokerth.protocol.ProtoBuf.MyActionRequestMessage.newBuilder(myActionRequestMessage_).mergeFrom(value).buildPartial();
      } else {
        myActionRequestMessage_ = value;
      }
      bitField1_ |= 0x00000400;
    }
    /**
     * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
     */
    private void clearMyActionRequestMessage() {  myActionRequestMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000400);
    }

    public static final int YOURACTIONREJECTEDMESSAGE_FIELD_NUMBER = 44;
    private de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage yourActionRejectedMessage_;
    /**
     * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
     */
    public boolean hasYourActionRejectedMessage() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
     */
    public de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage getYourActionRejectedMessage() {
      return yourActionRejectedMessage_ == null ? de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.getDefaultInstance() : yourActionRejectedMessage_;
    }
    /**
     * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
     */
    private void setYourActionRejectedMessage(de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      yourActionRejectedMessage_ = value;
      bitField1_ |= 0x00000800;
      }
    /**
     * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
     */
    private void setYourActionRejectedMessage(
        de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.Builder builderForValue) {
      yourActionRejectedMessage_ = builderForValue.build();
      bitField1_ |= 0x00000800;
    }
    /**
     * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
     */
    private void mergeYourActionRejectedMessage(de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage value) {
      if (yourActionRejectedMessage_ != null &&
          yourActionRejectedMessage_ != de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.getDefaultInstance()) {
        yourActionRejectedMessage_ =
          de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.newBuilder(yourActionRejectedMessage_).mergeFrom(value).buildPartial();
      } else {
        yourActionRejectedMessage_ = value;
      }
      bitField1_ |= 0x00000800;
    }
    /**
     * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
     */
    private void clearYourActionRejectedMessage() {  yourActionRejectedMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00000800);
    }

    public static final int PLAYERSACTIONDONEMESSAGE_FIELD_NUMBER = 45;
    private de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage playersActionDoneMessage_;
    /**
     * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
     */
    public boolean hasPlayersActionDoneMessage() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage getPlayersActionDoneMessage() {
      return playersActionDoneMessage_ == null ? de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage.getDefaultInstance() : playersActionDoneMessage_;
    }
    /**
     * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
     */
    private void setPlayersActionDoneMessage(de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      playersActionDoneMessage_ = value;
      bitField1_ |= 0x00001000;
      }
    /**
     * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
     */
    private void setPlayersActionDoneMessage(
        de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage.Builder builderForValue) {
      playersActionDoneMessage_ = builderForValue.build();
      bitField1_ |= 0x00001000;
    }
    /**
     * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
     */
    private void mergePlayersActionDoneMessage(de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage value) {
      if (playersActionDoneMessage_ != null &&
          playersActionDoneMessage_ != de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage.getDefaultInstance()) {
        playersActionDoneMessage_ =
          de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage.newBuilder(playersActionDoneMessage_).mergeFrom(value).buildPartial();
      } else {
        playersActionDoneMessage_ = value;
      }
      bitField1_ |= 0x00001000;
    }
    /**
     * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
     */
    private void clearPlayersActionDoneMessage() {  playersActionDoneMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00001000);
    }

    public static final int DEALFLOPCARDSMESSAGE_FIELD_NUMBER = 46;
    private de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage dealFlopCardsMessage_;
    /**
     * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
     */
    public boolean hasDealFlopCardsMessage() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
     */
    public de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage getDealFlopCardsMessage() {
      return dealFlopCardsMessage_ == null ? de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage.getDefaultInstance() : dealFlopCardsMessage_;
    }
    /**
     * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
     */
    private void setDealFlopCardsMessage(de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      dealFlopCardsMessage_ = value;
      bitField1_ |= 0x00002000;
      }
    /**
     * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
     */
    private void setDealFlopCardsMessage(
        de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage.Builder builderForValue) {
      dealFlopCardsMessage_ = builderForValue.build();
      bitField1_ |= 0x00002000;
    }
    /**
     * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
     */
    private void mergeDealFlopCardsMessage(de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage value) {
      if (dealFlopCardsMessage_ != null &&
          dealFlopCardsMessage_ != de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage.getDefaultInstance()) {
        dealFlopCardsMessage_ =
          de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage.newBuilder(dealFlopCardsMessage_).mergeFrom(value).buildPartial();
      } else {
        dealFlopCardsMessage_ = value;
      }
      bitField1_ |= 0x00002000;
    }
    /**
     * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
     */
    private void clearDealFlopCardsMessage() {  dealFlopCardsMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00002000);
    }

    public static final int DEALTURNCARDMESSAGE_FIELD_NUMBER = 47;
    private de.pokerth.protocol.ProtoBuf.DealTurnCardMessage dealTurnCardMessage_;
    /**
     * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
     */
    public boolean hasDealTurnCardMessage() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
     */
    public de.pokerth.protocol.ProtoBuf.DealTurnCardMessage getDealTurnCardMessage() {
      return dealTurnCardMessage_ == null ? de.pokerth.protocol.ProtoBuf.DealTurnCardMessage.getDefaultInstance() : dealTurnCardMessage_;
    }
    /**
     * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
     */
    private void setDealTurnCardMessage(de.pokerth.protocol.ProtoBuf.DealTurnCardMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      dealTurnCardMessage_ = value;
      bitField1_ |= 0x00004000;
      }
    /**
     * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
     */
    private void setDealTurnCardMessage(
        de.pokerth.protocol.ProtoBuf.DealTurnCardMessage.Builder builderForValue) {
      dealTurnCardMessage_ = builderForValue.build();
      bitField1_ |= 0x00004000;
    }
    /**
     * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
     */
    private void mergeDealTurnCardMessage(de.pokerth.protocol.ProtoBuf.DealTurnCardMessage value) {
      if (dealTurnCardMessage_ != null &&
          dealTurnCardMessage_ != de.pokerth.protocol.ProtoBuf.DealTurnCardMessage.getDefaultInstance()) {
        dealTurnCardMessage_ =
          de.pokerth.protocol.ProtoBuf.DealTurnCardMessage.newBuilder(dealTurnCardMessage_).mergeFrom(value).buildPartial();
      } else {
        dealTurnCardMessage_ = value;
      }
      bitField1_ |= 0x00004000;
    }
    /**
     * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
     */
    private void clearDealTurnCardMessage() {  dealTurnCardMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00004000);
    }

    public static final int DEALRIVERCARDMESSAGE_FIELD_NUMBER = 48;
    private de.pokerth.protocol.ProtoBuf.DealRiverCardMessage dealRiverCardMessage_;
    /**
     * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
     */
    public boolean hasDealRiverCardMessage() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
     */
    public de.pokerth.protocol.ProtoBuf.DealRiverCardMessage getDealRiverCardMessage() {
      return dealRiverCardMessage_ == null ? de.pokerth.protocol.ProtoBuf.DealRiverCardMessage.getDefaultInstance() : dealRiverCardMessage_;
    }
    /**
     * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
     */
    private void setDealRiverCardMessage(de.pokerth.protocol.ProtoBuf.DealRiverCardMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      dealRiverCardMessage_ = value;
      bitField1_ |= 0x00008000;
      }
    /**
     * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
     */
    private void setDealRiverCardMessage(
        de.pokerth.protocol.ProtoBuf.DealRiverCardMessage.Builder builderForValue) {
      dealRiverCardMessage_ = builderForValue.build();
      bitField1_ |= 0x00008000;
    }
    /**
     * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
     */
    private void mergeDealRiverCardMessage(de.pokerth.protocol.ProtoBuf.DealRiverCardMessage value) {
      if (dealRiverCardMessage_ != null &&
          dealRiverCardMessage_ != de.pokerth.protocol.ProtoBuf.DealRiverCardMessage.getDefaultInstance()) {
        dealRiverCardMessage_ =
          de.pokerth.protocol.ProtoBuf.DealRiverCardMessage.newBuilder(dealRiverCardMessage_).mergeFrom(value).buildPartial();
      } else {
        dealRiverCardMessage_ = value;
      }
      bitField1_ |= 0x00008000;
    }
    /**
     * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
     */
    private void clearDealRiverCardMessage() {  dealRiverCardMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00008000);
    }

    public static final int ALLINSHOWCARDSMESSAGE_FIELD_NUMBER = 49;
    private de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage allInShowCardsMessage_;
    /**
     * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
     */
    public boolean hasAllInShowCardsMessage() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage getAllInShowCardsMessage() {
      return allInShowCardsMessage_ == null ? de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.getDefaultInstance() : allInShowCardsMessage_;
    }
    /**
     * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
     */
    private void setAllInShowCardsMessage(de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      allInShowCardsMessage_ = value;
      bitField1_ |= 0x00010000;
      }
    /**
     * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
     */
    private void setAllInShowCardsMessage(
        de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.Builder builderForValue) {
      allInShowCardsMessage_ = builderForValue.build();
      bitField1_ |= 0x00010000;
    }
    /**
     * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
     */
    private void mergeAllInShowCardsMessage(de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage value) {
      if (allInShowCardsMessage_ != null &&
          allInShowCardsMessage_ != de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.getDefaultInstance()) {
        allInShowCardsMessage_ =
          de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.newBuilder(allInShowCardsMessage_).mergeFrom(value).buildPartial();
      } else {
        allInShowCardsMessage_ = value;
      }
      bitField1_ |= 0x00010000;
    }
    /**
     * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
     */
    private void clearAllInShowCardsMessage() {  allInShowCardsMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00010000);
    }

    public static final int ENDOFHANDSHOWCARDSMESSAGE_FIELD_NUMBER = 50;
    private de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage endOfHandShowCardsMessage_;
    /**
     * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
     */
    public boolean hasEndOfHandShowCardsMessage() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
     */
    public de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage getEndOfHandShowCardsMessage() {
      return endOfHandShowCardsMessage_ == null ? de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage.getDefaultInstance() : endOfHandShowCardsMessage_;
    }
    /**
     * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
     */
    private void setEndOfHandShowCardsMessage(de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      endOfHandShowCardsMessage_ = value;
      bitField1_ |= 0x00020000;
      }
    /**
     * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
     */
    private void setEndOfHandShowCardsMessage(
        de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage.Builder builderForValue) {
      endOfHandShowCardsMessage_ = builderForValue.build();
      bitField1_ |= 0x00020000;
    }
    /**
     * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
     */
    private void mergeEndOfHandShowCardsMessage(de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage value) {
      if (endOfHandShowCardsMessage_ != null &&
          endOfHandShowCardsMessage_ != de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage.getDefaultInstance()) {
        endOfHandShowCardsMessage_ =
          de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage.newBuilder(endOfHandShowCardsMessage_).mergeFrom(value).buildPartial();
      } else {
        endOfHandShowCardsMessage_ = value;
      }
      bitField1_ |= 0x00020000;
    }
    /**
     * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
     */
    private void clearEndOfHandShowCardsMessage() {  endOfHandShowCardsMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00020000);
    }

    public static final int ENDOFHANDHIDECARDSMESSAGE_FIELD_NUMBER = 51;
    private de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage endOfHandHideCardsMessage_;
    /**
     * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
     */
    public boolean hasEndOfHandHideCardsMessage() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
     */
    public de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage getEndOfHandHideCardsMessage() {
      return endOfHandHideCardsMessage_ == null ? de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage.getDefaultInstance() : endOfHandHideCardsMessage_;
    }
    /**
     * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
     */
    private void setEndOfHandHideCardsMessage(de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      endOfHandHideCardsMessage_ = value;
      bitField1_ |= 0x00040000;
      }
    /**
     * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
     */
    private void setEndOfHandHideCardsMessage(
        de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage.Builder builderForValue) {
      endOfHandHideCardsMessage_ = builderForValue.build();
      bitField1_ |= 0x00040000;
    }
    /**
     * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
     */
    private void mergeEndOfHandHideCardsMessage(de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage value) {
      if (endOfHandHideCardsMessage_ != null &&
          endOfHandHideCardsMessage_ != de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage.getDefaultInstance()) {
        endOfHandHideCardsMessage_ =
          de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage.newBuilder(endOfHandHideCardsMessage_).mergeFrom(value).buildPartial();
      } else {
        endOfHandHideCardsMessage_ = value;
      }
      bitField1_ |= 0x00040000;
    }
    /**
     * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
     */
    private void clearEndOfHandHideCardsMessage() {  endOfHandHideCardsMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00040000);
    }

    public static final int SHOWMYCARDSREQUESTMESSAGE_FIELD_NUMBER = 52;
    private de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage showMyCardsRequestMessage_;
    /**
     * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
     */
    public boolean hasShowMyCardsRequestMessage() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage getShowMyCardsRequestMessage() {
      return showMyCardsRequestMessage_ == null ? de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage.getDefaultInstance() : showMyCardsRequestMessage_;
    }
    /**
     * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
     */
    private void setShowMyCardsRequestMessage(de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      showMyCardsRequestMessage_ = value;
      bitField1_ |= 0x00080000;
      }
    /**
     * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
     */
    private void setShowMyCardsRequestMessage(
        de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage.Builder builderForValue) {
      showMyCardsRequestMessage_ = builderForValue.build();
      bitField1_ |= 0x00080000;
    }
    /**
     * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
     */
    private void mergeShowMyCardsRequestMessage(de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage value) {
      if (showMyCardsRequestMessage_ != null &&
          showMyCardsRequestMessage_ != de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage.getDefaultInstance()) {
        showMyCardsRequestMessage_ =
          de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage.newBuilder(showMyCardsRequestMessage_).mergeFrom(value).buildPartial();
      } else {
        showMyCardsRequestMessage_ = value;
      }
      bitField1_ |= 0x00080000;
    }
    /**
     * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
     */
    private void clearShowMyCardsRequestMessage() {  showMyCardsRequestMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00080000);
    }

    public static final int AFTERHANDSHOWCARDSMESSAGE_FIELD_NUMBER = 53;
    private de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage afterHandShowCardsMessage_;
    /**
     * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
     */
    public boolean hasAfterHandShowCardsMessage() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage getAfterHandShowCardsMessage() {
      return afterHandShowCardsMessage_ == null ? de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage.getDefaultInstance() : afterHandShowCardsMessage_;
    }
    /**
     * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
     */
    private void setAfterHandShowCardsMessage(de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      afterHandShowCardsMessage_ = value;
      bitField1_ |= 0x00100000;
      }
    /**
     * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
     */
    private void setAfterHandShowCardsMessage(
        de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage.Builder builderForValue) {
      afterHandShowCardsMessage_ = builderForValue.build();
      bitField1_ |= 0x00100000;
    }
    /**
     * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
     */
    private void mergeAfterHandShowCardsMessage(de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage value) {
      if (afterHandShowCardsMessage_ != null &&
          afterHandShowCardsMessage_ != de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage.getDefaultInstance()) {
        afterHandShowCardsMessage_ =
          de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage.newBuilder(afterHandShowCardsMessage_).mergeFrom(value).buildPartial();
      } else {
        afterHandShowCardsMessage_ = value;
      }
      bitField1_ |= 0x00100000;
    }
    /**
     * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
     */
    private void clearAfterHandShowCardsMessage() {  afterHandShowCardsMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00100000);
    }

    public static final int ENDOFGAMEMESSAGE_FIELD_NUMBER = 54;
    private de.pokerth.protocol.ProtoBuf.EndOfGameMessage endOfGameMessage_;
    /**
     * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
     */
    public boolean hasEndOfGameMessage() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
     */
    public de.pokerth.protocol.ProtoBuf.EndOfGameMessage getEndOfGameMessage() {
      return endOfGameMessage_ == null ? de.pokerth.protocol.ProtoBuf.EndOfGameMessage.getDefaultInstance() : endOfGameMessage_;
    }
    /**
     * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
     */
    private void setEndOfGameMessage(de.pokerth.protocol.ProtoBuf.EndOfGameMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      endOfGameMessage_ = value;
      bitField1_ |= 0x00200000;
      }
    /**
     * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
     */
    private void setEndOfGameMessage(
        de.pokerth.protocol.ProtoBuf.EndOfGameMessage.Builder builderForValue) {
      endOfGameMessage_ = builderForValue.build();
      bitField1_ |= 0x00200000;
    }
    /**
     * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
     */
    private void mergeEndOfGameMessage(de.pokerth.protocol.ProtoBuf.EndOfGameMessage value) {
      if (endOfGameMessage_ != null &&
          endOfGameMessage_ != de.pokerth.protocol.ProtoBuf.EndOfGameMessage.getDefaultInstance()) {
        endOfGameMessage_ =
          de.pokerth.protocol.ProtoBuf.EndOfGameMessage.newBuilder(endOfGameMessage_).mergeFrom(value).buildPartial();
      } else {
        endOfGameMessage_ = value;
      }
      bitField1_ |= 0x00200000;
    }
    /**
     * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
     */
    private void clearEndOfGameMessage() {  endOfGameMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00200000);
    }

    public static final int PLAYERIDCHANGEDMESSAGE_FIELD_NUMBER = 55;
    private de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage playerIdChangedMessage_;
    /**
     * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
     */
    public boolean hasPlayerIdChangedMessage() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
     */
    public de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage getPlayerIdChangedMessage() {
      return playerIdChangedMessage_ == null ? de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage.getDefaultInstance() : playerIdChangedMessage_;
    }
    /**
     * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
     */
    private void setPlayerIdChangedMessage(de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      playerIdChangedMessage_ = value;
      bitField1_ |= 0x00400000;
      }
    /**
     * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
     */
    private void setPlayerIdChangedMessage(
        de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage.Builder builderForValue) {
      playerIdChangedMessage_ = builderForValue.build();
      bitField1_ |= 0x00400000;
    }
    /**
     * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
     */
    private void mergePlayerIdChangedMessage(de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage value) {
      if (playerIdChangedMessage_ != null &&
          playerIdChangedMessage_ != de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage.getDefaultInstance()) {
        playerIdChangedMessage_ =
          de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage.newBuilder(playerIdChangedMessage_).mergeFrom(value).buildPartial();
      } else {
        playerIdChangedMessage_ = value;
      }
      bitField1_ |= 0x00400000;
    }
    /**
     * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
     */
    private void clearPlayerIdChangedMessage() {  playerIdChangedMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00400000);
    }

    public static final int ASKKICKPLAYERMESSAGE_FIELD_NUMBER = 56;
    private de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage askKickPlayerMessage_;
    /**
     * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
     */
    public boolean hasAskKickPlayerMessage() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage getAskKickPlayerMessage() {
      return askKickPlayerMessage_ == null ? de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage.getDefaultInstance() : askKickPlayerMessage_;
    }
    /**
     * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
     */
    private void setAskKickPlayerMessage(de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      askKickPlayerMessage_ = value;
      bitField1_ |= 0x00800000;
      }
    /**
     * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
     */
    private void setAskKickPlayerMessage(
        de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage.Builder builderForValue) {
      askKickPlayerMessage_ = builderForValue.build();
      bitField1_ |= 0x00800000;
    }
    /**
     * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
     */
    private void mergeAskKickPlayerMessage(de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage value) {
      if (askKickPlayerMessage_ != null &&
          askKickPlayerMessage_ != de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage.getDefaultInstance()) {
        askKickPlayerMessage_ =
          de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage.newBuilder(askKickPlayerMessage_).mergeFrom(value).buildPartial();
      } else {
        askKickPlayerMessage_ = value;
      }
      bitField1_ |= 0x00800000;
    }
    /**
     * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
     */
    private void clearAskKickPlayerMessage() {  askKickPlayerMessage_ = null;
      bitField1_ = (bitField1_ & ~0x00800000);
    }

    public static final int ASKKICKDENIEDMESSAGE_FIELD_NUMBER = 57;
    private de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage askKickDeniedMessage_;
    /**
     * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
     */
    public boolean hasAskKickDeniedMessage() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage getAskKickDeniedMessage() {
      return askKickDeniedMessage_ == null ? de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.getDefaultInstance() : askKickDeniedMessage_;
    }
    /**
     * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
     */
    private void setAskKickDeniedMessage(de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      askKickDeniedMessage_ = value;
      bitField1_ |= 0x01000000;
      }
    /**
     * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
     */
    private void setAskKickDeniedMessage(
        de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.Builder builderForValue) {
      askKickDeniedMessage_ = builderForValue.build();
      bitField1_ |= 0x01000000;
    }
    /**
     * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
     */
    private void mergeAskKickDeniedMessage(de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage value) {
      if (askKickDeniedMessage_ != null &&
          askKickDeniedMessage_ != de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.getDefaultInstance()) {
        askKickDeniedMessage_ =
          de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.newBuilder(askKickDeniedMessage_).mergeFrom(value).buildPartial();
      } else {
        askKickDeniedMessage_ = value;
      }
      bitField1_ |= 0x01000000;
    }
    /**
     * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
     */
    private void clearAskKickDeniedMessage() {  askKickDeniedMessage_ = null;
      bitField1_ = (bitField1_ & ~0x01000000);
    }

    public static final int STARTKICKPETITIONMESSAGE_FIELD_NUMBER = 58;
    private de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage startKickPetitionMessage_;
    /**
     * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
     */
    public boolean hasStartKickPetitionMessage() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
     */
    public de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage getStartKickPetitionMessage() {
      return startKickPetitionMessage_ == null ? de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage.getDefaultInstance() : startKickPetitionMessage_;
    }
    /**
     * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
     */
    private void setStartKickPetitionMessage(de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      startKickPetitionMessage_ = value;
      bitField1_ |= 0x02000000;
      }
    /**
     * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
     */
    private void setStartKickPetitionMessage(
        de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage.Builder builderForValue) {
      startKickPetitionMessage_ = builderForValue.build();
      bitField1_ |= 0x02000000;
    }
    /**
     * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
     */
    private void mergeStartKickPetitionMessage(de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage value) {
      if (startKickPetitionMessage_ != null &&
          startKickPetitionMessage_ != de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage.getDefaultInstance()) {
        startKickPetitionMessage_ =
          de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage.newBuilder(startKickPetitionMessage_).mergeFrom(value).buildPartial();
      } else {
        startKickPetitionMessage_ = value;
      }
      bitField1_ |= 0x02000000;
    }
    /**
     * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
     */
    private void clearStartKickPetitionMessage() {  startKickPetitionMessage_ = null;
      bitField1_ = (bitField1_ & ~0x02000000);
    }

    public static final int VOTEKICKREQUESTMESSAGE_FIELD_NUMBER = 59;
    private de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage voteKickRequestMessage_;
    /**
     * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
     */
    public boolean hasVoteKickRequestMessage() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
     */
    public de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage getVoteKickRequestMessage() {
      return voteKickRequestMessage_ == null ? de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage.getDefaultInstance() : voteKickRequestMessage_;
    }
    /**
     * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
     */
    private void setVoteKickRequestMessage(de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      voteKickRequestMessage_ = value;
      bitField1_ |= 0x04000000;
      }
    /**
     * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
     */
    private void setVoteKickRequestMessage(
        de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage.Builder builderForValue) {
      voteKickRequestMessage_ = builderForValue.build();
      bitField1_ |= 0x04000000;
    }
    /**
     * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
     */
    private void mergeVoteKickRequestMessage(de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage value) {
      if (voteKickRequestMessage_ != null &&
          voteKickRequestMessage_ != de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage.getDefaultInstance()) {
        voteKickRequestMessage_ =
          de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage.newBuilder(voteKickRequestMessage_).mergeFrom(value).buildPartial();
      } else {
        voteKickRequestMessage_ = value;
      }
      bitField1_ |= 0x04000000;
    }
    /**
     * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
     */
    private void clearVoteKickRequestMessage() {  voteKickRequestMessage_ = null;
      bitField1_ = (bitField1_ & ~0x04000000);
    }

    public static final int VOTEKICKREPLYMESSAGE_FIELD_NUMBER = 60;
    private de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage voteKickReplyMessage_;
    /**
     * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
     */
    public boolean hasVoteKickReplyMessage() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
     */
    public de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage getVoteKickReplyMessage() {
      return voteKickReplyMessage_ == null ? de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.getDefaultInstance() : voteKickReplyMessage_;
    }
    /**
     * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
     */
    private void setVoteKickReplyMessage(de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      voteKickReplyMessage_ = value;
      bitField1_ |= 0x08000000;
      }
    /**
     * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
     */
    private void setVoteKickReplyMessage(
        de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.Builder builderForValue) {
      voteKickReplyMessage_ = builderForValue.build();
      bitField1_ |= 0x08000000;
    }
    /**
     * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
     */
    private void mergeVoteKickReplyMessage(de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage value) {
      if (voteKickReplyMessage_ != null &&
          voteKickReplyMessage_ != de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.getDefaultInstance()) {
        voteKickReplyMessage_ =
          de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.newBuilder(voteKickReplyMessage_).mergeFrom(value).buildPartial();
      } else {
        voteKickReplyMessage_ = value;
      }
      bitField1_ |= 0x08000000;
    }
    /**
     * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
     */
    private void clearVoteKickReplyMessage() {  voteKickReplyMessage_ = null;
      bitField1_ = (bitField1_ & ~0x08000000);
    }

    public static final int KICKPETITIONUPDATEMESSAGE_FIELD_NUMBER = 61;
    private de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage kickPetitionUpdateMessage_;
    /**
     * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
     */
    public boolean hasKickPetitionUpdateMessage() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
     */
    public de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage getKickPetitionUpdateMessage() {
      return kickPetitionUpdateMessage_ == null ? de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage.getDefaultInstance() : kickPetitionUpdateMessage_;
    }
    /**
     * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
     */
    private void setKickPetitionUpdateMessage(de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      kickPetitionUpdateMessage_ = value;
      bitField1_ |= 0x10000000;
      }
    /**
     * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
     */
    private void setKickPetitionUpdateMessage(
        de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage.Builder builderForValue) {
      kickPetitionUpdateMessage_ = builderForValue.build();
      bitField1_ |= 0x10000000;
    }
    /**
     * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
     */
    private void mergeKickPetitionUpdateMessage(de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage value) {
      if (kickPetitionUpdateMessage_ != null &&
          kickPetitionUpdateMessage_ != de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage.getDefaultInstance()) {
        kickPetitionUpdateMessage_ =
          de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage.newBuilder(kickPetitionUpdateMessage_).mergeFrom(value).buildPartial();
      } else {
        kickPetitionUpdateMessage_ = value;
      }
      bitField1_ |= 0x10000000;
    }
    /**
     * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
     */
    private void clearKickPetitionUpdateMessage() {  kickPetitionUpdateMessage_ = null;
      bitField1_ = (bitField1_ & ~0x10000000);
    }

    public static final int ENDKICKPETITIONMESSAGE_FIELD_NUMBER = 62;
    private de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage endKickPetitionMessage_;
    /**
     * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
     */
    public boolean hasEndKickPetitionMessage() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
     */
    public de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage getEndKickPetitionMessage() {
      return endKickPetitionMessage_ == null ? de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.getDefaultInstance() : endKickPetitionMessage_;
    }
    /**
     * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
     */
    private void setEndKickPetitionMessage(de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      endKickPetitionMessage_ = value;
      bitField1_ |= 0x20000000;
      }
    /**
     * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
     */
    private void setEndKickPetitionMessage(
        de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.Builder builderForValue) {
      endKickPetitionMessage_ = builderForValue.build();
      bitField1_ |= 0x20000000;
    }
    /**
     * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
     */
    private void mergeEndKickPetitionMessage(de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage value) {
      if (endKickPetitionMessage_ != null &&
          endKickPetitionMessage_ != de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.getDefaultInstance()) {
        endKickPetitionMessage_ =
          de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.newBuilder(endKickPetitionMessage_).mergeFrom(value).buildPartial();
      } else {
        endKickPetitionMessage_ = value;
      }
      bitField1_ |= 0x20000000;
    }
    /**
     * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
     */
    private void clearEndKickPetitionMessage() {  endKickPetitionMessage_ = null;
      bitField1_ = (bitField1_ & ~0x20000000);
    }

    public static final int STATISTICSMESSAGE_FIELD_NUMBER = 63;
    private de.pokerth.protocol.ProtoBuf.StatisticsMessage statisticsMessage_;
    /**
     * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
     */
    public boolean hasStatisticsMessage() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
     */
    public de.pokerth.protocol.ProtoBuf.StatisticsMessage getStatisticsMessage() {
      return statisticsMessage_ == null ? de.pokerth.protocol.ProtoBuf.StatisticsMessage.getDefaultInstance() : statisticsMessage_;
    }
    /**
     * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
     */
    private void setStatisticsMessage(de.pokerth.protocol.ProtoBuf.StatisticsMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      statisticsMessage_ = value;
      bitField1_ |= 0x40000000;
      }
    /**
     * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
     */
    private void setStatisticsMessage(
        de.pokerth.protocol.ProtoBuf.StatisticsMessage.Builder builderForValue) {
      statisticsMessage_ = builderForValue.build();
      bitField1_ |= 0x40000000;
    }
    /**
     * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
     */
    private void mergeStatisticsMessage(de.pokerth.protocol.ProtoBuf.StatisticsMessage value) {
      if (statisticsMessage_ != null &&
          statisticsMessage_ != de.pokerth.protocol.ProtoBuf.StatisticsMessage.getDefaultInstance()) {
        statisticsMessage_ =
          de.pokerth.protocol.ProtoBuf.StatisticsMessage.newBuilder(statisticsMessage_).mergeFrom(value).buildPartial();
      } else {
        statisticsMessage_ = value;
      }
      bitField1_ |= 0x40000000;
    }
    /**
     * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
     */
    private void clearStatisticsMessage() {  statisticsMessage_ = null;
      bitField1_ = (bitField1_ & ~0x40000000);
    }

    public static final int CHATREQUESTMESSAGE_FIELD_NUMBER = 64;
    private de.pokerth.protocol.ProtoBuf.ChatRequestMessage chatRequestMessage_;
    /**
     * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
     */
    public boolean hasChatRequestMessage() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ChatRequestMessage getChatRequestMessage() {
      return chatRequestMessage_ == null ? de.pokerth.protocol.ProtoBuf.ChatRequestMessage.getDefaultInstance() : chatRequestMessage_;
    }
    /**
     * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
     */
    private void setChatRequestMessage(de.pokerth.protocol.ProtoBuf.ChatRequestMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      chatRequestMessage_ = value;
      bitField1_ |= 0x80000000;
      }
    /**
     * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
     */
    private void setChatRequestMessage(
        de.pokerth.protocol.ProtoBuf.ChatRequestMessage.Builder builderForValue) {
      chatRequestMessage_ = builderForValue.build();
      bitField1_ |= 0x80000000;
    }
    /**
     * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
     */
    private void mergeChatRequestMessage(de.pokerth.protocol.ProtoBuf.ChatRequestMessage value) {
      if (chatRequestMessage_ != null &&
          chatRequestMessage_ != de.pokerth.protocol.ProtoBuf.ChatRequestMessage.getDefaultInstance()) {
        chatRequestMessage_ =
          de.pokerth.protocol.ProtoBuf.ChatRequestMessage.newBuilder(chatRequestMessage_).mergeFrom(value).buildPartial();
      } else {
        chatRequestMessage_ = value;
      }
      bitField1_ |= 0x80000000;
    }
    /**
     * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
     */
    private void clearChatRequestMessage() {  chatRequestMessage_ = null;
      bitField1_ = (bitField1_ & ~0x80000000);
    }

    public static final int CHATMESSAGE_FIELD_NUMBER = 65;
    private de.pokerth.protocol.ProtoBuf.ChatMessage chatMessage_;
    /**
     * <code>optional .ChatMessage chatMessage = 65;</code>
     */
    public boolean hasChatMessage() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .ChatMessage chatMessage = 65;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ChatMessage getChatMessage() {
      return chatMessage_ == null ? de.pokerth.protocol.ProtoBuf.ChatMessage.getDefaultInstance() : chatMessage_;
    }
    /**
     * <code>optional .ChatMessage chatMessage = 65;</code>
     */
    private void setChatMessage(de.pokerth.protocol.ProtoBuf.ChatMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      chatMessage_ = value;
      bitField2_ |= 0x00000001;
      }
    /**
     * <code>optional .ChatMessage chatMessage = 65;</code>
     */
    private void setChatMessage(
        de.pokerth.protocol.ProtoBuf.ChatMessage.Builder builderForValue) {
      chatMessage_ = builderForValue.build();
      bitField2_ |= 0x00000001;
    }
    /**
     * <code>optional .ChatMessage chatMessage = 65;</code>
     */
    private void mergeChatMessage(de.pokerth.protocol.ProtoBuf.ChatMessage value) {
      if (chatMessage_ != null &&
          chatMessage_ != de.pokerth.protocol.ProtoBuf.ChatMessage.getDefaultInstance()) {
        chatMessage_ =
          de.pokerth.protocol.ProtoBuf.ChatMessage.newBuilder(chatMessage_).mergeFrom(value).buildPartial();
      } else {
        chatMessage_ = value;
      }
      bitField2_ |= 0x00000001;
    }
    /**
     * <code>optional .ChatMessage chatMessage = 65;</code>
     */
    private void clearChatMessage() {  chatMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000001);
    }

    public static final int CHATREJECTMESSAGE_FIELD_NUMBER = 66;
    private de.pokerth.protocol.ProtoBuf.ChatRejectMessage chatRejectMessage_;
    /**
     * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
     */
    public boolean hasChatRejectMessage() {
      return ((bitField2_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ChatRejectMessage getChatRejectMessage() {
      return chatRejectMessage_ == null ? de.pokerth.protocol.ProtoBuf.ChatRejectMessage.getDefaultInstance() : chatRejectMessage_;
    }
    /**
     * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
     */
    private void setChatRejectMessage(de.pokerth.protocol.ProtoBuf.ChatRejectMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      chatRejectMessage_ = value;
      bitField2_ |= 0x00000002;
      }
    /**
     * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
     */
    private void setChatRejectMessage(
        de.pokerth.protocol.ProtoBuf.ChatRejectMessage.Builder builderForValue) {
      chatRejectMessage_ = builderForValue.build();
      bitField2_ |= 0x00000002;
    }
    /**
     * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
     */
    private void mergeChatRejectMessage(de.pokerth.protocol.ProtoBuf.ChatRejectMessage value) {
      if (chatRejectMessage_ != null &&
          chatRejectMessage_ != de.pokerth.protocol.ProtoBuf.ChatRejectMessage.getDefaultInstance()) {
        chatRejectMessage_ =
          de.pokerth.protocol.ProtoBuf.ChatRejectMessage.newBuilder(chatRejectMessage_).mergeFrom(value).buildPartial();
      } else {
        chatRejectMessage_ = value;
      }
      bitField2_ |= 0x00000002;
    }
    /**
     * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
     */
    private void clearChatRejectMessage() {  chatRejectMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000002);
    }

    public static final int DIALOGMESSAGE_FIELD_NUMBER = 67;
    private de.pokerth.protocol.ProtoBuf.DialogMessage dialogMessage_;
    /**
     * <code>optional .DialogMessage dialogMessage = 67;</code>
     */
    public boolean hasDialogMessage() {
      return ((bitField2_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .DialogMessage dialogMessage = 67;</code>
     */
    public de.pokerth.protocol.ProtoBuf.DialogMessage getDialogMessage() {
      return dialogMessage_ == null ? de.pokerth.protocol.ProtoBuf.DialogMessage.getDefaultInstance() : dialogMessage_;
    }
    /**
     * <code>optional .DialogMessage dialogMessage = 67;</code>
     */
    private void setDialogMessage(de.pokerth.protocol.ProtoBuf.DialogMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      dialogMessage_ = value;
      bitField2_ |= 0x00000004;
      }
    /**
     * <code>optional .DialogMessage dialogMessage = 67;</code>
     */
    private void setDialogMessage(
        de.pokerth.protocol.ProtoBuf.DialogMessage.Builder builderForValue) {
      dialogMessage_ = builderForValue.build();
      bitField2_ |= 0x00000004;
    }
    /**
     * <code>optional .DialogMessage dialogMessage = 67;</code>
     */
    private void mergeDialogMessage(de.pokerth.protocol.ProtoBuf.DialogMessage value) {
      if (dialogMessage_ != null &&
          dialogMessage_ != de.pokerth.protocol.ProtoBuf.DialogMessage.getDefaultInstance()) {
        dialogMessage_ =
          de.pokerth.protocol.ProtoBuf.DialogMessage.newBuilder(dialogMessage_).mergeFrom(value).buildPartial();
      } else {
        dialogMessage_ = value;
      }
      bitField2_ |= 0x00000004;
    }
    /**
     * <code>optional .DialogMessage dialogMessage = 67;</code>
     */
    private void clearDialogMessage() {  dialogMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000004);
    }

    public static final int TIMEOUTWARNINGMESSAGE_FIELD_NUMBER = 68;
    private de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage timeoutWarningMessage_;
    /**
     * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
     */
    public boolean hasTimeoutWarningMessage() {
      return ((bitField2_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
     */
    public de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage getTimeoutWarningMessage() {
      return timeoutWarningMessage_ == null ? de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.getDefaultInstance() : timeoutWarningMessage_;
    }
    /**
     * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
     */
    private void setTimeoutWarningMessage(de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      timeoutWarningMessage_ = value;
      bitField2_ |= 0x00000008;
      }
    /**
     * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
     */
    private void setTimeoutWarningMessage(
        de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.Builder builderForValue) {
      timeoutWarningMessage_ = builderForValue.build();
      bitField2_ |= 0x00000008;
    }
    /**
     * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
     */
    private void mergeTimeoutWarningMessage(de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage value) {
      if (timeoutWarningMessage_ != null &&
          timeoutWarningMessage_ != de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.getDefaultInstance()) {
        timeoutWarningMessage_ =
          de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.newBuilder(timeoutWarningMessage_).mergeFrom(value).buildPartial();
      } else {
        timeoutWarningMessage_ = value;
      }
      bitField2_ |= 0x00000008;
    }
    /**
     * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
     */
    private void clearTimeoutWarningMessage() {  timeoutWarningMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000008);
    }

    public static final int RESETTIMEOUTMESSAGE_FIELD_NUMBER = 69;
    private de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage resetTimeoutMessage_;
    /**
     * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
     */
    public boolean hasResetTimeoutMessage() {
      return ((bitField2_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage getResetTimeoutMessage() {
      return resetTimeoutMessage_ == null ? de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage.getDefaultInstance() : resetTimeoutMessage_;
    }
    /**
     * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
     */
    private void setResetTimeoutMessage(de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      resetTimeoutMessage_ = value;
      bitField2_ |= 0x00000010;
      }
    /**
     * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
     */
    private void setResetTimeoutMessage(
        de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage.Builder builderForValue) {
      resetTimeoutMessage_ = builderForValue.build();
      bitField2_ |= 0x00000010;
    }
    /**
     * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
     */
    private void mergeResetTimeoutMessage(de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage value) {
      if (resetTimeoutMessage_ != null &&
          resetTimeoutMessage_ != de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage.getDefaultInstance()) {
        resetTimeoutMessage_ =
          de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage.newBuilder(resetTimeoutMessage_).mergeFrom(value).buildPartial();
      } else {
        resetTimeoutMessage_ = value;
      }
      bitField2_ |= 0x00000010;
    }
    /**
     * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
     */
    private void clearResetTimeoutMessage() {  resetTimeoutMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000010);
    }

    public static final int REPORTAVATARMESSAGE_FIELD_NUMBER = 70;
    private de.pokerth.protocol.ProtoBuf.ReportAvatarMessage reportAvatarMessage_;
    /**
     * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
     */
    public boolean hasReportAvatarMessage() {
      return ((bitField2_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ReportAvatarMessage getReportAvatarMessage() {
      return reportAvatarMessage_ == null ? de.pokerth.protocol.ProtoBuf.ReportAvatarMessage.getDefaultInstance() : reportAvatarMessage_;
    }
    /**
     * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
     */
    private void setReportAvatarMessage(de.pokerth.protocol.ProtoBuf.ReportAvatarMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      reportAvatarMessage_ = value;
      bitField2_ |= 0x00000020;
      }
    /**
     * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
     */
    private void setReportAvatarMessage(
        de.pokerth.protocol.ProtoBuf.ReportAvatarMessage.Builder builderForValue) {
      reportAvatarMessage_ = builderForValue.build();
      bitField2_ |= 0x00000020;
    }
    /**
     * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
     */
    private void mergeReportAvatarMessage(de.pokerth.protocol.ProtoBuf.ReportAvatarMessage value) {
      if (reportAvatarMessage_ != null &&
          reportAvatarMessage_ != de.pokerth.protocol.ProtoBuf.ReportAvatarMessage.getDefaultInstance()) {
        reportAvatarMessage_ =
          de.pokerth.protocol.ProtoBuf.ReportAvatarMessage.newBuilder(reportAvatarMessage_).mergeFrom(value).buildPartial();
      } else {
        reportAvatarMessage_ = value;
      }
      bitField2_ |= 0x00000020;
    }
    /**
     * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
     */
    private void clearReportAvatarMessage() {  reportAvatarMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000020);
    }

    public static final int REPORTAVATARACKMESSAGE_FIELD_NUMBER = 71;
    private de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage reportAvatarAckMessage_;
    /**
     * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
     */
    public boolean hasReportAvatarAckMessage() {
      return ((bitField2_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage getReportAvatarAckMessage() {
      return reportAvatarAckMessage_ == null ? de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.getDefaultInstance() : reportAvatarAckMessage_;
    }
    /**
     * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
     */
    private void setReportAvatarAckMessage(de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      reportAvatarAckMessage_ = value;
      bitField2_ |= 0x00000040;
      }
    /**
     * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
     */
    private void setReportAvatarAckMessage(
        de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.Builder builderForValue) {
      reportAvatarAckMessage_ = builderForValue.build();
      bitField2_ |= 0x00000040;
    }
    /**
     * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
     */
    private void mergeReportAvatarAckMessage(de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage value) {
      if (reportAvatarAckMessage_ != null &&
          reportAvatarAckMessage_ != de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.getDefaultInstance()) {
        reportAvatarAckMessage_ =
          de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.newBuilder(reportAvatarAckMessage_).mergeFrom(value).buildPartial();
      } else {
        reportAvatarAckMessage_ = value;
      }
      bitField2_ |= 0x00000040;
    }
    /**
     * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
     */
    private void clearReportAvatarAckMessage() {  reportAvatarAckMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000040);
    }

    public static final int REPORTGAMEMESSAGE_FIELD_NUMBER = 72;
    private de.pokerth.protocol.ProtoBuf.ReportGameMessage reportGameMessage_;
    /**
     * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
     */
    public boolean hasReportGameMessage() {
      return ((bitField2_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ReportGameMessage getReportGameMessage() {
      return reportGameMessage_ == null ? de.pokerth.protocol.ProtoBuf.ReportGameMessage.getDefaultInstance() : reportGameMessage_;
    }
    /**
     * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
     */
    private void setReportGameMessage(de.pokerth.protocol.ProtoBuf.ReportGameMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      reportGameMessage_ = value;
      bitField2_ |= 0x00000080;
      }
    /**
     * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
     */
    private void setReportGameMessage(
        de.pokerth.protocol.ProtoBuf.ReportGameMessage.Builder builderForValue) {
      reportGameMessage_ = builderForValue.build();
      bitField2_ |= 0x00000080;
    }
    /**
     * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
     */
    private void mergeReportGameMessage(de.pokerth.protocol.ProtoBuf.ReportGameMessage value) {
      if (reportGameMessage_ != null &&
          reportGameMessage_ != de.pokerth.protocol.ProtoBuf.ReportGameMessage.getDefaultInstance()) {
        reportGameMessage_ =
          de.pokerth.protocol.ProtoBuf.ReportGameMessage.newBuilder(reportGameMessage_).mergeFrom(value).buildPartial();
      } else {
        reportGameMessage_ = value;
      }
      bitField2_ |= 0x00000080;
    }
    /**
     * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
     */
    private void clearReportGameMessage() {  reportGameMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000080);
    }

    public static final int REPORTGAMEACKMESSAGE_FIELD_NUMBER = 73;
    private de.pokerth.protocol.ProtoBuf.ReportGameAckMessage reportGameAckMessage_;
    /**
     * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
     */
    public boolean hasReportGameAckMessage() {
      return ((bitField2_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ReportGameAckMessage getReportGameAckMessage() {
      return reportGameAckMessage_ == null ? de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.getDefaultInstance() : reportGameAckMessage_;
    }
    /**
     * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
     */
    private void setReportGameAckMessage(de.pokerth.protocol.ProtoBuf.ReportGameAckMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      reportGameAckMessage_ = value;
      bitField2_ |= 0x00000100;
      }
    /**
     * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
     */
    private void setReportGameAckMessage(
        de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.Builder builderForValue) {
      reportGameAckMessage_ = builderForValue.build();
      bitField2_ |= 0x00000100;
    }
    /**
     * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
     */
    private void mergeReportGameAckMessage(de.pokerth.protocol.ProtoBuf.ReportGameAckMessage value) {
      if (reportGameAckMessage_ != null &&
          reportGameAckMessage_ != de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.getDefaultInstance()) {
        reportGameAckMessage_ =
          de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.newBuilder(reportGameAckMessage_).mergeFrom(value).buildPartial();
      } else {
        reportGameAckMessage_ = value;
      }
      bitField2_ |= 0x00000100;
    }
    /**
     * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
     */
    private void clearReportGameAckMessage() {  reportGameAckMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000100);
    }

    public static final int ERRORMESSAGE_FIELD_NUMBER = 74;
    private de.pokerth.protocol.ProtoBuf.ErrorMessage errorMessage_;
    /**
     * <code>optional .ErrorMessage errorMessage = 74;</code>
     */
    public boolean hasErrorMessage() {
      return ((bitField2_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .ErrorMessage errorMessage = 74;</code>
     */
    public de.pokerth.protocol.ProtoBuf.ErrorMessage getErrorMessage() {
      return errorMessage_ == null ? de.pokerth.protocol.ProtoBuf.ErrorMessage.getDefaultInstance() : errorMessage_;
    }
    /**
     * <code>optional .ErrorMessage errorMessage = 74;</code>
     */
    private void setErrorMessage(de.pokerth.protocol.ProtoBuf.ErrorMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      errorMessage_ = value;
      bitField2_ |= 0x00000200;
      }
    /**
     * <code>optional .ErrorMessage errorMessage = 74;</code>
     */
    private void setErrorMessage(
        de.pokerth.protocol.ProtoBuf.ErrorMessage.Builder builderForValue) {
      errorMessage_ = builderForValue.build();
      bitField2_ |= 0x00000200;
    }
    /**
     * <code>optional .ErrorMessage errorMessage = 74;</code>
     */
    private void mergeErrorMessage(de.pokerth.protocol.ProtoBuf.ErrorMessage value) {
      if (errorMessage_ != null &&
          errorMessage_ != de.pokerth.protocol.ProtoBuf.ErrorMessage.getDefaultInstance()) {
        errorMessage_ =
          de.pokerth.protocol.ProtoBuf.ErrorMessage.newBuilder(errorMessage_).mergeFrom(value).buildPartial();
      } else {
        errorMessage_ = value;
      }
      bitField2_ |= 0x00000200;
    }
    /**
     * <code>optional .ErrorMessage errorMessage = 74;</code>
     */
    private void clearErrorMessage() {  errorMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000200);
    }

    public static final int ADMINREMOVEGAMEMESSAGE_FIELD_NUMBER = 75;
    private de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage adminRemoveGameMessage_;
    /**
     * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
     */
    public boolean hasAdminRemoveGameMessage() {
      return ((bitField2_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage getAdminRemoveGameMessage() {
      return adminRemoveGameMessage_ == null ? de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage.getDefaultInstance() : adminRemoveGameMessage_;
    }
    /**
     * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
     */
    private void setAdminRemoveGameMessage(de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      adminRemoveGameMessage_ = value;
      bitField2_ |= 0x00000400;
      }
    /**
     * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
     */
    private void setAdminRemoveGameMessage(
        de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage.Builder builderForValue) {
      adminRemoveGameMessage_ = builderForValue.build();
      bitField2_ |= 0x00000400;
    }
    /**
     * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
     */
    private void mergeAdminRemoveGameMessage(de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage value) {
      if (adminRemoveGameMessage_ != null &&
          adminRemoveGameMessage_ != de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage.getDefaultInstance()) {
        adminRemoveGameMessage_ =
          de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage.newBuilder(adminRemoveGameMessage_).mergeFrom(value).buildPartial();
      } else {
        adminRemoveGameMessage_ = value;
      }
      bitField2_ |= 0x00000400;
    }
    /**
     * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
     */
    private void clearAdminRemoveGameMessage() {  adminRemoveGameMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000400);
    }

    public static final int ADMINREMOVEGAMEACKMESSAGE_FIELD_NUMBER = 76;
    private de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage adminRemoveGameAckMessage_;
    /**
     * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
     */
    public boolean hasAdminRemoveGameAckMessage() {
      return ((bitField2_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage getAdminRemoveGameAckMessage() {
      return adminRemoveGameAckMessage_ == null ? de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.getDefaultInstance() : adminRemoveGameAckMessage_;
    }
    /**
     * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
     */
    private void setAdminRemoveGameAckMessage(de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      adminRemoveGameAckMessage_ = value;
      bitField2_ |= 0x00000800;
      }
    /**
     * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
     */
    private void setAdminRemoveGameAckMessage(
        de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.Builder builderForValue) {
      adminRemoveGameAckMessage_ = builderForValue.build();
      bitField2_ |= 0x00000800;
    }
    /**
     * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
     */
    private void mergeAdminRemoveGameAckMessage(de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage value) {
      if (adminRemoveGameAckMessage_ != null &&
          adminRemoveGameAckMessage_ != de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.getDefaultInstance()) {
        adminRemoveGameAckMessage_ =
          de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.newBuilder(adminRemoveGameAckMessage_).mergeFrom(value).buildPartial();
      } else {
        adminRemoveGameAckMessage_ = value;
      }
      bitField2_ |= 0x00000800;
    }
    /**
     * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
     */
    private void clearAdminRemoveGameAckMessage() {  adminRemoveGameAckMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00000800);
    }

    public static final int ADMINBANPLAYERMESSAGE_FIELD_NUMBER = 77;
    private de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage adminBanPlayerMessage_;
    /**
     * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
     */
    public boolean hasAdminBanPlayerMessage() {
      return ((bitField2_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage getAdminBanPlayerMessage() {
      return adminBanPlayerMessage_ == null ? de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage.getDefaultInstance() : adminBanPlayerMessage_;
    }
    /**
     * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
     */
    private void setAdminBanPlayerMessage(de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      adminBanPlayerMessage_ = value;
      bitField2_ |= 0x00001000;
      }
    /**
     * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
     */
    private void setAdminBanPlayerMessage(
        de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage.Builder builderForValue) {
      adminBanPlayerMessage_ = builderForValue.build();
      bitField2_ |= 0x00001000;
    }
    /**
     * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
     */
    private void mergeAdminBanPlayerMessage(de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage value) {
      if (adminBanPlayerMessage_ != null &&
          adminBanPlayerMessage_ != de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage.getDefaultInstance()) {
        adminBanPlayerMessage_ =
          de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage.newBuilder(adminBanPlayerMessage_).mergeFrom(value).buildPartial();
      } else {
        adminBanPlayerMessage_ = value;
      }
      bitField2_ |= 0x00001000;
    }
    /**
     * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
     */
    private void clearAdminBanPlayerMessage() {  adminBanPlayerMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00001000);
    }

    public static final int ADMINBANPLAYERACKMESSAGE_FIELD_NUMBER = 78;
    private de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage adminBanPlayerAckMessage_;
    /**
     * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
     */
    public boolean hasAdminBanPlayerAckMessage() {
      return ((bitField2_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
     */
    public de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage getAdminBanPlayerAckMessage() {
      return adminBanPlayerAckMessage_ == null ? de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.getDefaultInstance() : adminBanPlayerAckMessage_;
    }
    /**
     * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
     */
    private void setAdminBanPlayerAckMessage(de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      adminBanPlayerAckMessage_ = value;
      bitField2_ |= 0x00002000;
      }
    /**
     * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
     */
    private void setAdminBanPlayerAckMessage(
        de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.Builder builderForValue) {
      adminBanPlayerAckMessage_ = builderForValue.build();
      bitField2_ |= 0x00002000;
    }
    /**
     * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
     */
    private void mergeAdminBanPlayerAckMessage(de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage value) {
      if (adminBanPlayerAckMessage_ != null &&
          adminBanPlayerAckMessage_ != de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.getDefaultInstance()) {
        adminBanPlayerAckMessage_ =
          de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.newBuilder(adminBanPlayerAckMessage_).mergeFrom(value).buildPartial();
      } else {
        adminBanPlayerAckMessage_ = value;
      }
      bitField2_ |= 0x00002000;
    }
    /**
     * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
     */
    private void clearAdminBanPlayerAckMessage() {  adminBanPlayerAckMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00002000);
    }

    public static final int GAMELISTSPECTATORJOINEDMESSAGE_FIELD_NUMBER = 79;
    private de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage_;
    /**
     * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
     */
    public boolean hasGameListSpectatorJoinedMessage() {
      return ((bitField2_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage getGameListSpectatorJoinedMessage() {
      return gameListSpectatorJoinedMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage.getDefaultInstance() : gameListSpectatorJoinedMessage_;
    }
    /**
     * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
     */
    private void setGameListSpectatorJoinedMessage(de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameListSpectatorJoinedMessage_ = value;
      bitField2_ |= 0x00004000;
      }
    /**
     * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
     */
    private void setGameListSpectatorJoinedMessage(
        de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage.Builder builderForValue) {
      gameListSpectatorJoinedMessage_ = builderForValue.build();
      bitField2_ |= 0x00004000;
    }
    /**
     * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
     */
    private void mergeGameListSpectatorJoinedMessage(de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage value) {
      if (gameListSpectatorJoinedMessage_ != null &&
          gameListSpectatorJoinedMessage_ != de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage.getDefaultInstance()) {
        gameListSpectatorJoinedMessage_ =
          de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage.newBuilder(gameListSpectatorJoinedMessage_).mergeFrom(value).buildPartial();
      } else {
        gameListSpectatorJoinedMessage_ = value;
      }
      bitField2_ |= 0x00004000;
    }
    /**
     * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
     */
    private void clearGameListSpectatorJoinedMessage() {  gameListSpectatorJoinedMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00004000);
    }

    public static final int GAMELISTSPECTATORLEFTMESSAGE_FIELD_NUMBER = 80;
    private de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage gameListSpectatorLeftMessage_;
    /**
     * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
     */
    public boolean hasGameListSpectatorLeftMessage() {
      return ((bitField2_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage getGameListSpectatorLeftMessage() {
      return gameListSpectatorLeftMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage.getDefaultInstance() : gameListSpectatorLeftMessage_;
    }
    /**
     * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
     */
    private void setGameListSpectatorLeftMessage(de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameListSpectatorLeftMessage_ = value;
      bitField2_ |= 0x00008000;
      }
    /**
     * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
     */
    private void setGameListSpectatorLeftMessage(
        de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage.Builder builderForValue) {
      gameListSpectatorLeftMessage_ = builderForValue.build();
      bitField2_ |= 0x00008000;
    }
    /**
     * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
     */
    private void mergeGameListSpectatorLeftMessage(de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage value) {
      if (gameListSpectatorLeftMessage_ != null &&
          gameListSpectatorLeftMessage_ != de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage.getDefaultInstance()) {
        gameListSpectatorLeftMessage_ =
          de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage.newBuilder(gameListSpectatorLeftMessage_).mergeFrom(value).buildPartial();
      } else {
        gameListSpectatorLeftMessage_ = value;
      }
      bitField2_ |= 0x00008000;
    }
    /**
     * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
     */
    private void clearGameListSpectatorLeftMessage() {  gameListSpectatorLeftMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00008000);
    }

    public static final int GAMESPECTATORJOINEDMESSAGE_FIELD_NUMBER = 81;
    private de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage gameSpectatorJoinedMessage_;
    /**
     * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
     */
    public boolean hasGameSpectatorJoinedMessage() {
      return ((bitField2_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage getGameSpectatorJoinedMessage() {
      return gameSpectatorJoinedMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage.getDefaultInstance() : gameSpectatorJoinedMessage_;
    }
    /**
     * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
     */
    private void setGameSpectatorJoinedMessage(de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameSpectatorJoinedMessage_ = value;
      bitField2_ |= 0x00010000;
      }
    /**
     * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
     */
    private void setGameSpectatorJoinedMessage(
        de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage.Builder builderForValue) {
      gameSpectatorJoinedMessage_ = builderForValue.build();
      bitField2_ |= 0x00010000;
    }
    /**
     * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
     */
    private void mergeGameSpectatorJoinedMessage(de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage value) {
      if (gameSpectatorJoinedMessage_ != null &&
          gameSpectatorJoinedMessage_ != de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage.getDefaultInstance()) {
        gameSpectatorJoinedMessage_ =
          de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage.newBuilder(gameSpectatorJoinedMessage_).mergeFrom(value).buildPartial();
      } else {
        gameSpectatorJoinedMessage_ = value;
      }
      bitField2_ |= 0x00010000;
    }
    /**
     * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
     */
    private void clearGameSpectatorJoinedMessage() {  gameSpectatorJoinedMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00010000);
    }

    public static final int GAMESPECTATORLEFTMESSAGE_FIELD_NUMBER = 82;
    private de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage gameSpectatorLeftMessage_;
    /**
     * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
     */
    public boolean hasGameSpectatorLeftMessage() {
      return ((bitField2_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
     */
    public de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage getGameSpectatorLeftMessage() {
      return gameSpectatorLeftMessage_ == null ? de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage.getDefaultInstance() : gameSpectatorLeftMessage_;
    }
    /**
     * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
     */
    private void setGameSpectatorLeftMessage(de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      gameSpectatorLeftMessage_ = value;
      bitField2_ |= 0x00020000;
      }
    /**
     * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
     */
    private void setGameSpectatorLeftMessage(
        de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage.Builder builderForValue) {
      gameSpectatorLeftMessage_ = builderForValue.build();
      bitField2_ |= 0x00020000;
    }
    /**
     * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
     */
    private void mergeGameSpectatorLeftMessage(de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage value) {
      if (gameSpectatorLeftMessage_ != null &&
          gameSpectatorLeftMessage_ != de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage.getDefaultInstance()) {
        gameSpectatorLeftMessage_ =
          de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage.newBuilder(gameSpectatorLeftMessage_).mergeFrom(value).buildPartial();
      } else {
        gameSpectatorLeftMessage_ = value;
      }
      bitField2_ |= 0x00020000;
    }
    /**
     * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
     */
    private void clearGameSpectatorLeftMessage() {  gameSpectatorLeftMessage_ = null;
      bitField2_ = (bitField2_ & ~0x00020000);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, messageType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getAnnounceMessage());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getInitMessage());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getAuthServerChallengeMessage());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getAuthClientResponseMessage());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, getAuthServerVerificationMessage());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, getInitAckMessage());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, getAvatarRequestMessage());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, getAvatarHeaderMessage());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, getAvatarDataMessage());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, getAvatarEndMessage());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(12, getUnknownAvatarMessage());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(13, getPlayerListMessage());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(14, getGameListNewMessage());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(15, getGameListUpdateMessage());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(16, getGameListPlayerJoinedMessage());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(17, getGameListPlayerLeftMessage());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(18, getGameListAdminChangedMessage());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(19, getPlayerInfoRequestMessage());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(20, getPlayerInfoReplyMessage());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(21, getSubscriptionRequestMessage());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(22, getJoinExistingGameMessage());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(23, getJoinNewGameMessage());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(24, getRejoinExistingGameMessage());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(25, getJoinGameAckMessage());
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeMessage(26, getJoinGameFailedMessage());
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeMessage(27, getGamePlayerJoinedMessage());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeMessage(28, getGamePlayerLeftMessage());
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeMessage(29, getGameAdminChangedMessage());
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeMessage(30, getRemovedFromGameMessage());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(31, getKickPlayerRequestMessage());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeMessage(32, getLeaveGameRequestMessage());
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(33, getInvitePlayerToGameMessage());
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(34, getInviteNotifyMessage());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(35, getRejectGameInvitationMessage());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(36, getRejectInvNotifyMessage());
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(37, getStartEventMessage());
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(38, getStartEventAckMessage());
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(39, getGameStartInitialMessage());
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(40, getGameStartRejoinMessage());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(41, getHandStartMessage());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(42, getPlayersTurnMessage());
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(43, getMyActionRequestMessage());
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(44, getYourActionRejectedMessage());
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(45, getPlayersActionDoneMessage());
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(46, getDealFlopCardsMessage());
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(47, getDealTurnCardMessage());
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(48, getDealRiverCardMessage());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(49, getAllInShowCardsMessage());
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(50, getEndOfHandShowCardsMessage());
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(51, getEndOfHandHideCardsMessage());
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(52, getShowMyCardsRequestMessage());
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(53, getAfterHandShowCardsMessage());
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(54, getEndOfGameMessage());
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(55, getPlayerIdChangedMessage());
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(56, getAskKickPlayerMessage());
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(57, getAskKickDeniedMessage());
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeMessage(58, getStartKickPetitionMessage());
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeMessage(59, getVoteKickRequestMessage());
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeMessage(60, getVoteKickReplyMessage());
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeMessage(61, getKickPetitionUpdateMessage());
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeMessage(62, getEndKickPetitionMessage());
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(63, getStatisticsMessage());
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeMessage(64, getChatRequestMessage());
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(65, getChatMessage());
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(66, getChatRejectMessage());
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(67, getDialogMessage());
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(68, getTimeoutWarningMessage());
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(69, getResetTimeoutMessage());
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(70, getReportAvatarMessage());
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(71, getReportAvatarAckMessage());
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(72, getReportGameMessage());
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(73, getReportGameAckMessage());
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(74, getErrorMessage());
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(75, getAdminRemoveGameMessage());
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(76, getAdminRemoveGameAckMessage());
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(77, getAdminBanPlayerMessage());
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(78, getAdminBanPlayerAckMessage());
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(79, getGameListSpectatorJoinedMessage());
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(80, getGameListSpectatorLeftMessage());
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(81, getGameSpectatorJoinedMessage());
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(82, getGameSpectatorLeftMessage());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAnnounceMessage());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getInitMessage());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAuthServerChallengeMessage());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getAuthClientResponseMessage());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getAuthServerVerificationMessage());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getInitAckMessage());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getAvatarRequestMessage());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getAvatarHeaderMessage());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getAvatarDataMessage());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getAvatarEndMessage());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getUnknownAvatarMessage());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getPlayerListMessage());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getGameListNewMessage());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getGameListUpdateMessage());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getGameListPlayerJoinedMessage());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getGameListPlayerLeftMessage());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getGameListAdminChangedMessage());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getPlayerInfoRequestMessage());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getPlayerInfoReplyMessage());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getSubscriptionRequestMessage());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getJoinExistingGameMessage());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getJoinNewGameMessage());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getRejoinExistingGameMessage());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getJoinGameAckMessage());
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, getJoinGameFailedMessage());
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, getGamePlayerJoinedMessage());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, getGamePlayerLeftMessage());
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, getGameAdminChangedMessage());
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, getRemovedFromGameMessage());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, getKickPlayerRequestMessage());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, getLeaveGameRequestMessage());
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, getInvitePlayerToGameMessage());
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, getInviteNotifyMessage());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, getRejectGameInvitationMessage());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, getRejectInvNotifyMessage());
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(37, getStartEventMessage());
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(38, getStartEventAckMessage());
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(39, getGameStartInitialMessage());
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(40, getGameStartRejoinMessage());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, getHandStartMessage());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(42, getPlayersTurnMessage());
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(43, getMyActionRequestMessage());
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(44, getYourActionRejectedMessage());
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(45, getPlayersActionDoneMessage());
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(46, getDealFlopCardsMessage());
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(47, getDealTurnCardMessage());
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(48, getDealRiverCardMessage());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(49, getAllInShowCardsMessage());
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, getEndOfHandShowCardsMessage());
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(51, getEndOfHandHideCardsMessage());
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(52, getShowMyCardsRequestMessage());
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(53, getAfterHandShowCardsMessage());
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(54, getEndOfGameMessage());
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(55, getPlayerIdChangedMessage());
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(56, getAskKickPlayerMessage());
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(57, getAskKickDeniedMessage());
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(58, getStartKickPetitionMessage());
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(59, getVoteKickRequestMessage());
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(60, getVoteKickReplyMessage());
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(61, getKickPetitionUpdateMessage());
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(62, getEndKickPetitionMessage());
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(63, getStatisticsMessage());
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(64, getChatRequestMessage());
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(65, getChatMessage());
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(66, getChatRejectMessage());
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(67, getDialogMessage());
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(68, getTimeoutWarningMessage());
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(69, getResetTimeoutMessage());
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(70, getReportAvatarMessage());
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(71, getReportAvatarAckMessage());
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(72, getReportGameMessage());
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(73, getReportGameAckMessage());
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(74, getErrorMessage());
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(75, getAdminRemoveGameMessage());
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(76, getAdminRemoveGameAckMessage());
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(77, getAdminBanPlayerMessage());
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(78, getAdminBanPlayerAckMessage());
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(79, getGameListSpectatorJoinedMessage());
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(80, getGameListSpectatorLeftMessage());
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(81, getGameSpectatorJoinedMessage());
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(82, getGameSpectatorLeftMessage());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static de.pokerth.protocol.ProtoBuf.PokerTHMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PokerTHMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PokerTHMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.pokerth.protocol.ProtoBuf.PokerTHMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PokerTHMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PokerTHMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PokerTHMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PokerTHMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.pokerth.protocol.ProtoBuf.PokerTHMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.pokerth.protocol.ProtoBuf.PokerTHMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.pokerth.protocol.ProtoBuf.PokerTHMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PokerTHMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.pokerth.protocol.ProtoBuf.PokerTHMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:PokerTHMessage)
        de.pokerth.protocol.ProtoBuf.PokerTHMessageOrBuilder {
      // Construct using de.pokerth.protocol.ProtoBuf.PokerTHMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .PokerTHMessage.PokerTHMessageType messageType = 1;</code>
       */
      public boolean hasMessageType() {
        return instance.hasMessageType();
      }
      /**
       * <code>required .PokerTHMessage.PokerTHMessageType messageType = 1;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PokerTHMessage.PokerTHMessageType getMessageType() {
        return instance.getMessageType();
      }
      /**
       * <code>required .PokerTHMessage.PokerTHMessageType messageType = 1;</code>
       */
      public Builder setMessageType(de.pokerth.protocol.ProtoBuf.PokerTHMessage.PokerTHMessageType value) {
        copyOnWrite();
        instance.setMessageType(value);
        return this;
      }
      /**
       * <code>required .PokerTHMessage.PokerTHMessageType messageType = 1;</code>
       */
      public Builder clearMessageType() {
        copyOnWrite();
        instance.clearMessageType();
        return this;
      }

      /**
       * <code>optional .AnnounceMessage announceMessage = 2;</code>
       */
      public boolean hasAnnounceMessage() {
        return instance.hasAnnounceMessage();
      }
      /**
       * <code>optional .AnnounceMessage announceMessage = 2;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AnnounceMessage getAnnounceMessage() {
        return instance.getAnnounceMessage();
      }
      /**
       * <code>optional .AnnounceMessage announceMessage = 2;</code>
       */
      public Builder setAnnounceMessage(de.pokerth.protocol.ProtoBuf.AnnounceMessage value) {
        copyOnWrite();
        instance.setAnnounceMessage(value);
        return this;
        }
      /**
       * <code>optional .AnnounceMessage announceMessage = 2;</code>
       */
      public Builder setAnnounceMessage(
          de.pokerth.protocol.ProtoBuf.AnnounceMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAnnounceMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AnnounceMessage announceMessage = 2;</code>
       */
      public Builder mergeAnnounceMessage(de.pokerth.protocol.ProtoBuf.AnnounceMessage value) {
        copyOnWrite();
        instance.mergeAnnounceMessage(value);
        return this;
      }
      /**
       * <code>optional .AnnounceMessage announceMessage = 2;</code>
       */
      public Builder clearAnnounceMessage() {  copyOnWrite();
        instance.clearAnnounceMessage();
        return this;
      }

      /**
       * <code>optional .InitMessage initMessage = 3;</code>
       */
      public boolean hasInitMessage() {
        return instance.hasInitMessage();
      }
      /**
       * <code>optional .InitMessage initMessage = 3;</code>
       */
      public de.pokerth.protocol.ProtoBuf.InitMessage getInitMessage() {
        return instance.getInitMessage();
      }
      /**
       * <code>optional .InitMessage initMessage = 3;</code>
       */
      public Builder setInitMessage(de.pokerth.protocol.ProtoBuf.InitMessage value) {
        copyOnWrite();
        instance.setInitMessage(value);
        return this;
        }
      /**
       * <code>optional .InitMessage initMessage = 3;</code>
       */
      public Builder setInitMessage(
          de.pokerth.protocol.ProtoBuf.InitMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setInitMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .InitMessage initMessage = 3;</code>
       */
      public Builder mergeInitMessage(de.pokerth.protocol.ProtoBuf.InitMessage value) {
        copyOnWrite();
        instance.mergeInitMessage(value);
        return this;
      }
      /**
       * <code>optional .InitMessage initMessage = 3;</code>
       */
      public Builder clearInitMessage() {  copyOnWrite();
        instance.clearInitMessage();
        return this;
      }

      /**
       * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
       */
      public boolean hasAuthServerChallengeMessage() {
        return instance.hasAuthServerChallengeMessage();
      }
      /**
       * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage getAuthServerChallengeMessage() {
        return instance.getAuthServerChallengeMessage();
      }
      /**
       * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
       */
      public Builder setAuthServerChallengeMessage(de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage value) {
        copyOnWrite();
        instance.setAuthServerChallengeMessage(value);
        return this;
        }
      /**
       * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
       */
      public Builder setAuthServerChallengeMessage(
          de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAuthServerChallengeMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
       */
      public Builder mergeAuthServerChallengeMessage(de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage value) {
        copyOnWrite();
        instance.mergeAuthServerChallengeMessage(value);
        return this;
      }
      /**
       * <code>optional .AuthServerChallengeMessage authServerChallengeMessage = 4;</code>
       */
      public Builder clearAuthServerChallengeMessage() {  copyOnWrite();
        instance.clearAuthServerChallengeMessage();
        return this;
      }

      /**
       * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
       */
      public boolean hasAuthClientResponseMessage() {
        return instance.hasAuthClientResponseMessage();
      }
      /**
       * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage getAuthClientResponseMessage() {
        return instance.getAuthClientResponseMessage();
      }
      /**
       * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
       */
      public Builder setAuthClientResponseMessage(de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage value) {
        copyOnWrite();
        instance.setAuthClientResponseMessage(value);
        return this;
        }
      /**
       * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
       */
      public Builder setAuthClientResponseMessage(
          de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAuthClientResponseMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
       */
      public Builder mergeAuthClientResponseMessage(de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage value) {
        copyOnWrite();
        instance.mergeAuthClientResponseMessage(value);
        return this;
      }
      /**
       * <code>optional .AuthClientResponseMessage authClientResponseMessage = 5;</code>
       */
      public Builder clearAuthClientResponseMessage() {  copyOnWrite();
        instance.clearAuthClientResponseMessage();
        return this;
      }

      /**
       * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
       */
      public boolean hasAuthServerVerificationMessage() {
        return instance.hasAuthServerVerificationMessage();
      }
      /**
       * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage getAuthServerVerificationMessage() {
        return instance.getAuthServerVerificationMessage();
      }
      /**
       * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
       */
      public Builder setAuthServerVerificationMessage(de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage value) {
        copyOnWrite();
        instance.setAuthServerVerificationMessage(value);
        return this;
        }
      /**
       * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
       */
      public Builder setAuthServerVerificationMessage(
          de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAuthServerVerificationMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
       */
      public Builder mergeAuthServerVerificationMessage(de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage value) {
        copyOnWrite();
        instance.mergeAuthServerVerificationMessage(value);
        return this;
      }
      /**
       * <code>optional .AuthServerVerificationMessage authServerVerificationMessage = 6;</code>
       */
      public Builder clearAuthServerVerificationMessage() {  copyOnWrite();
        instance.clearAuthServerVerificationMessage();
        return this;
      }

      /**
       * <code>optional .InitAckMessage initAckMessage = 7;</code>
       */
      public boolean hasInitAckMessage() {
        return instance.hasInitAckMessage();
      }
      /**
       * <code>optional .InitAckMessage initAckMessage = 7;</code>
       */
      public de.pokerth.protocol.ProtoBuf.InitAckMessage getInitAckMessage() {
        return instance.getInitAckMessage();
      }
      /**
       * <code>optional .InitAckMessage initAckMessage = 7;</code>
       */
      public Builder setInitAckMessage(de.pokerth.protocol.ProtoBuf.InitAckMessage value) {
        copyOnWrite();
        instance.setInitAckMessage(value);
        return this;
        }
      /**
       * <code>optional .InitAckMessage initAckMessage = 7;</code>
       */
      public Builder setInitAckMessage(
          de.pokerth.protocol.ProtoBuf.InitAckMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setInitAckMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .InitAckMessage initAckMessage = 7;</code>
       */
      public Builder mergeInitAckMessage(de.pokerth.protocol.ProtoBuf.InitAckMessage value) {
        copyOnWrite();
        instance.mergeInitAckMessage(value);
        return this;
      }
      /**
       * <code>optional .InitAckMessage initAckMessage = 7;</code>
       */
      public Builder clearInitAckMessage() {  copyOnWrite();
        instance.clearInitAckMessage();
        return this;
      }

      /**
       * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
       */
      public boolean hasAvatarRequestMessage() {
        return instance.hasAvatarRequestMessage();
      }
      /**
       * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AvatarRequestMessage getAvatarRequestMessage() {
        return instance.getAvatarRequestMessage();
      }
      /**
       * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
       */
      public Builder setAvatarRequestMessage(de.pokerth.protocol.ProtoBuf.AvatarRequestMessage value) {
        copyOnWrite();
        instance.setAvatarRequestMessage(value);
        return this;
        }
      /**
       * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
       */
      public Builder setAvatarRequestMessage(
          de.pokerth.protocol.ProtoBuf.AvatarRequestMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAvatarRequestMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
       */
      public Builder mergeAvatarRequestMessage(de.pokerth.protocol.ProtoBuf.AvatarRequestMessage value) {
        copyOnWrite();
        instance.mergeAvatarRequestMessage(value);
        return this;
      }
      /**
       * <code>optional .AvatarRequestMessage avatarRequestMessage = 8;</code>
       */
      public Builder clearAvatarRequestMessage() {  copyOnWrite();
        instance.clearAvatarRequestMessage();
        return this;
      }

      /**
       * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
       */
      public boolean hasAvatarHeaderMessage() {
        return instance.hasAvatarHeaderMessage();
      }
      /**
       * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage getAvatarHeaderMessage() {
        return instance.getAvatarHeaderMessage();
      }
      /**
       * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
       */
      public Builder setAvatarHeaderMessage(de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage value) {
        copyOnWrite();
        instance.setAvatarHeaderMessage(value);
        return this;
        }
      /**
       * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
       */
      public Builder setAvatarHeaderMessage(
          de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAvatarHeaderMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
       */
      public Builder mergeAvatarHeaderMessage(de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage value) {
        copyOnWrite();
        instance.mergeAvatarHeaderMessage(value);
        return this;
      }
      /**
       * <code>optional .AvatarHeaderMessage avatarHeaderMessage = 9;</code>
       */
      public Builder clearAvatarHeaderMessage() {  copyOnWrite();
        instance.clearAvatarHeaderMessage();
        return this;
      }

      /**
       * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
       */
      public boolean hasAvatarDataMessage() {
        return instance.hasAvatarDataMessage();
      }
      /**
       * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AvatarDataMessage getAvatarDataMessage() {
        return instance.getAvatarDataMessage();
      }
      /**
       * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
       */
      public Builder setAvatarDataMessage(de.pokerth.protocol.ProtoBuf.AvatarDataMessage value) {
        copyOnWrite();
        instance.setAvatarDataMessage(value);
        return this;
        }
      /**
       * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
       */
      public Builder setAvatarDataMessage(
          de.pokerth.protocol.ProtoBuf.AvatarDataMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAvatarDataMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
       */
      public Builder mergeAvatarDataMessage(de.pokerth.protocol.ProtoBuf.AvatarDataMessage value) {
        copyOnWrite();
        instance.mergeAvatarDataMessage(value);
        return this;
      }
      /**
       * <code>optional .AvatarDataMessage avatarDataMessage = 10;</code>
       */
      public Builder clearAvatarDataMessage() {  copyOnWrite();
        instance.clearAvatarDataMessage();
        return this;
      }

      /**
       * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
       */
      public boolean hasAvatarEndMessage() {
        return instance.hasAvatarEndMessage();
      }
      /**
       * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AvatarEndMessage getAvatarEndMessage() {
        return instance.getAvatarEndMessage();
      }
      /**
       * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
       */
      public Builder setAvatarEndMessage(de.pokerth.protocol.ProtoBuf.AvatarEndMessage value) {
        copyOnWrite();
        instance.setAvatarEndMessage(value);
        return this;
        }
      /**
       * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
       */
      public Builder setAvatarEndMessage(
          de.pokerth.protocol.ProtoBuf.AvatarEndMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAvatarEndMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
       */
      public Builder mergeAvatarEndMessage(de.pokerth.protocol.ProtoBuf.AvatarEndMessage value) {
        copyOnWrite();
        instance.mergeAvatarEndMessage(value);
        return this;
      }
      /**
       * <code>optional .AvatarEndMessage avatarEndMessage = 11;</code>
       */
      public Builder clearAvatarEndMessage() {  copyOnWrite();
        instance.clearAvatarEndMessage();
        return this;
      }

      /**
       * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
       */
      public boolean hasUnknownAvatarMessage() {
        return instance.hasUnknownAvatarMessage();
      }
      /**
       * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
       */
      public de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage getUnknownAvatarMessage() {
        return instance.getUnknownAvatarMessage();
      }
      /**
       * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
       */
      public Builder setUnknownAvatarMessage(de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage value) {
        copyOnWrite();
        instance.setUnknownAvatarMessage(value);
        return this;
        }
      /**
       * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
       */
      public Builder setUnknownAvatarMessage(
          de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setUnknownAvatarMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
       */
      public Builder mergeUnknownAvatarMessage(de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage value) {
        copyOnWrite();
        instance.mergeUnknownAvatarMessage(value);
        return this;
      }
      /**
       * <code>optional .UnknownAvatarMessage unknownAvatarMessage = 12;</code>
       */
      public Builder clearUnknownAvatarMessage() {  copyOnWrite();
        instance.clearUnknownAvatarMessage();
        return this;
      }

      /**
       * <code>optional .PlayerListMessage playerListMessage = 13;</code>
       */
      public boolean hasPlayerListMessage() {
        return instance.hasPlayerListMessage();
      }
      /**
       * <code>optional .PlayerListMessage playerListMessage = 13;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PlayerListMessage getPlayerListMessage() {
        return instance.getPlayerListMessage();
      }
      /**
       * <code>optional .PlayerListMessage playerListMessage = 13;</code>
       */
      public Builder setPlayerListMessage(de.pokerth.protocol.ProtoBuf.PlayerListMessage value) {
        copyOnWrite();
        instance.setPlayerListMessage(value);
        return this;
        }
      /**
       * <code>optional .PlayerListMessage playerListMessage = 13;</code>
       */
      public Builder setPlayerListMessage(
          de.pokerth.protocol.ProtoBuf.PlayerListMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setPlayerListMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .PlayerListMessage playerListMessage = 13;</code>
       */
      public Builder mergePlayerListMessage(de.pokerth.protocol.ProtoBuf.PlayerListMessage value) {
        copyOnWrite();
        instance.mergePlayerListMessage(value);
        return this;
      }
      /**
       * <code>optional .PlayerListMessage playerListMessage = 13;</code>
       */
      public Builder clearPlayerListMessage() {  copyOnWrite();
        instance.clearPlayerListMessage();
        return this;
      }

      /**
       * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
       */
      public boolean hasGameListNewMessage() {
        return instance.hasGameListNewMessage();
      }
      /**
       * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameListNewMessage getGameListNewMessage() {
        return instance.getGameListNewMessage();
      }
      /**
       * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
       */
      public Builder setGameListNewMessage(de.pokerth.protocol.ProtoBuf.GameListNewMessage value) {
        copyOnWrite();
        instance.setGameListNewMessage(value);
        return this;
        }
      /**
       * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
       */
      public Builder setGameListNewMessage(
          de.pokerth.protocol.ProtoBuf.GameListNewMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameListNewMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
       */
      public Builder mergeGameListNewMessage(de.pokerth.protocol.ProtoBuf.GameListNewMessage value) {
        copyOnWrite();
        instance.mergeGameListNewMessage(value);
        return this;
      }
      /**
       * <code>optional .GameListNewMessage gameListNewMessage = 14;</code>
       */
      public Builder clearGameListNewMessage() {  copyOnWrite();
        instance.clearGameListNewMessage();
        return this;
      }

      /**
       * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
       */
      public boolean hasGameListUpdateMessage() {
        return instance.hasGameListUpdateMessage();
      }
      /**
       * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameListUpdateMessage getGameListUpdateMessage() {
        return instance.getGameListUpdateMessage();
      }
      /**
       * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
       */
      public Builder setGameListUpdateMessage(de.pokerth.protocol.ProtoBuf.GameListUpdateMessage value) {
        copyOnWrite();
        instance.setGameListUpdateMessage(value);
        return this;
        }
      /**
       * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
       */
      public Builder setGameListUpdateMessage(
          de.pokerth.protocol.ProtoBuf.GameListUpdateMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameListUpdateMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
       */
      public Builder mergeGameListUpdateMessage(de.pokerth.protocol.ProtoBuf.GameListUpdateMessage value) {
        copyOnWrite();
        instance.mergeGameListUpdateMessage(value);
        return this;
      }
      /**
       * <code>optional .GameListUpdateMessage gameListUpdateMessage = 15;</code>
       */
      public Builder clearGameListUpdateMessage() {  copyOnWrite();
        instance.clearGameListUpdateMessage();
        return this;
      }

      /**
       * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
       */
      public boolean hasGameListPlayerJoinedMessage() {
        return instance.hasGameListPlayerJoinedMessage();
      }
      /**
       * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage getGameListPlayerJoinedMessage() {
        return instance.getGameListPlayerJoinedMessage();
      }
      /**
       * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
       */
      public Builder setGameListPlayerJoinedMessage(de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage value) {
        copyOnWrite();
        instance.setGameListPlayerJoinedMessage(value);
        return this;
        }
      /**
       * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
       */
      public Builder setGameListPlayerJoinedMessage(
          de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameListPlayerJoinedMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
       */
      public Builder mergeGameListPlayerJoinedMessage(de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage value) {
        copyOnWrite();
        instance.mergeGameListPlayerJoinedMessage(value);
        return this;
      }
      /**
       * <code>optional .GameListPlayerJoinedMessage gameListPlayerJoinedMessage = 16;</code>
       */
      public Builder clearGameListPlayerJoinedMessage() {  copyOnWrite();
        instance.clearGameListPlayerJoinedMessage();
        return this;
      }

      /**
       * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
       */
      public boolean hasGameListPlayerLeftMessage() {
        return instance.hasGameListPlayerLeftMessage();
      }
      /**
       * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage getGameListPlayerLeftMessage() {
        return instance.getGameListPlayerLeftMessage();
      }
      /**
       * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
       */
      public Builder setGameListPlayerLeftMessage(de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage value) {
        copyOnWrite();
        instance.setGameListPlayerLeftMessage(value);
        return this;
        }
      /**
       * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
       */
      public Builder setGameListPlayerLeftMessage(
          de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameListPlayerLeftMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
       */
      public Builder mergeGameListPlayerLeftMessage(de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage value) {
        copyOnWrite();
        instance.mergeGameListPlayerLeftMessage(value);
        return this;
      }
      /**
       * <code>optional .GameListPlayerLeftMessage gameListPlayerLeftMessage = 17;</code>
       */
      public Builder clearGameListPlayerLeftMessage() {  copyOnWrite();
        instance.clearGameListPlayerLeftMessage();
        return this;
      }

      /**
       * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
       */
      public boolean hasGameListAdminChangedMessage() {
        return instance.hasGameListAdminChangedMessage();
      }
      /**
       * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage getGameListAdminChangedMessage() {
        return instance.getGameListAdminChangedMessage();
      }
      /**
       * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
       */
      public Builder setGameListAdminChangedMessage(de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage value) {
        copyOnWrite();
        instance.setGameListAdminChangedMessage(value);
        return this;
        }
      /**
       * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
       */
      public Builder setGameListAdminChangedMessage(
          de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameListAdminChangedMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
       */
      public Builder mergeGameListAdminChangedMessage(de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage value) {
        copyOnWrite();
        instance.mergeGameListAdminChangedMessage(value);
        return this;
      }
      /**
       * <code>optional .GameListAdminChangedMessage gameListAdminChangedMessage = 18;</code>
       */
      public Builder clearGameListAdminChangedMessage() {  copyOnWrite();
        instance.clearGameListAdminChangedMessage();
        return this;
      }

      /**
       * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
       */
      public boolean hasPlayerInfoRequestMessage() {
        return instance.hasPlayerInfoRequestMessage();
      }
      /**
       * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage getPlayerInfoRequestMessage() {
        return instance.getPlayerInfoRequestMessage();
      }
      /**
       * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
       */
      public Builder setPlayerInfoRequestMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage value) {
        copyOnWrite();
        instance.setPlayerInfoRequestMessage(value);
        return this;
        }
      /**
       * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
       */
      public Builder setPlayerInfoRequestMessage(
          de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setPlayerInfoRequestMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
       */
      public Builder mergePlayerInfoRequestMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage value) {
        copyOnWrite();
        instance.mergePlayerInfoRequestMessage(value);
        return this;
      }
      /**
       * <code>optional .PlayerInfoRequestMessage playerInfoRequestMessage = 19;</code>
       */
      public Builder clearPlayerInfoRequestMessage() {  copyOnWrite();
        instance.clearPlayerInfoRequestMessage();
        return this;
      }

      /**
       * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
       */
      public boolean hasPlayerInfoReplyMessage() {
        return instance.hasPlayerInfoReplyMessage();
      }
      /**
       * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage getPlayerInfoReplyMessage() {
        return instance.getPlayerInfoReplyMessage();
      }
      /**
       * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
       */
      public Builder setPlayerInfoReplyMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage value) {
        copyOnWrite();
        instance.setPlayerInfoReplyMessage(value);
        return this;
        }
      /**
       * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
       */
      public Builder setPlayerInfoReplyMessage(
          de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setPlayerInfoReplyMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
       */
      public Builder mergePlayerInfoReplyMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage value) {
        copyOnWrite();
        instance.mergePlayerInfoReplyMessage(value);
        return this;
      }
      /**
       * <code>optional .PlayerInfoReplyMessage playerInfoReplyMessage = 20;</code>
       */
      public Builder clearPlayerInfoReplyMessage() {  copyOnWrite();
        instance.clearPlayerInfoReplyMessage();
        return this;
      }

      /**
       * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
       */
      public boolean hasSubscriptionRequestMessage() {
        return instance.hasSubscriptionRequestMessage();
      }
      /**
       * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
       */
      public de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage getSubscriptionRequestMessage() {
        return instance.getSubscriptionRequestMessage();
      }
      /**
       * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
       */
      public Builder setSubscriptionRequestMessage(de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage value) {
        copyOnWrite();
        instance.setSubscriptionRequestMessage(value);
        return this;
        }
      /**
       * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
       */
      public Builder setSubscriptionRequestMessage(
          de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setSubscriptionRequestMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
       */
      public Builder mergeSubscriptionRequestMessage(de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage value) {
        copyOnWrite();
        instance.mergeSubscriptionRequestMessage(value);
        return this;
      }
      /**
       * <code>optional .SubscriptionRequestMessage subscriptionRequestMessage = 21;</code>
       */
      public Builder clearSubscriptionRequestMessage() {  copyOnWrite();
        instance.clearSubscriptionRequestMessage();
        return this;
      }

      /**
       * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
       */
      public boolean hasJoinExistingGameMessage() {
        return instance.hasJoinExistingGameMessage();
      }
      /**
       * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
       */
      public de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage getJoinExistingGameMessage() {
        return instance.getJoinExistingGameMessage();
      }
      /**
       * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
       */
      public Builder setJoinExistingGameMessage(de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage value) {
        copyOnWrite();
        instance.setJoinExistingGameMessage(value);
        return this;
        }
      /**
       * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
       */
      public Builder setJoinExistingGameMessage(
          de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setJoinExistingGameMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
       */
      public Builder mergeJoinExistingGameMessage(de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage value) {
        copyOnWrite();
        instance.mergeJoinExistingGameMessage(value);
        return this;
      }
      /**
       * <code>optional .JoinExistingGameMessage joinExistingGameMessage = 22;</code>
       */
      public Builder clearJoinExistingGameMessage() {  copyOnWrite();
        instance.clearJoinExistingGameMessage();
        return this;
      }

      /**
       * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
       */
      public boolean hasJoinNewGameMessage() {
        return instance.hasJoinNewGameMessage();
      }
      /**
       * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
       */
      public de.pokerth.protocol.ProtoBuf.JoinNewGameMessage getJoinNewGameMessage() {
        return instance.getJoinNewGameMessage();
      }
      /**
       * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
       */
      public Builder setJoinNewGameMessage(de.pokerth.protocol.ProtoBuf.JoinNewGameMessage value) {
        copyOnWrite();
        instance.setJoinNewGameMessage(value);
        return this;
        }
      /**
       * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
       */
      public Builder setJoinNewGameMessage(
          de.pokerth.protocol.ProtoBuf.JoinNewGameMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setJoinNewGameMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
       */
      public Builder mergeJoinNewGameMessage(de.pokerth.protocol.ProtoBuf.JoinNewGameMessage value) {
        copyOnWrite();
        instance.mergeJoinNewGameMessage(value);
        return this;
      }
      /**
       * <code>optional .JoinNewGameMessage joinNewGameMessage = 23;</code>
       */
      public Builder clearJoinNewGameMessage() {  copyOnWrite();
        instance.clearJoinNewGameMessage();
        return this;
      }

      /**
       * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
       */
      public boolean hasRejoinExistingGameMessage() {
        return instance.hasRejoinExistingGameMessage();
      }
      /**
       * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
       */
      public de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage getRejoinExistingGameMessage() {
        return instance.getRejoinExistingGameMessage();
      }
      /**
       * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
       */
      public Builder setRejoinExistingGameMessage(de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage value) {
        copyOnWrite();
        instance.setRejoinExistingGameMessage(value);
        return this;
        }
      /**
       * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
       */
      public Builder setRejoinExistingGameMessage(
          de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setRejoinExistingGameMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
       */
      public Builder mergeRejoinExistingGameMessage(de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage value) {
        copyOnWrite();
        instance.mergeRejoinExistingGameMessage(value);
        return this;
      }
      /**
       * <code>optional .RejoinExistingGameMessage rejoinExistingGameMessage = 24;</code>
       */
      public Builder clearRejoinExistingGameMessage() {  copyOnWrite();
        instance.clearRejoinExistingGameMessage();
        return this;
      }

      /**
       * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
       */
      public boolean hasJoinGameAckMessage() {
        return instance.hasJoinGameAckMessage();
      }
      /**
       * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
       */
      public de.pokerth.protocol.ProtoBuf.JoinGameAckMessage getJoinGameAckMessage() {
        return instance.getJoinGameAckMessage();
      }
      /**
       * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
       */
      public Builder setJoinGameAckMessage(de.pokerth.protocol.ProtoBuf.JoinGameAckMessage value) {
        copyOnWrite();
        instance.setJoinGameAckMessage(value);
        return this;
        }
      /**
       * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
       */
      public Builder setJoinGameAckMessage(
          de.pokerth.protocol.ProtoBuf.JoinGameAckMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setJoinGameAckMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
       */
      public Builder mergeJoinGameAckMessage(de.pokerth.protocol.ProtoBuf.JoinGameAckMessage value) {
        copyOnWrite();
        instance.mergeJoinGameAckMessage(value);
        return this;
      }
      /**
       * <code>optional .JoinGameAckMessage joinGameAckMessage = 25;</code>
       */
      public Builder clearJoinGameAckMessage() {  copyOnWrite();
        instance.clearJoinGameAckMessage();
        return this;
      }

      /**
       * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
       */
      public boolean hasJoinGameFailedMessage() {
        return instance.hasJoinGameFailedMessage();
      }
      /**
       * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
       */
      public de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage getJoinGameFailedMessage() {
        return instance.getJoinGameFailedMessage();
      }
      /**
       * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
       */
      public Builder setJoinGameFailedMessage(de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage value) {
        copyOnWrite();
        instance.setJoinGameFailedMessage(value);
        return this;
        }
      /**
       * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
       */
      public Builder setJoinGameFailedMessage(
          de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setJoinGameFailedMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
       */
      public Builder mergeJoinGameFailedMessage(de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage value) {
        copyOnWrite();
        instance.mergeJoinGameFailedMessage(value);
        return this;
      }
      /**
       * <code>optional .JoinGameFailedMessage joinGameFailedMessage = 26;</code>
       */
      public Builder clearJoinGameFailedMessage() {  copyOnWrite();
        instance.clearJoinGameFailedMessage();
        return this;
      }

      /**
       * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
       */
      public boolean hasGamePlayerJoinedMessage() {
        return instance.hasGamePlayerJoinedMessage();
      }
      /**
       * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage getGamePlayerJoinedMessage() {
        return instance.getGamePlayerJoinedMessage();
      }
      /**
       * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
       */
      public Builder setGamePlayerJoinedMessage(de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage value) {
        copyOnWrite();
        instance.setGamePlayerJoinedMessage(value);
        return this;
        }
      /**
       * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
       */
      public Builder setGamePlayerJoinedMessage(
          de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGamePlayerJoinedMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
       */
      public Builder mergeGamePlayerJoinedMessage(de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage value) {
        copyOnWrite();
        instance.mergeGamePlayerJoinedMessage(value);
        return this;
      }
      /**
       * <code>optional .GamePlayerJoinedMessage gamePlayerJoinedMessage = 27;</code>
       */
      public Builder clearGamePlayerJoinedMessage() {  copyOnWrite();
        instance.clearGamePlayerJoinedMessage();
        return this;
      }

      /**
       * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
       */
      public boolean hasGamePlayerLeftMessage() {
        return instance.hasGamePlayerLeftMessage();
      }
      /**
       * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage getGamePlayerLeftMessage() {
        return instance.getGamePlayerLeftMessage();
      }
      /**
       * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
       */
      public Builder setGamePlayerLeftMessage(de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage value) {
        copyOnWrite();
        instance.setGamePlayerLeftMessage(value);
        return this;
        }
      /**
       * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
       */
      public Builder setGamePlayerLeftMessage(
          de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGamePlayerLeftMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
       */
      public Builder mergeGamePlayerLeftMessage(de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage value) {
        copyOnWrite();
        instance.mergeGamePlayerLeftMessage(value);
        return this;
      }
      /**
       * <code>optional .GamePlayerLeftMessage gamePlayerLeftMessage = 28;</code>
       */
      public Builder clearGamePlayerLeftMessage() {  copyOnWrite();
        instance.clearGamePlayerLeftMessage();
        return this;
      }

      /**
       * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
       */
      public boolean hasGameAdminChangedMessage() {
        return instance.hasGameAdminChangedMessage();
      }
      /**
       * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage getGameAdminChangedMessage() {
        return instance.getGameAdminChangedMessage();
      }
      /**
       * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
       */
      public Builder setGameAdminChangedMessage(de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage value) {
        copyOnWrite();
        instance.setGameAdminChangedMessage(value);
        return this;
        }
      /**
       * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
       */
      public Builder setGameAdminChangedMessage(
          de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameAdminChangedMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
       */
      public Builder mergeGameAdminChangedMessage(de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage value) {
        copyOnWrite();
        instance.mergeGameAdminChangedMessage(value);
        return this;
      }
      /**
       * <code>optional .GameAdminChangedMessage gameAdminChangedMessage = 29;</code>
       */
      public Builder clearGameAdminChangedMessage() {  copyOnWrite();
        instance.clearGameAdminChangedMessage();
        return this;
      }

      /**
       * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
       */
      public boolean hasRemovedFromGameMessage() {
        return instance.hasRemovedFromGameMessage();
      }
      /**
       * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
       */
      public de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage getRemovedFromGameMessage() {
        return instance.getRemovedFromGameMessage();
      }
      /**
       * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
       */
      public Builder setRemovedFromGameMessage(de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage value) {
        copyOnWrite();
        instance.setRemovedFromGameMessage(value);
        return this;
        }
      /**
       * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
       */
      public Builder setRemovedFromGameMessage(
          de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setRemovedFromGameMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
       */
      public Builder mergeRemovedFromGameMessage(de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage value) {
        copyOnWrite();
        instance.mergeRemovedFromGameMessage(value);
        return this;
      }
      /**
       * <code>optional .RemovedFromGameMessage removedFromGameMessage = 30;</code>
       */
      public Builder clearRemovedFromGameMessage() {  copyOnWrite();
        instance.clearRemovedFromGameMessage();
        return this;
      }

      /**
       * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
       */
      public boolean hasKickPlayerRequestMessage() {
        return instance.hasKickPlayerRequestMessage();
      }
      /**
       * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
       */
      public de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage getKickPlayerRequestMessage() {
        return instance.getKickPlayerRequestMessage();
      }
      /**
       * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
       */
      public Builder setKickPlayerRequestMessage(de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage value) {
        copyOnWrite();
        instance.setKickPlayerRequestMessage(value);
        return this;
        }
      /**
       * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
       */
      public Builder setKickPlayerRequestMessage(
          de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setKickPlayerRequestMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
       */
      public Builder mergeKickPlayerRequestMessage(de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage value) {
        copyOnWrite();
        instance.mergeKickPlayerRequestMessage(value);
        return this;
      }
      /**
       * <code>optional .KickPlayerRequestMessage kickPlayerRequestMessage = 31;</code>
       */
      public Builder clearKickPlayerRequestMessage() {  copyOnWrite();
        instance.clearKickPlayerRequestMessage();
        return this;
      }

      /**
       * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
       */
      public boolean hasLeaveGameRequestMessage() {
        return instance.hasLeaveGameRequestMessage();
      }
      /**
       * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
       */
      public de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage getLeaveGameRequestMessage() {
        return instance.getLeaveGameRequestMessage();
      }
      /**
       * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
       */
      public Builder setLeaveGameRequestMessage(de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage value) {
        copyOnWrite();
        instance.setLeaveGameRequestMessage(value);
        return this;
        }
      /**
       * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
       */
      public Builder setLeaveGameRequestMessage(
          de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setLeaveGameRequestMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
       */
      public Builder mergeLeaveGameRequestMessage(de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage value) {
        copyOnWrite();
        instance.mergeLeaveGameRequestMessage(value);
        return this;
      }
      /**
       * <code>optional .LeaveGameRequestMessage leaveGameRequestMessage = 32;</code>
       */
      public Builder clearLeaveGameRequestMessage() {  copyOnWrite();
        instance.clearLeaveGameRequestMessage();
        return this;
      }

      /**
       * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
       */
      public boolean hasInvitePlayerToGameMessage() {
        return instance.hasInvitePlayerToGameMessage();
      }
      /**
       * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
       */
      public de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage getInvitePlayerToGameMessage() {
        return instance.getInvitePlayerToGameMessage();
      }
      /**
       * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
       */
      public Builder setInvitePlayerToGameMessage(de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage value) {
        copyOnWrite();
        instance.setInvitePlayerToGameMessage(value);
        return this;
        }
      /**
       * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
       */
      public Builder setInvitePlayerToGameMessage(
          de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setInvitePlayerToGameMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
       */
      public Builder mergeInvitePlayerToGameMessage(de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage value) {
        copyOnWrite();
        instance.mergeInvitePlayerToGameMessage(value);
        return this;
      }
      /**
       * <code>optional .InvitePlayerToGameMessage invitePlayerToGameMessage = 33;</code>
       */
      public Builder clearInvitePlayerToGameMessage() {  copyOnWrite();
        instance.clearInvitePlayerToGameMessage();
        return this;
      }

      /**
       * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
       */
      public boolean hasInviteNotifyMessage() {
        return instance.hasInviteNotifyMessage();
      }
      /**
       * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
       */
      public de.pokerth.protocol.ProtoBuf.InviteNotifyMessage getInviteNotifyMessage() {
        return instance.getInviteNotifyMessage();
      }
      /**
       * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
       */
      public Builder setInviteNotifyMessage(de.pokerth.protocol.ProtoBuf.InviteNotifyMessage value) {
        copyOnWrite();
        instance.setInviteNotifyMessage(value);
        return this;
        }
      /**
       * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
       */
      public Builder setInviteNotifyMessage(
          de.pokerth.protocol.ProtoBuf.InviteNotifyMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setInviteNotifyMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
       */
      public Builder mergeInviteNotifyMessage(de.pokerth.protocol.ProtoBuf.InviteNotifyMessage value) {
        copyOnWrite();
        instance.mergeInviteNotifyMessage(value);
        return this;
      }
      /**
       * <code>optional .InviteNotifyMessage inviteNotifyMessage = 34;</code>
       */
      public Builder clearInviteNotifyMessage() {  copyOnWrite();
        instance.clearInviteNotifyMessage();
        return this;
      }

      /**
       * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
       */
      public boolean hasRejectGameInvitationMessage() {
        return instance.hasRejectGameInvitationMessage();
      }
      /**
       * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
       */
      public de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage getRejectGameInvitationMessage() {
        return instance.getRejectGameInvitationMessage();
      }
      /**
       * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
       */
      public Builder setRejectGameInvitationMessage(de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage value) {
        copyOnWrite();
        instance.setRejectGameInvitationMessage(value);
        return this;
        }
      /**
       * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
       */
      public Builder setRejectGameInvitationMessage(
          de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setRejectGameInvitationMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
       */
      public Builder mergeRejectGameInvitationMessage(de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage value) {
        copyOnWrite();
        instance.mergeRejectGameInvitationMessage(value);
        return this;
      }
      /**
       * <code>optional .RejectGameInvitationMessage rejectGameInvitationMessage = 35;</code>
       */
      public Builder clearRejectGameInvitationMessage() {  copyOnWrite();
        instance.clearRejectGameInvitationMessage();
        return this;
      }

      /**
       * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
       */
      public boolean hasRejectInvNotifyMessage() {
        return instance.hasRejectInvNotifyMessage();
      }
      /**
       * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
       */
      public de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage getRejectInvNotifyMessage() {
        return instance.getRejectInvNotifyMessage();
      }
      /**
       * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
       */
      public Builder setRejectInvNotifyMessage(de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage value) {
        copyOnWrite();
        instance.setRejectInvNotifyMessage(value);
        return this;
        }
      /**
       * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
       */
      public Builder setRejectInvNotifyMessage(
          de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setRejectInvNotifyMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
       */
      public Builder mergeRejectInvNotifyMessage(de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage value) {
        copyOnWrite();
        instance.mergeRejectInvNotifyMessage(value);
        return this;
      }
      /**
       * <code>optional .RejectInvNotifyMessage rejectInvNotifyMessage = 36;</code>
       */
      public Builder clearRejectInvNotifyMessage() {  copyOnWrite();
        instance.clearRejectInvNotifyMessage();
        return this;
      }

      /**
       * <code>optional .StartEventMessage startEventMessage = 37;</code>
       */
      public boolean hasStartEventMessage() {
        return instance.hasStartEventMessage();
      }
      /**
       * <code>optional .StartEventMessage startEventMessage = 37;</code>
       */
      public de.pokerth.protocol.ProtoBuf.StartEventMessage getStartEventMessage() {
        return instance.getStartEventMessage();
      }
      /**
       * <code>optional .StartEventMessage startEventMessage = 37;</code>
       */
      public Builder setStartEventMessage(de.pokerth.protocol.ProtoBuf.StartEventMessage value) {
        copyOnWrite();
        instance.setStartEventMessage(value);
        return this;
        }
      /**
       * <code>optional .StartEventMessage startEventMessage = 37;</code>
       */
      public Builder setStartEventMessage(
          de.pokerth.protocol.ProtoBuf.StartEventMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setStartEventMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .StartEventMessage startEventMessage = 37;</code>
       */
      public Builder mergeStartEventMessage(de.pokerth.protocol.ProtoBuf.StartEventMessage value) {
        copyOnWrite();
        instance.mergeStartEventMessage(value);
        return this;
      }
      /**
       * <code>optional .StartEventMessage startEventMessage = 37;</code>
       */
      public Builder clearStartEventMessage() {  copyOnWrite();
        instance.clearStartEventMessage();
        return this;
      }

      /**
       * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
       */
      public boolean hasStartEventAckMessage() {
        return instance.hasStartEventAckMessage();
      }
      /**
       * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
       */
      public de.pokerth.protocol.ProtoBuf.StartEventAckMessage getStartEventAckMessage() {
        return instance.getStartEventAckMessage();
      }
      /**
       * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
       */
      public Builder setStartEventAckMessage(de.pokerth.protocol.ProtoBuf.StartEventAckMessage value) {
        copyOnWrite();
        instance.setStartEventAckMessage(value);
        return this;
        }
      /**
       * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
       */
      public Builder setStartEventAckMessage(
          de.pokerth.protocol.ProtoBuf.StartEventAckMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setStartEventAckMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
       */
      public Builder mergeStartEventAckMessage(de.pokerth.protocol.ProtoBuf.StartEventAckMessage value) {
        copyOnWrite();
        instance.mergeStartEventAckMessage(value);
        return this;
      }
      /**
       * <code>optional .StartEventAckMessage startEventAckMessage = 38;</code>
       */
      public Builder clearStartEventAckMessage() {  copyOnWrite();
        instance.clearStartEventAckMessage();
        return this;
      }

      /**
       * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
       */
      public boolean hasGameStartInitialMessage() {
        return instance.hasGameStartInitialMessage();
      }
      /**
       * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameStartInitialMessage getGameStartInitialMessage() {
        return instance.getGameStartInitialMessage();
      }
      /**
       * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
       */
      public Builder setGameStartInitialMessage(de.pokerth.protocol.ProtoBuf.GameStartInitialMessage value) {
        copyOnWrite();
        instance.setGameStartInitialMessage(value);
        return this;
        }
      /**
       * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
       */
      public Builder setGameStartInitialMessage(
          de.pokerth.protocol.ProtoBuf.GameStartInitialMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameStartInitialMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
       */
      public Builder mergeGameStartInitialMessage(de.pokerth.protocol.ProtoBuf.GameStartInitialMessage value) {
        copyOnWrite();
        instance.mergeGameStartInitialMessage(value);
        return this;
      }
      /**
       * <code>optional .GameStartInitialMessage gameStartInitialMessage = 39;</code>
       */
      public Builder clearGameStartInitialMessage() {  copyOnWrite();
        instance.clearGameStartInitialMessage();
        return this;
      }

      /**
       * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
       */
      public boolean hasGameStartRejoinMessage() {
        return instance.hasGameStartRejoinMessage();
      }
      /**
       * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage getGameStartRejoinMessage() {
        return instance.getGameStartRejoinMessage();
      }
      /**
       * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
       */
      public Builder setGameStartRejoinMessage(de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage value) {
        copyOnWrite();
        instance.setGameStartRejoinMessage(value);
        return this;
        }
      /**
       * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
       */
      public Builder setGameStartRejoinMessage(
          de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameStartRejoinMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
       */
      public Builder mergeGameStartRejoinMessage(de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage value) {
        copyOnWrite();
        instance.mergeGameStartRejoinMessage(value);
        return this;
      }
      /**
       * <code>optional .GameStartRejoinMessage gameStartRejoinMessage = 40;</code>
       */
      public Builder clearGameStartRejoinMessage() {  copyOnWrite();
        instance.clearGameStartRejoinMessage();
        return this;
      }

      /**
       * <code>optional .HandStartMessage handStartMessage = 41;</code>
       */
      public boolean hasHandStartMessage() {
        return instance.hasHandStartMessage();
      }
      /**
       * <code>optional .HandStartMessage handStartMessage = 41;</code>
       */
      public de.pokerth.protocol.ProtoBuf.HandStartMessage getHandStartMessage() {
        return instance.getHandStartMessage();
      }
      /**
       * <code>optional .HandStartMessage handStartMessage = 41;</code>
       */
      public Builder setHandStartMessage(de.pokerth.protocol.ProtoBuf.HandStartMessage value) {
        copyOnWrite();
        instance.setHandStartMessage(value);
        return this;
        }
      /**
       * <code>optional .HandStartMessage handStartMessage = 41;</code>
       */
      public Builder setHandStartMessage(
          de.pokerth.protocol.ProtoBuf.HandStartMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setHandStartMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .HandStartMessage handStartMessage = 41;</code>
       */
      public Builder mergeHandStartMessage(de.pokerth.protocol.ProtoBuf.HandStartMessage value) {
        copyOnWrite();
        instance.mergeHandStartMessage(value);
        return this;
      }
      /**
       * <code>optional .HandStartMessage handStartMessage = 41;</code>
       */
      public Builder clearHandStartMessage() {  copyOnWrite();
        instance.clearHandStartMessage();
        return this;
      }

      /**
       * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
       */
      public boolean hasPlayersTurnMessage() {
        return instance.hasPlayersTurnMessage();
      }
      /**
       * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PlayersTurnMessage getPlayersTurnMessage() {
        return instance.getPlayersTurnMessage();
      }
      /**
       * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
       */
      public Builder setPlayersTurnMessage(de.pokerth.protocol.ProtoBuf.PlayersTurnMessage value) {
        copyOnWrite();
        instance.setPlayersTurnMessage(value);
        return this;
        }
      /**
       * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
       */
      public Builder setPlayersTurnMessage(
          de.pokerth.protocol.ProtoBuf.PlayersTurnMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setPlayersTurnMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
       */
      public Builder mergePlayersTurnMessage(de.pokerth.protocol.ProtoBuf.PlayersTurnMessage value) {
        copyOnWrite();
        instance.mergePlayersTurnMessage(value);
        return this;
      }
      /**
       * <code>optional .PlayersTurnMessage playersTurnMessage = 42;</code>
       */
      public Builder clearPlayersTurnMessage() {  copyOnWrite();
        instance.clearPlayersTurnMessage();
        return this;
      }

      /**
       * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
       */
      public boolean hasMyActionRequestMessage() {
        return instance.hasMyActionRequestMessage();
      }
      /**
       * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
       */
      public de.pokerth.protocol.ProtoBuf.MyActionRequestMessage getMyActionRequestMessage() {
        return instance.getMyActionRequestMessage();
      }
      /**
       * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
       */
      public Builder setMyActionRequestMessage(de.pokerth.protocol.ProtoBuf.MyActionRequestMessage value) {
        copyOnWrite();
        instance.setMyActionRequestMessage(value);
        return this;
        }
      /**
       * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
       */
      public Builder setMyActionRequestMessage(
          de.pokerth.protocol.ProtoBuf.MyActionRequestMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setMyActionRequestMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
       */
      public Builder mergeMyActionRequestMessage(de.pokerth.protocol.ProtoBuf.MyActionRequestMessage value) {
        copyOnWrite();
        instance.mergeMyActionRequestMessage(value);
        return this;
      }
      /**
       * <code>optional .MyActionRequestMessage myActionRequestMessage = 43;</code>
       */
      public Builder clearMyActionRequestMessage() {  copyOnWrite();
        instance.clearMyActionRequestMessage();
        return this;
      }

      /**
       * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
       */
      public boolean hasYourActionRejectedMessage() {
        return instance.hasYourActionRejectedMessage();
      }
      /**
       * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
       */
      public de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage getYourActionRejectedMessage() {
        return instance.getYourActionRejectedMessage();
      }
      /**
       * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
       */
      public Builder setYourActionRejectedMessage(de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage value) {
        copyOnWrite();
        instance.setYourActionRejectedMessage(value);
        return this;
        }
      /**
       * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
       */
      public Builder setYourActionRejectedMessage(
          de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setYourActionRejectedMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
       */
      public Builder mergeYourActionRejectedMessage(de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage value) {
        copyOnWrite();
        instance.mergeYourActionRejectedMessage(value);
        return this;
      }
      /**
       * <code>optional .YourActionRejectedMessage yourActionRejectedMessage = 44;</code>
       */
      public Builder clearYourActionRejectedMessage() {  copyOnWrite();
        instance.clearYourActionRejectedMessage();
        return this;
      }

      /**
       * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
       */
      public boolean hasPlayersActionDoneMessage() {
        return instance.hasPlayersActionDoneMessage();
      }
      /**
       * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage getPlayersActionDoneMessage() {
        return instance.getPlayersActionDoneMessage();
      }
      /**
       * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
       */
      public Builder setPlayersActionDoneMessage(de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage value) {
        copyOnWrite();
        instance.setPlayersActionDoneMessage(value);
        return this;
        }
      /**
       * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
       */
      public Builder setPlayersActionDoneMessage(
          de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setPlayersActionDoneMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
       */
      public Builder mergePlayersActionDoneMessage(de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage value) {
        copyOnWrite();
        instance.mergePlayersActionDoneMessage(value);
        return this;
      }
      /**
       * <code>optional .PlayersActionDoneMessage playersActionDoneMessage = 45;</code>
       */
      public Builder clearPlayersActionDoneMessage() {  copyOnWrite();
        instance.clearPlayersActionDoneMessage();
        return this;
      }

      /**
       * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
       */
      public boolean hasDealFlopCardsMessage() {
        return instance.hasDealFlopCardsMessage();
      }
      /**
       * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
       */
      public de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage getDealFlopCardsMessage() {
        return instance.getDealFlopCardsMessage();
      }
      /**
       * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
       */
      public Builder setDealFlopCardsMessage(de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage value) {
        copyOnWrite();
        instance.setDealFlopCardsMessage(value);
        return this;
        }
      /**
       * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
       */
      public Builder setDealFlopCardsMessage(
          de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setDealFlopCardsMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
       */
      public Builder mergeDealFlopCardsMessage(de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage value) {
        copyOnWrite();
        instance.mergeDealFlopCardsMessage(value);
        return this;
      }
      /**
       * <code>optional .DealFlopCardsMessage dealFlopCardsMessage = 46;</code>
       */
      public Builder clearDealFlopCardsMessage() {  copyOnWrite();
        instance.clearDealFlopCardsMessage();
        return this;
      }

      /**
       * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
       */
      public boolean hasDealTurnCardMessage() {
        return instance.hasDealTurnCardMessage();
      }
      /**
       * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
       */
      public de.pokerth.protocol.ProtoBuf.DealTurnCardMessage getDealTurnCardMessage() {
        return instance.getDealTurnCardMessage();
      }
      /**
       * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
       */
      public Builder setDealTurnCardMessage(de.pokerth.protocol.ProtoBuf.DealTurnCardMessage value) {
        copyOnWrite();
        instance.setDealTurnCardMessage(value);
        return this;
        }
      /**
       * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
       */
      public Builder setDealTurnCardMessage(
          de.pokerth.protocol.ProtoBuf.DealTurnCardMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setDealTurnCardMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
       */
      public Builder mergeDealTurnCardMessage(de.pokerth.protocol.ProtoBuf.DealTurnCardMessage value) {
        copyOnWrite();
        instance.mergeDealTurnCardMessage(value);
        return this;
      }
      /**
       * <code>optional .DealTurnCardMessage dealTurnCardMessage = 47;</code>
       */
      public Builder clearDealTurnCardMessage() {  copyOnWrite();
        instance.clearDealTurnCardMessage();
        return this;
      }

      /**
       * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
       */
      public boolean hasDealRiverCardMessage() {
        return instance.hasDealRiverCardMessage();
      }
      /**
       * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
       */
      public de.pokerth.protocol.ProtoBuf.DealRiverCardMessage getDealRiverCardMessage() {
        return instance.getDealRiverCardMessage();
      }
      /**
       * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
       */
      public Builder setDealRiverCardMessage(de.pokerth.protocol.ProtoBuf.DealRiverCardMessage value) {
        copyOnWrite();
        instance.setDealRiverCardMessage(value);
        return this;
        }
      /**
       * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
       */
      public Builder setDealRiverCardMessage(
          de.pokerth.protocol.ProtoBuf.DealRiverCardMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setDealRiverCardMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
       */
      public Builder mergeDealRiverCardMessage(de.pokerth.protocol.ProtoBuf.DealRiverCardMessage value) {
        copyOnWrite();
        instance.mergeDealRiverCardMessage(value);
        return this;
      }
      /**
       * <code>optional .DealRiverCardMessage dealRiverCardMessage = 48;</code>
       */
      public Builder clearDealRiverCardMessage() {  copyOnWrite();
        instance.clearDealRiverCardMessage();
        return this;
      }

      /**
       * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
       */
      public boolean hasAllInShowCardsMessage() {
        return instance.hasAllInShowCardsMessage();
      }
      /**
       * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage getAllInShowCardsMessage() {
        return instance.getAllInShowCardsMessage();
      }
      /**
       * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
       */
      public Builder setAllInShowCardsMessage(de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage value) {
        copyOnWrite();
        instance.setAllInShowCardsMessage(value);
        return this;
        }
      /**
       * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
       */
      public Builder setAllInShowCardsMessage(
          de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAllInShowCardsMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
       */
      public Builder mergeAllInShowCardsMessage(de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage value) {
        copyOnWrite();
        instance.mergeAllInShowCardsMessage(value);
        return this;
      }
      /**
       * <code>optional .AllInShowCardsMessage allInShowCardsMessage = 49;</code>
       */
      public Builder clearAllInShowCardsMessage() {  copyOnWrite();
        instance.clearAllInShowCardsMessage();
        return this;
      }

      /**
       * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
       */
      public boolean hasEndOfHandShowCardsMessage() {
        return instance.hasEndOfHandShowCardsMessage();
      }
      /**
       * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
       */
      public de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage getEndOfHandShowCardsMessage() {
        return instance.getEndOfHandShowCardsMessage();
      }
      /**
       * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
       */
      public Builder setEndOfHandShowCardsMessage(de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage value) {
        copyOnWrite();
        instance.setEndOfHandShowCardsMessage(value);
        return this;
        }
      /**
       * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
       */
      public Builder setEndOfHandShowCardsMessage(
          de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setEndOfHandShowCardsMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
       */
      public Builder mergeEndOfHandShowCardsMessage(de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage value) {
        copyOnWrite();
        instance.mergeEndOfHandShowCardsMessage(value);
        return this;
      }
      /**
       * <code>optional .EndOfHandShowCardsMessage endOfHandShowCardsMessage = 50;</code>
       */
      public Builder clearEndOfHandShowCardsMessage() {  copyOnWrite();
        instance.clearEndOfHandShowCardsMessage();
        return this;
      }

      /**
       * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
       */
      public boolean hasEndOfHandHideCardsMessage() {
        return instance.hasEndOfHandHideCardsMessage();
      }
      /**
       * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
       */
      public de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage getEndOfHandHideCardsMessage() {
        return instance.getEndOfHandHideCardsMessage();
      }
      /**
       * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
       */
      public Builder setEndOfHandHideCardsMessage(de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage value) {
        copyOnWrite();
        instance.setEndOfHandHideCardsMessage(value);
        return this;
        }
      /**
       * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
       */
      public Builder setEndOfHandHideCardsMessage(
          de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setEndOfHandHideCardsMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
       */
      public Builder mergeEndOfHandHideCardsMessage(de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage value) {
        copyOnWrite();
        instance.mergeEndOfHandHideCardsMessage(value);
        return this;
      }
      /**
       * <code>optional .EndOfHandHideCardsMessage endOfHandHideCardsMessage = 51;</code>
       */
      public Builder clearEndOfHandHideCardsMessage() {  copyOnWrite();
        instance.clearEndOfHandHideCardsMessage();
        return this;
      }

      /**
       * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
       */
      public boolean hasShowMyCardsRequestMessage() {
        return instance.hasShowMyCardsRequestMessage();
      }
      /**
       * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage getShowMyCardsRequestMessage() {
        return instance.getShowMyCardsRequestMessage();
      }
      /**
       * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
       */
      public Builder setShowMyCardsRequestMessage(de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage value) {
        copyOnWrite();
        instance.setShowMyCardsRequestMessage(value);
        return this;
        }
      /**
       * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
       */
      public Builder setShowMyCardsRequestMessage(
          de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setShowMyCardsRequestMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
       */
      public Builder mergeShowMyCardsRequestMessage(de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage value) {
        copyOnWrite();
        instance.mergeShowMyCardsRequestMessage(value);
        return this;
      }
      /**
       * <code>optional .ShowMyCardsRequestMessage showMyCardsRequestMessage = 52;</code>
       */
      public Builder clearShowMyCardsRequestMessage() {  copyOnWrite();
        instance.clearShowMyCardsRequestMessage();
        return this;
      }

      /**
       * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
       */
      public boolean hasAfterHandShowCardsMessage() {
        return instance.hasAfterHandShowCardsMessage();
      }
      /**
       * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage getAfterHandShowCardsMessage() {
        return instance.getAfterHandShowCardsMessage();
      }
      /**
       * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
       */
      public Builder setAfterHandShowCardsMessage(de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage value) {
        copyOnWrite();
        instance.setAfterHandShowCardsMessage(value);
        return this;
        }
      /**
       * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
       */
      public Builder setAfterHandShowCardsMessage(
          de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAfterHandShowCardsMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
       */
      public Builder mergeAfterHandShowCardsMessage(de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage value) {
        copyOnWrite();
        instance.mergeAfterHandShowCardsMessage(value);
        return this;
      }
      /**
       * <code>optional .AfterHandShowCardsMessage afterHandShowCardsMessage = 53;</code>
       */
      public Builder clearAfterHandShowCardsMessage() {  copyOnWrite();
        instance.clearAfterHandShowCardsMessage();
        return this;
      }

      /**
       * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
       */
      public boolean hasEndOfGameMessage() {
        return instance.hasEndOfGameMessage();
      }
      /**
       * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
       */
      public de.pokerth.protocol.ProtoBuf.EndOfGameMessage getEndOfGameMessage() {
        return instance.getEndOfGameMessage();
      }
      /**
       * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
       */
      public Builder setEndOfGameMessage(de.pokerth.protocol.ProtoBuf.EndOfGameMessage value) {
        copyOnWrite();
        instance.setEndOfGameMessage(value);
        return this;
        }
      /**
       * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
       */
      public Builder setEndOfGameMessage(
          de.pokerth.protocol.ProtoBuf.EndOfGameMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setEndOfGameMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
       */
      public Builder mergeEndOfGameMessage(de.pokerth.protocol.ProtoBuf.EndOfGameMessage value) {
        copyOnWrite();
        instance.mergeEndOfGameMessage(value);
        return this;
      }
      /**
       * <code>optional .EndOfGameMessage endOfGameMessage = 54;</code>
       */
      public Builder clearEndOfGameMessage() {  copyOnWrite();
        instance.clearEndOfGameMessage();
        return this;
      }

      /**
       * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
       */
      public boolean hasPlayerIdChangedMessage() {
        return instance.hasPlayerIdChangedMessage();
      }
      /**
       * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
       */
      public de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage getPlayerIdChangedMessage() {
        return instance.getPlayerIdChangedMessage();
      }
      /**
       * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
       */
      public Builder setPlayerIdChangedMessage(de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage value) {
        copyOnWrite();
        instance.setPlayerIdChangedMessage(value);
        return this;
        }
      /**
       * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
       */
      public Builder setPlayerIdChangedMessage(
          de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setPlayerIdChangedMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
       */
      public Builder mergePlayerIdChangedMessage(de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage value) {
        copyOnWrite();
        instance.mergePlayerIdChangedMessage(value);
        return this;
      }
      /**
       * <code>optional .PlayerIdChangedMessage playerIdChangedMessage = 55;</code>
       */
      public Builder clearPlayerIdChangedMessage() {  copyOnWrite();
        instance.clearPlayerIdChangedMessage();
        return this;
      }

      /**
       * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
       */
      public boolean hasAskKickPlayerMessage() {
        return instance.hasAskKickPlayerMessage();
      }
      /**
       * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage getAskKickPlayerMessage() {
        return instance.getAskKickPlayerMessage();
      }
      /**
       * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
       */
      public Builder setAskKickPlayerMessage(de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage value) {
        copyOnWrite();
        instance.setAskKickPlayerMessage(value);
        return this;
        }
      /**
       * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
       */
      public Builder setAskKickPlayerMessage(
          de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAskKickPlayerMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
       */
      public Builder mergeAskKickPlayerMessage(de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage value) {
        copyOnWrite();
        instance.mergeAskKickPlayerMessage(value);
        return this;
      }
      /**
       * <code>optional .AskKickPlayerMessage askKickPlayerMessage = 56;</code>
       */
      public Builder clearAskKickPlayerMessage() {  copyOnWrite();
        instance.clearAskKickPlayerMessage();
        return this;
      }

      /**
       * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
       */
      public boolean hasAskKickDeniedMessage() {
        return instance.hasAskKickDeniedMessage();
      }
      /**
       * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage getAskKickDeniedMessage() {
        return instance.getAskKickDeniedMessage();
      }
      /**
       * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
       */
      public Builder setAskKickDeniedMessage(de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage value) {
        copyOnWrite();
        instance.setAskKickDeniedMessage(value);
        return this;
        }
      /**
       * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
       */
      public Builder setAskKickDeniedMessage(
          de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAskKickDeniedMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
       */
      public Builder mergeAskKickDeniedMessage(de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage value) {
        copyOnWrite();
        instance.mergeAskKickDeniedMessage(value);
        return this;
      }
      /**
       * <code>optional .AskKickDeniedMessage askKickDeniedMessage = 57;</code>
       */
      public Builder clearAskKickDeniedMessage() {  copyOnWrite();
        instance.clearAskKickDeniedMessage();
        return this;
      }

      /**
       * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
       */
      public boolean hasStartKickPetitionMessage() {
        return instance.hasStartKickPetitionMessage();
      }
      /**
       * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
       */
      public de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage getStartKickPetitionMessage() {
        return instance.getStartKickPetitionMessage();
      }
      /**
       * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
       */
      public Builder setStartKickPetitionMessage(de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage value) {
        copyOnWrite();
        instance.setStartKickPetitionMessage(value);
        return this;
        }
      /**
       * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
       */
      public Builder setStartKickPetitionMessage(
          de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setStartKickPetitionMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
       */
      public Builder mergeStartKickPetitionMessage(de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage value) {
        copyOnWrite();
        instance.mergeStartKickPetitionMessage(value);
        return this;
      }
      /**
       * <code>optional .StartKickPetitionMessage startKickPetitionMessage = 58;</code>
       */
      public Builder clearStartKickPetitionMessage() {  copyOnWrite();
        instance.clearStartKickPetitionMessage();
        return this;
      }

      /**
       * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
       */
      public boolean hasVoteKickRequestMessage() {
        return instance.hasVoteKickRequestMessage();
      }
      /**
       * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
       */
      public de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage getVoteKickRequestMessage() {
        return instance.getVoteKickRequestMessage();
      }
      /**
       * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
       */
      public Builder setVoteKickRequestMessage(de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage value) {
        copyOnWrite();
        instance.setVoteKickRequestMessage(value);
        return this;
        }
      /**
       * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
       */
      public Builder setVoteKickRequestMessage(
          de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setVoteKickRequestMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
       */
      public Builder mergeVoteKickRequestMessage(de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage value) {
        copyOnWrite();
        instance.mergeVoteKickRequestMessage(value);
        return this;
      }
      /**
       * <code>optional .VoteKickRequestMessage voteKickRequestMessage = 59;</code>
       */
      public Builder clearVoteKickRequestMessage() {  copyOnWrite();
        instance.clearVoteKickRequestMessage();
        return this;
      }

      /**
       * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
       */
      public boolean hasVoteKickReplyMessage() {
        return instance.hasVoteKickReplyMessage();
      }
      /**
       * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
       */
      public de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage getVoteKickReplyMessage() {
        return instance.getVoteKickReplyMessage();
      }
      /**
       * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
       */
      public Builder setVoteKickReplyMessage(de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage value) {
        copyOnWrite();
        instance.setVoteKickReplyMessage(value);
        return this;
        }
      /**
       * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
       */
      public Builder setVoteKickReplyMessage(
          de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setVoteKickReplyMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
       */
      public Builder mergeVoteKickReplyMessage(de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage value) {
        copyOnWrite();
        instance.mergeVoteKickReplyMessage(value);
        return this;
      }
      /**
       * <code>optional .VoteKickReplyMessage voteKickReplyMessage = 60;</code>
       */
      public Builder clearVoteKickReplyMessage() {  copyOnWrite();
        instance.clearVoteKickReplyMessage();
        return this;
      }

      /**
       * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
       */
      public boolean hasKickPetitionUpdateMessage() {
        return instance.hasKickPetitionUpdateMessage();
      }
      /**
       * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
       */
      public de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage getKickPetitionUpdateMessage() {
        return instance.getKickPetitionUpdateMessage();
      }
      /**
       * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
       */
      public Builder setKickPetitionUpdateMessage(de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage value) {
        copyOnWrite();
        instance.setKickPetitionUpdateMessage(value);
        return this;
        }
      /**
       * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
       */
      public Builder setKickPetitionUpdateMessage(
          de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setKickPetitionUpdateMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
       */
      public Builder mergeKickPetitionUpdateMessage(de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage value) {
        copyOnWrite();
        instance.mergeKickPetitionUpdateMessage(value);
        return this;
      }
      /**
       * <code>optional .KickPetitionUpdateMessage kickPetitionUpdateMessage = 61;</code>
       */
      public Builder clearKickPetitionUpdateMessage() {  copyOnWrite();
        instance.clearKickPetitionUpdateMessage();
        return this;
      }

      /**
       * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
       */
      public boolean hasEndKickPetitionMessage() {
        return instance.hasEndKickPetitionMessage();
      }
      /**
       * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
       */
      public de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage getEndKickPetitionMessage() {
        return instance.getEndKickPetitionMessage();
      }
      /**
       * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
       */
      public Builder setEndKickPetitionMessage(de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage value) {
        copyOnWrite();
        instance.setEndKickPetitionMessage(value);
        return this;
        }
      /**
       * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
       */
      public Builder setEndKickPetitionMessage(
          de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setEndKickPetitionMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
       */
      public Builder mergeEndKickPetitionMessage(de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage value) {
        copyOnWrite();
        instance.mergeEndKickPetitionMessage(value);
        return this;
      }
      /**
       * <code>optional .EndKickPetitionMessage endKickPetitionMessage = 62;</code>
       */
      public Builder clearEndKickPetitionMessage() {  copyOnWrite();
        instance.clearEndKickPetitionMessage();
        return this;
      }

      /**
       * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
       */
      public boolean hasStatisticsMessage() {
        return instance.hasStatisticsMessage();
      }
      /**
       * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
       */
      public de.pokerth.protocol.ProtoBuf.StatisticsMessage getStatisticsMessage() {
        return instance.getStatisticsMessage();
      }
      /**
       * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
       */
      public Builder setStatisticsMessage(de.pokerth.protocol.ProtoBuf.StatisticsMessage value) {
        copyOnWrite();
        instance.setStatisticsMessage(value);
        return this;
        }
      /**
       * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
       */
      public Builder setStatisticsMessage(
          de.pokerth.protocol.ProtoBuf.StatisticsMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setStatisticsMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
       */
      public Builder mergeStatisticsMessage(de.pokerth.protocol.ProtoBuf.StatisticsMessage value) {
        copyOnWrite();
        instance.mergeStatisticsMessage(value);
        return this;
      }
      /**
       * <code>optional .StatisticsMessage statisticsMessage = 63;</code>
       */
      public Builder clearStatisticsMessage() {  copyOnWrite();
        instance.clearStatisticsMessage();
        return this;
      }

      /**
       * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
       */
      public boolean hasChatRequestMessage() {
        return instance.hasChatRequestMessage();
      }
      /**
       * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ChatRequestMessage getChatRequestMessage() {
        return instance.getChatRequestMessage();
      }
      /**
       * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
       */
      public Builder setChatRequestMessage(de.pokerth.protocol.ProtoBuf.ChatRequestMessage value) {
        copyOnWrite();
        instance.setChatRequestMessage(value);
        return this;
        }
      /**
       * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
       */
      public Builder setChatRequestMessage(
          de.pokerth.protocol.ProtoBuf.ChatRequestMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setChatRequestMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
       */
      public Builder mergeChatRequestMessage(de.pokerth.protocol.ProtoBuf.ChatRequestMessage value) {
        copyOnWrite();
        instance.mergeChatRequestMessage(value);
        return this;
      }
      /**
       * <code>optional .ChatRequestMessage chatRequestMessage = 64;</code>
       */
      public Builder clearChatRequestMessage() {  copyOnWrite();
        instance.clearChatRequestMessage();
        return this;
      }

      /**
       * <code>optional .ChatMessage chatMessage = 65;</code>
       */
      public boolean hasChatMessage() {
        return instance.hasChatMessage();
      }
      /**
       * <code>optional .ChatMessage chatMessage = 65;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ChatMessage getChatMessage() {
        return instance.getChatMessage();
      }
      /**
       * <code>optional .ChatMessage chatMessage = 65;</code>
       */
      public Builder setChatMessage(de.pokerth.protocol.ProtoBuf.ChatMessage value) {
        copyOnWrite();
        instance.setChatMessage(value);
        return this;
        }
      /**
       * <code>optional .ChatMessage chatMessage = 65;</code>
       */
      public Builder setChatMessage(
          de.pokerth.protocol.ProtoBuf.ChatMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setChatMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .ChatMessage chatMessage = 65;</code>
       */
      public Builder mergeChatMessage(de.pokerth.protocol.ProtoBuf.ChatMessage value) {
        copyOnWrite();
        instance.mergeChatMessage(value);
        return this;
      }
      /**
       * <code>optional .ChatMessage chatMessage = 65;</code>
       */
      public Builder clearChatMessage() {  copyOnWrite();
        instance.clearChatMessage();
        return this;
      }

      /**
       * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
       */
      public boolean hasChatRejectMessage() {
        return instance.hasChatRejectMessage();
      }
      /**
       * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ChatRejectMessage getChatRejectMessage() {
        return instance.getChatRejectMessage();
      }
      /**
       * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
       */
      public Builder setChatRejectMessage(de.pokerth.protocol.ProtoBuf.ChatRejectMessage value) {
        copyOnWrite();
        instance.setChatRejectMessage(value);
        return this;
        }
      /**
       * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
       */
      public Builder setChatRejectMessage(
          de.pokerth.protocol.ProtoBuf.ChatRejectMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setChatRejectMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
       */
      public Builder mergeChatRejectMessage(de.pokerth.protocol.ProtoBuf.ChatRejectMessage value) {
        copyOnWrite();
        instance.mergeChatRejectMessage(value);
        return this;
      }
      /**
       * <code>optional .ChatRejectMessage chatRejectMessage = 66;</code>
       */
      public Builder clearChatRejectMessage() {  copyOnWrite();
        instance.clearChatRejectMessage();
        return this;
      }

      /**
       * <code>optional .DialogMessage dialogMessage = 67;</code>
       */
      public boolean hasDialogMessage() {
        return instance.hasDialogMessage();
      }
      /**
       * <code>optional .DialogMessage dialogMessage = 67;</code>
       */
      public de.pokerth.protocol.ProtoBuf.DialogMessage getDialogMessage() {
        return instance.getDialogMessage();
      }
      /**
       * <code>optional .DialogMessage dialogMessage = 67;</code>
       */
      public Builder setDialogMessage(de.pokerth.protocol.ProtoBuf.DialogMessage value) {
        copyOnWrite();
        instance.setDialogMessage(value);
        return this;
        }
      /**
       * <code>optional .DialogMessage dialogMessage = 67;</code>
       */
      public Builder setDialogMessage(
          de.pokerth.protocol.ProtoBuf.DialogMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setDialogMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .DialogMessage dialogMessage = 67;</code>
       */
      public Builder mergeDialogMessage(de.pokerth.protocol.ProtoBuf.DialogMessage value) {
        copyOnWrite();
        instance.mergeDialogMessage(value);
        return this;
      }
      /**
       * <code>optional .DialogMessage dialogMessage = 67;</code>
       */
      public Builder clearDialogMessage() {  copyOnWrite();
        instance.clearDialogMessage();
        return this;
      }

      /**
       * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
       */
      public boolean hasTimeoutWarningMessage() {
        return instance.hasTimeoutWarningMessage();
      }
      /**
       * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
       */
      public de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage getTimeoutWarningMessage() {
        return instance.getTimeoutWarningMessage();
      }
      /**
       * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
       */
      public Builder setTimeoutWarningMessage(de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage value) {
        copyOnWrite();
        instance.setTimeoutWarningMessage(value);
        return this;
        }
      /**
       * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
       */
      public Builder setTimeoutWarningMessage(
          de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setTimeoutWarningMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
       */
      public Builder mergeTimeoutWarningMessage(de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage value) {
        copyOnWrite();
        instance.mergeTimeoutWarningMessage(value);
        return this;
      }
      /**
       * <code>optional .TimeoutWarningMessage timeoutWarningMessage = 68;</code>
       */
      public Builder clearTimeoutWarningMessage() {  copyOnWrite();
        instance.clearTimeoutWarningMessage();
        return this;
      }

      /**
       * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
       */
      public boolean hasResetTimeoutMessage() {
        return instance.hasResetTimeoutMessage();
      }
      /**
       * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage getResetTimeoutMessage() {
        return instance.getResetTimeoutMessage();
      }
      /**
       * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
       */
      public Builder setResetTimeoutMessage(de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage value) {
        copyOnWrite();
        instance.setResetTimeoutMessage(value);
        return this;
        }
      /**
       * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
       */
      public Builder setResetTimeoutMessage(
          de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setResetTimeoutMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
       */
      public Builder mergeResetTimeoutMessage(de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage value) {
        copyOnWrite();
        instance.mergeResetTimeoutMessage(value);
        return this;
      }
      /**
       * <code>optional .ResetTimeoutMessage resetTimeoutMessage = 69;</code>
       */
      public Builder clearResetTimeoutMessage() {  copyOnWrite();
        instance.clearResetTimeoutMessage();
        return this;
      }

      /**
       * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
       */
      public boolean hasReportAvatarMessage() {
        return instance.hasReportAvatarMessage();
      }
      /**
       * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ReportAvatarMessage getReportAvatarMessage() {
        return instance.getReportAvatarMessage();
      }
      /**
       * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
       */
      public Builder setReportAvatarMessage(de.pokerth.protocol.ProtoBuf.ReportAvatarMessage value) {
        copyOnWrite();
        instance.setReportAvatarMessage(value);
        return this;
        }
      /**
       * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
       */
      public Builder setReportAvatarMessage(
          de.pokerth.protocol.ProtoBuf.ReportAvatarMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setReportAvatarMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
       */
      public Builder mergeReportAvatarMessage(de.pokerth.protocol.ProtoBuf.ReportAvatarMessage value) {
        copyOnWrite();
        instance.mergeReportAvatarMessage(value);
        return this;
      }
      /**
       * <code>optional .ReportAvatarMessage reportAvatarMessage = 70;</code>
       */
      public Builder clearReportAvatarMessage() {  copyOnWrite();
        instance.clearReportAvatarMessage();
        return this;
      }

      /**
       * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
       */
      public boolean hasReportAvatarAckMessage() {
        return instance.hasReportAvatarAckMessage();
      }
      /**
       * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage getReportAvatarAckMessage() {
        return instance.getReportAvatarAckMessage();
      }
      /**
       * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
       */
      public Builder setReportAvatarAckMessage(de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage value) {
        copyOnWrite();
        instance.setReportAvatarAckMessage(value);
        return this;
        }
      /**
       * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
       */
      public Builder setReportAvatarAckMessage(
          de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setReportAvatarAckMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
       */
      public Builder mergeReportAvatarAckMessage(de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage value) {
        copyOnWrite();
        instance.mergeReportAvatarAckMessage(value);
        return this;
      }
      /**
       * <code>optional .ReportAvatarAckMessage reportAvatarAckMessage = 71;</code>
       */
      public Builder clearReportAvatarAckMessage() {  copyOnWrite();
        instance.clearReportAvatarAckMessage();
        return this;
      }

      /**
       * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
       */
      public boolean hasReportGameMessage() {
        return instance.hasReportGameMessage();
      }
      /**
       * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ReportGameMessage getReportGameMessage() {
        return instance.getReportGameMessage();
      }
      /**
       * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
       */
      public Builder setReportGameMessage(de.pokerth.protocol.ProtoBuf.ReportGameMessage value) {
        copyOnWrite();
        instance.setReportGameMessage(value);
        return this;
        }
      /**
       * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
       */
      public Builder setReportGameMessage(
          de.pokerth.protocol.ProtoBuf.ReportGameMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setReportGameMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
       */
      public Builder mergeReportGameMessage(de.pokerth.protocol.ProtoBuf.ReportGameMessage value) {
        copyOnWrite();
        instance.mergeReportGameMessage(value);
        return this;
      }
      /**
       * <code>optional .ReportGameMessage reportGameMessage = 72;</code>
       */
      public Builder clearReportGameMessage() {  copyOnWrite();
        instance.clearReportGameMessage();
        return this;
      }

      /**
       * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
       */
      public boolean hasReportGameAckMessage() {
        return instance.hasReportGameAckMessage();
      }
      /**
       * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ReportGameAckMessage getReportGameAckMessage() {
        return instance.getReportGameAckMessage();
      }
      /**
       * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
       */
      public Builder setReportGameAckMessage(de.pokerth.protocol.ProtoBuf.ReportGameAckMessage value) {
        copyOnWrite();
        instance.setReportGameAckMessage(value);
        return this;
        }
      /**
       * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
       */
      public Builder setReportGameAckMessage(
          de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setReportGameAckMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
       */
      public Builder mergeReportGameAckMessage(de.pokerth.protocol.ProtoBuf.ReportGameAckMessage value) {
        copyOnWrite();
        instance.mergeReportGameAckMessage(value);
        return this;
      }
      /**
       * <code>optional .ReportGameAckMessage reportGameAckMessage = 73;</code>
       */
      public Builder clearReportGameAckMessage() {  copyOnWrite();
        instance.clearReportGameAckMessage();
        return this;
      }

      /**
       * <code>optional .ErrorMessage errorMessage = 74;</code>
       */
      public boolean hasErrorMessage() {
        return instance.hasErrorMessage();
      }
      /**
       * <code>optional .ErrorMessage errorMessage = 74;</code>
       */
      public de.pokerth.protocol.ProtoBuf.ErrorMessage getErrorMessage() {
        return instance.getErrorMessage();
      }
      /**
       * <code>optional .ErrorMessage errorMessage = 74;</code>
       */
      public Builder setErrorMessage(de.pokerth.protocol.ProtoBuf.ErrorMessage value) {
        copyOnWrite();
        instance.setErrorMessage(value);
        return this;
        }
      /**
       * <code>optional .ErrorMessage errorMessage = 74;</code>
       */
      public Builder setErrorMessage(
          de.pokerth.protocol.ProtoBuf.ErrorMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setErrorMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .ErrorMessage errorMessage = 74;</code>
       */
      public Builder mergeErrorMessage(de.pokerth.protocol.ProtoBuf.ErrorMessage value) {
        copyOnWrite();
        instance.mergeErrorMessage(value);
        return this;
      }
      /**
       * <code>optional .ErrorMessage errorMessage = 74;</code>
       */
      public Builder clearErrorMessage() {  copyOnWrite();
        instance.clearErrorMessage();
        return this;
      }

      /**
       * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
       */
      public boolean hasAdminRemoveGameMessage() {
        return instance.hasAdminRemoveGameMessage();
      }
      /**
       * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage getAdminRemoveGameMessage() {
        return instance.getAdminRemoveGameMessage();
      }
      /**
       * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
       */
      public Builder setAdminRemoveGameMessage(de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage value) {
        copyOnWrite();
        instance.setAdminRemoveGameMessage(value);
        return this;
        }
      /**
       * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
       */
      public Builder setAdminRemoveGameMessage(
          de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAdminRemoveGameMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
       */
      public Builder mergeAdminRemoveGameMessage(de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage value) {
        copyOnWrite();
        instance.mergeAdminRemoveGameMessage(value);
        return this;
      }
      /**
       * <code>optional .AdminRemoveGameMessage adminRemoveGameMessage = 75;</code>
       */
      public Builder clearAdminRemoveGameMessage() {  copyOnWrite();
        instance.clearAdminRemoveGameMessage();
        return this;
      }

      /**
       * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
       */
      public boolean hasAdminRemoveGameAckMessage() {
        return instance.hasAdminRemoveGameAckMessage();
      }
      /**
       * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage getAdminRemoveGameAckMessage() {
        return instance.getAdminRemoveGameAckMessage();
      }
      /**
       * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
       */
      public Builder setAdminRemoveGameAckMessage(de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage value) {
        copyOnWrite();
        instance.setAdminRemoveGameAckMessage(value);
        return this;
        }
      /**
       * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
       */
      public Builder setAdminRemoveGameAckMessage(
          de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAdminRemoveGameAckMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
       */
      public Builder mergeAdminRemoveGameAckMessage(de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage value) {
        copyOnWrite();
        instance.mergeAdminRemoveGameAckMessage(value);
        return this;
      }
      /**
       * <code>optional .AdminRemoveGameAckMessage adminRemoveGameAckMessage = 76;</code>
       */
      public Builder clearAdminRemoveGameAckMessage() {  copyOnWrite();
        instance.clearAdminRemoveGameAckMessage();
        return this;
      }

      /**
       * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
       */
      public boolean hasAdminBanPlayerMessage() {
        return instance.hasAdminBanPlayerMessage();
      }
      /**
       * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage getAdminBanPlayerMessage() {
        return instance.getAdminBanPlayerMessage();
      }
      /**
       * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
       */
      public Builder setAdminBanPlayerMessage(de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage value) {
        copyOnWrite();
        instance.setAdminBanPlayerMessage(value);
        return this;
        }
      /**
       * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
       */
      public Builder setAdminBanPlayerMessage(
          de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAdminBanPlayerMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
       */
      public Builder mergeAdminBanPlayerMessage(de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage value) {
        copyOnWrite();
        instance.mergeAdminBanPlayerMessage(value);
        return this;
      }
      /**
       * <code>optional .AdminBanPlayerMessage adminBanPlayerMessage = 77;</code>
       */
      public Builder clearAdminBanPlayerMessage() {  copyOnWrite();
        instance.clearAdminBanPlayerMessage();
        return this;
      }

      /**
       * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
       */
      public boolean hasAdminBanPlayerAckMessage() {
        return instance.hasAdminBanPlayerAckMessage();
      }
      /**
       * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
       */
      public de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage getAdminBanPlayerAckMessage() {
        return instance.getAdminBanPlayerAckMessage();
      }
      /**
       * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
       */
      public Builder setAdminBanPlayerAckMessage(de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage value) {
        copyOnWrite();
        instance.setAdminBanPlayerAckMessage(value);
        return this;
        }
      /**
       * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
       */
      public Builder setAdminBanPlayerAckMessage(
          de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setAdminBanPlayerAckMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
       */
      public Builder mergeAdminBanPlayerAckMessage(de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage value) {
        copyOnWrite();
        instance.mergeAdminBanPlayerAckMessage(value);
        return this;
      }
      /**
       * <code>optional .AdminBanPlayerAckMessage adminBanPlayerAckMessage = 78;</code>
       */
      public Builder clearAdminBanPlayerAckMessage() {  copyOnWrite();
        instance.clearAdminBanPlayerAckMessage();
        return this;
      }

      /**
       * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
       */
      public boolean hasGameListSpectatorJoinedMessage() {
        return instance.hasGameListSpectatorJoinedMessage();
      }
      /**
       * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage getGameListSpectatorJoinedMessage() {
        return instance.getGameListSpectatorJoinedMessage();
      }
      /**
       * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
       */
      public Builder setGameListSpectatorJoinedMessage(de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage value) {
        copyOnWrite();
        instance.setGameListSpectatorJoinedMessage(value);
        return this;
        }
      /**
       * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
       */
      public Builder setGameListSpectatorJoinedMessage(
          de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameListSpectatorJoinedMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
       */
      public Builder mergeGameListSpectatorJoinedMessage(de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage value) {
        copyOnWrite();
        instance.mergeGameListSpectatorJoinedMessage(value);
        return this;
      }
      /**
       * <code>optional .GameListSpectatorJoinedMessage gameListSpectatorJoinedMessage = 79;</code>
       */
      public Builder clearGameListSpectatorJoinedMessage() {  copyOnWrite();
        instance.clearGameListSpectatorJoinedMessage();
        return this;
      }

      /**
       * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
       */
      public boolean hasGameListSpectatorLeftMessage() {
        return instance.hasGameListSpectatorLeftMessage();
      }
      /**
       * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage getGameListSpectatorLeftMessage() {
        return instance.getGameListSpectatorLeftMessage();
      }
      /**
       * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
       */
      public Builder setGameListSpectatorLeftMessage(de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage value) {
        copyOnWrite();
        instance.setGameListSpectatorLeftMessage(value);
        return this;
        }
      /**
       * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
       */
      public Builder setGameListSpectatorLeftMessage(
          de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameListSpectatorLeftMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
       */
      public Builder mergeGameListSpectatorLeftMessage(de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage value) {
        copyOnWrite();
        instance.mergeGameListSpectatorLeftMessage(value);
        return this;
      }
      /**
       * <code>optional .GameListSpectatorLeftMessage gameListSpectatorLeftMessage = 80;</code>
       */
      public Builder clearGameListSpectatorLeftMessage() {  copyOnWrite();
        instance.clearGameListSpectatorLeftMessage();
        return this;
      }

      /**
       * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
       */
      public boolean hasGameSpectatorJoinedMessage() {
        return instance.hasGameSpectatorJoinedMessage();
      }
      /**
       * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage getGameSpectatorJoinedMessage() {
        return instance.getGameSpectatorJoinedMessage();
      }
      /**
       * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
       */
      public Builder setGameSpectatorJoinedMessage(de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage value) {
        copyOnWrite();
        instance.setGameSpectatorJoinedMessage(value);
        return this;
        }
      /**
       * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
       */
      public Builder setGameSpectatorJoinedMessage(
          de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameSpectatorJoinedMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
       */
      public Builder mergeGameSpectatorJoinedMessage(de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage value) {
        copyOnWrite();
        instance.mergeGameSpectatorJoinedMessage(value);
        return this;
      }
      /**
       * <code>optional .GameSpectatorJoinedMessage gameSpectatorJoinedMessage = 81;</code>
       */
      public Builder clearGameSpectatorJoinedMessage() {  copyOnWrite();
        instance.clearGameSpectatorJoinedMessage();
        return this;
      }

      /**
       * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
       */
      public boolean hasGameSpectatorLeftMessage() {
        return instance.hasGameSpectatorLeftMessage();
      }
      /**
       * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
       */
      public de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage getGameSpectatorLeftMessage() {
        return instance.getGameSpectatorLeftMessage();
      }
      /**
       * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
       */
      public Builder setGameSpectatorLeftMessage(de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage value) {
        copyOnWrite();
        instance.setGameSpectatorLeftMessage(value);
        return this;
        }
      /**
       * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
       */
      public Builder setGameSpectatorLeftMessage(
          de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setGameSpectatorLeftMessage(builderForValue);
        return this;
      }
      /**
       * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
       */
      public Builder mergeGameSpectatorLeftMessage(de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage value) {
        copyOnWrite();
        instance.mergeGameSpectatorLeftMessage(value);
        return this;
      }
      /**
       * <code>optional .GameSpectatorLeftMessage gameSpectatorLeftMessage = 82;</code>
       */
      public Builder clearGameSpectatorLeftMessage() {  copyOnWrite();
        instance.clearGameSpectatorLeftMessage();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PokerTHMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.pokerth.protocol.ProtoBuf.PokerTHMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasMessageType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (hasAnnounceMessage()) {
            if (!getAnnounceMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasInitMessage()) {
            if (!getInitMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAuthServerChallengeMessage()) {
            if (!getAuthServerChallengeMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAuthClientResponseMessage()) {
            if (!getAuthClientResponseMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAuthServerVerificationMessage()) {
            if (!getAuthServerVerificationMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasInitAckMessage()) {
            if (!getInitAckMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAvatarRequestMessage()) {
            if (!getAvatarRequestMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAvatarHeaderMessage()) {
            if (!getAvatarHeaderMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAvatarDataMessage()) {
            if (!getAvatarDataMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAvatarEndMessage()) {
            if (!getAvatarEndMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasUnknownAvatarMessage()) {
            if (!getUnknownAvatarMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasPlayerListMessage()) {
            if (!getPlayerListMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameListNewMessage()) {
            if (!getGameListNewMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameListUpdateMessage()) {
            if (!getGameListUpdateMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameListPlayerJoinedMessage()) {
            if (!getGameListPlayerJoinedMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameListPlayerLeftMessage()) {
            if (!getGameListPlayerLeftMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameListAdminChangedMessage()) {
            if (!getGameListAdminChangedMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasPlayerInfoReplyMessage()) {
            if (!getPlayerInfoReplyMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasSubscriptionRequestMessage()) {
            if (!getSubscriptionRequestMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasJoinExistingGameMessage()) {
            if (!getJoinExistingGameMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasJoinNewGameMessage()) {
            if (!getJoinNewGameMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasRejoinExistingGameMessage()) {
            if (!getRejoinExistingGameMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasJoinGameAckMessage()) {
            if (!getJoinGameAckMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasJoinGameFailedMessage()) {
            if (!getJoinGameFailedMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGamePlayerJoinedMessage()) {
            if (!getGamePlayerJoinedMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGamePlayerLeftMessage()) {
            if (!getGamePlayerLeftMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameAdminChangedMessage()) {
            if (!getGameAdminChangedMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasRemovedFromGameMessage()) {
            if (!getRemovedFromGameMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasKickPlayerRequestMessage()) {
            if (!getKickPlayerRequestMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasLeaveGameRequestMessage()) {
            if (!getLeaveGameRequestMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasInvitePlayerToGameMessage()) {
            if (!getInvitePlayerToGameMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasInviteNotifyMessage()) {
            if (!getInviteNotifyMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasRejectGameInvitationMessage()) {
            if (!getRejectGameInvitationMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasRejectInvNotifyMessage()) {
            if (!getRejectInvNotifyMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasStartEventMessage()) {
            if (!getStartEventMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasStartEventAckMessage()) {
            if (!getStartEventAckMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameStartInitialMessage()) {
            if (!getGameStartInitialMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameStartRejoinMessage()) {
            if (!getGameStartRejoinMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasHandStartMessage()) {
            if (!getHandStartMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasPlayersTurnMessage()) {
            if (!getPlayersTurnMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasMyActionRequestMessage()) {
            if (!getMyActionRequestMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasYourActionRejectedMessage()) {
            if (!getYourActionRejectedMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasPlayersActionDoneMessage()) {
            if (!getPlayersActionDoneMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasDealFlopCardsMessage()) {
            if (!getDealFlopCardsMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasDealTurnCardMessage()) {
            if (!getDealTurnCardMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasDealRiverCardMessage()) {
            if (!getDealRiverCardMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAllInShowCardsMessage()) {
            if (!getAllInShowCardsMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasEndOfHandShowCardsMessage()) {
            if (!getEndOfHandShowCardsMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasEndOfHandHideCardsMessage()) {
            if (!getEndOfHandHideCardsMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAfterHandShowCardsMessage()) {
            if (!getAfterHandShowCardsMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasEndOfGameMessage()) {
            if (!getEndOfGameMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasPlayerIdChangedMessage()) {
            if (!getPlayerIdChangedMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAskKickPlayerMessage()) {
            if (!getAskKickPlayerMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAskKickDeniedMessage()) {
            if (!getAskKickDeniedMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasStartKickPetitionMessage()) {
            if (!getStartKickPetitionMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasVoteKickRequestMessage()) {
            if (!getVoteKickRequestMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasVoteKickReplyMessage()) {
            if (!getVoteKickReplyMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasKickPetitionUpdateMessage()) {
            if (!getKickPetitionUpdateMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasEndKickPetitionMessage()) {
            if (!getEndKickPetitionMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasStatisticsMessage()) {
            if (!getStatisticsMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasChatRequestMessage()) {
            if (!getChatRequestMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasChatMessage()) {
            if (!getChatMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasChatRejectMessage()) {
            if (!getChatRejectMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasDialogMessage()) {
            if (!getDialogMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasTimeoutWarningMessage()) {
            if (!getTimeoutWarningMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasReportAvatarMessage()) {
            if (!getReportAvatarMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasReportAvatarAckMessage()) {
            if (!getReportAvatarAckMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasReportGameMessage()) {
            if (!getReportGameMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasReportGameAckMessage()) {
            if (!getReportGameAckMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasErrorMessage()) {
            if (!getErrorMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAdminRemoveGameMessage()) {
            if (!getAdminRemoveGameMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAdminRemoveGameAckMessage()) {
            if (!getAdminRemoveGameAckMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAdminBanPlayerMessage()) {
            if (!getAdminBanPlayerMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasAdminBanPlayerAckMessage()) {
            if (!getAdminBanPlayerAckMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameListSpectatorJoinedMessage()) {
            if (!getGameListSpectatorJoinedMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameListSpectatorLeftMessage()) {
            if (!getGameListSpectatorLeftMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameSpectatorJoinedMessage()) {
            if (!getGameSpectatorJoinedMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasGameSpectatorLeftMessage()) {
            if (!getGameSpectatorLeftMessage().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.pokerth.protocol.ProtoBuf.PokerTHMessage other = (de.pokerth.protocol.ProtoBuf.PokerTHMessage) arg1;
          messageType_ = visitor.visitInt(hasMessageType(), messageType_,
              other.hasMessageType(), other.messageType_);
          announceMessage_ = visitor.visitMessage(announceMessage_, other.announceMessage_);
          initMessage_ = visitor.visitMessage(initMessage_, other.initMessage_);
          authServerChallengeMessage_ = visitor.visitMessage(authServerChallengeMessage_, other.authServerChallengeMessage_);
          authClientResponseMessage_ = visitor.visitMessage(authClientResponseMessage_, other.authClientResponseMessage_);
          authServerVerificationMessage_ = visitor.visitMessage(authServerVerificationMessage_, other.authServerVerificationMessage_);
          initAckMessage_ = visitor.visitMessage(initAckMessage_, other.initAckMessage_);
          avatarRequestMessage_ = visitor.visitMessage(avatarRequestMessage_, other.avatarRequestMessage_);
          avatarHeaderMessage_ = visitor.visitMessage(avatarHeaderMessage_, other.avatarHeaderMessage_);
          avatarDataMessage_ = visitor.visitMessage(avatarDataMessage_, other.avatarDataMessage_);
          avatarEndMessage_ = visitor.visitMessage(avatarEndMessage_, other.avatarEndMessage_);
          unknownAvatarMessage_ = visitor.visitMessage(unknownAvatarMessage_, other.unknownAvatarMessage_);
          playerListMessage_ = visitor.visitMessage(playerListMessage_, other.playerListMessage_);
          gameListNewMessage_ = visitor.visitMessage(gameListNewMessage_, other.gameListNewMessage_);
          gameListUpdateMessage_ = visitor.visitMessage(gameListUpdateMessage_, other.gameListUpdateMessage_);
          gameListPlayerJoinedMessage_ = visitor.visitMessage(gameListPlayerJoinedMessage_, other.gameListPlayerJoinedMessage_);
          gameListPlayerLeftMessage_ = visitor.visitMessage(gameListPlayerLeftMessage_, other.gameListPlayerLeftMessage_);
          gameListAdminChangedMessage_ = visitor.visitMessage(gameListAdminChangedMessage_, other.gameListAdminChangedMessage_);
          playerInfoRequestMessage_ = visitor.visitMessage(playerInfoRequestMessage_, other.playerInfoRequestMessage_);
          playerInfoReplyMessage_ = visitor.visitMessage(playerInfoReplyMessage_, other.playerInfoReplyMessage_);
          subscriptionRequestMessage_ = visitor.visitMessage(subscriptionRequestMessage_, other.subscriptionRequestMessage_);
          joinExistingGameMessage_ = visitor.visitMessage(joinExistingGameMessage_, other.joinExistingGameMessage_);
          joinNewGameMessage_ = visitor.visitMessage(joinNewGameMessage_, other.joinNewGameMessage_);
          rejoinExistingGameMessage_ = visitor.visitMessage(rejoinExistingGameMessage_, other.rejoinExistingGameMessage_);
          joinGameAckMessage_ = visitor.visitMessage(joinGameAckMessage_, other.joinGameAckMessage_);
          joinGameFailedMessage_ = visitor.visitMessage(joinGameFailedMessage_, other.joinGameFailedMessage_);
          gamePlayerJoinedMessage_ = visitor.visitMessage(gamePlayerJoinedMessage_, other.gamePlayerJoinedMessage_);
          gamePlayerLeftMessage_ = visitor.visitMessage(gamePlayerLeftMessage_, other.gamePlayerLeftMessage_);
          gameAdminChangedMessage_ = visitor.visitMessage(gameAdminChangedMessage_, other.gameAdminChangedMessage_);
          removedFromGameMessage_ = visitor.visitMessage(removedFromGameMessage_, other.removedFromGameMessage_);
          kickPlayerRequestMessage_ = visitor.visitMessage(kickPlayerRequestMessage_, other.kickPlayerRequestMessage_);
          leaveGameRequestMessage_ = visitor.visitMessage(leaveGameRequestMessage_, other.leaveGameRequestMessage_);
          invitePlayerToGameMessage_ = visitor.visitMessage(invitePlayerToGameMessage_, other.invitePlayerToGameMessage_);
          inviteNotifyMessage_ = visitor.visitMessage(inviteNotifyMessage_, other.inviteNotifyMessage_);
          rejectGameInvitationMessage_ = visitor.visitMessage(rejectGameInvitationMessage_, other.rejectGameInvitationMessage_);
          rejectInvNotifyMessage_ = visitor.visitMessage(rejectInvNotifyMessage_, other.rejectInvNotifyMessage_);
          startEventMessage_ = visitor.visitMessage(startEventMessage_, other.startEventMessage_);
          startEventAckMessage_ = visitor.visitMessage(startEventAckMessage_, other.startEventAckMessage_);
          gameStartInitialMessage_ = visitor.visitMessage(gameStartInitialMessage_, other.gameStartInitialMessage_);
          gameStartRejoinMessage_ = visitor.visitMessage(gameStartRejoinMessage_, other.gameStartRejoinMessage_);
          handStartMessage_ = visitor.visitMessage(handStartMessage_, other.handStartMessage_);
          playersTurnMessage_ = visitor.visitMessage(playersTurnMessage_, other.playersTurnMessage_);
          myActionRequestMessage_ = visitor.visitMessage(myActionRequestMessage_, other.myActionRequestMessage_);
          yourActionRejectedMessage_ = visitor.visitMessage(yourActionRejectedMessage_, other.yourActionRejectedMessage_);
          playersActionDoneMessage_ = visitor.visitMessage(playersActionDoneMessage_, other.playersActionDoneMessage_);
          dealFlopCardsMessage_ = visitor.visitMessage(dealFlopCardsMessage_, other.dealFlopCardsMessage_);
          dealTurnCardMessage_ = visitor.visitMessage(dealTurnCardMessage_, other.dealTurnCardMessage_);
          dealRiverCardMessage_ = visitor.visitMessage(dealRiverCardMessage_, other.dealRiverCardMessage_);
          allInShowCardsMessage_ = visitor.visitMessage(allInShowCardsMessage_, other.allInShowCardsMessage_);
          endOfHandShowCardsMessage_ = visitor.visitMessage(endOfHandShowCardsMessage_, other.endOfHandShowCardsMessage_);
          endOfHandHideCardsMessage_ = visitor.visitMessage(endOfHandHideCardsMessage_, other.endOfHandHideCardsMessage_);
          showMyCardsRequestMessage_ = visitor.visitMessage(showMyCardsRequestMessage_, other.showMyCardsRequestMessage_);
          afterHandShowCardsMessage_ = visitor.visitMessage(afterHandShowCardsMessage_, other.afterHandShowCardsMessage_);
          endOfGameMessage_ = visitor.visitMessage(endOfGameMessage_, other.endOfGameMessage_);
          playerIdChangedMessage_ = visitor.visitMessage(playerIdChangedMessage_, other.playerIdChangedMessage_);
          askKickPlayerMessage_ = visitor.visitMessage(askKickPlayerMessage_, other.askKickPlayerMessage_);
          askKickDeniedMessage_ = visitor.visitMessage(askKickDeniedMessage_, other.askKickDeniedMessage_);
          startKickPetitionMessage_ = visitor.visitMessage(startKickPetitionMessage_, other.startKickPetitionMessage_);
          voteKickRequestMessage_ = visitor.visitMessage(voteKickRequestMessage_, other.voteKickRequestMessage_);
          voteKickReplyMessage_ = visitor.visitMessage(voteKickReplyMessage_, other.voteKickReplyMessage_);
          kickPetitionUpdateMessage_ = visitor.visitMessage(kickPetitionUpdateMessage_, other.kickPetitionUpdateMessage_);
          endKickPetitionMessage_ = visitor.visitMessage(endKickPetitionMessage_, other.endKickPetitionMessage_);
          statisticsMessage_ = visitor.visitMessage(statisticsMessage_, other.statisticsMessage_);
          chatRequestMessage_ = visitor.visitMessage(chatRequestMessage_, other.chatRequestMessage_);
          chatMessage_ = visitor.visitMessage(chatMessage_, other.chatMessage_);
          chatRejectMessage_ = visitor.visitMessage(chatRejectMessage_, other.chatRejectMessage_);
          dialogMessage_ = visitor.visitMessage(dialogMessage_, other.dialogMessage_);
          timeoutWarningMessage_ = visitor.visitMessage(timeoutWarningMessage_, other.timeoutWarningMessage_);
          resetTimeoutMessage_ = visitor.visitMessage(resetTimeoutMessage_, other.resetTimeoutMessage_);
          reportAvatarMessage_ = visitor.visitMessage(reportAvatarMessage_, other.reportAvatarMessage_);
          reportAvatarAckMessage_ = visitor.visitMessage(reportAvatarAckMessage_, other.reportAvatarAckMessage_);
          reportGameMessage_ = visitor.visitMessage(reportGameMessage_, other.reportGameMessage_);
          reportGameAckMessage_ = visitor.visitMessage(reportGameAckMessage_, other.reportGameAckMessage_);
          errorMessage_ = visitor.visitMessage(errorMessage_, other.errorMessage_);
          adminRemoveGameMessage_ = visitor.visitMessage(adminRemoveGameMessage_, other.adminRemoveGameMessage_);
          adminRemoveGameAckMessage_ = visitor.visitMessage(adminRemoveGameAckMessage_, other.adminRemoveGameAckMessage_);
          adminBanPlayerMessage_ = visitor.visitMessage(adminBanPlayerMessage_, other.adminBanPlayerMessage_);
          adminBanPlayerAckMessage_ = visitor.visitMessage(adminBanPlayerAckMessage_, other.adminBanPlayerAckMessage_);
          gameListSpectatorJoinedMessage_ = visitor.visitMessage(gameListSpectatorJoinedMessage_, other.gameListSpectatorJoinedMessage_);
          gameListSpectatorLeftMessage_ = visitor.visitMessage(gameListSpectatorLeftMessage_, other.gameListSpectatorLeftMessage_);
          gameSpectatorJoinedMessage_ = visitor.visitMessage(gameSpectatorJoinedMessage_, other.gameSpectatorJoinedMessage_);
          gameSpectatorLeftMessage_ = visitor.visitMessage(gameSpectatorLeftMessage_, other.gameSpectatorLeftMessage_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
            bitField1_ |= other.bitField1_;
            bitField2_ |= other.bitField2_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  de.pokerth.protocol.ProtoBuf.PokerTHMessage.PokerTHMessageType value = de.pokerth.protocol.ProtoBuf.PokerTHMessage.PokerTHMessageType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    messageType_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  de.pokerth.protocol.ProtoBuf.AnnounceMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = announceMessage_.toBuilder();
                  }
                  announceMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AnnounceMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(announceMessage_);
                    announceMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 26: {
                  de.pokerth.protocol.ProtoBuf.InitMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = initMessage_.toBuilder();
                  }
                  initMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.InitMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(initMessage_);
                    initMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
                case 34: {
                  de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = authServerChallengeMessage_.toBuilder();
                  }
                  authServerChallengeMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AuthServerChallengeMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(authServerChallengeMessage_);
                    authServerChallengeMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 42: {
                  de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = authClientResponseMessage_.toBuilder();
                  }
                  authClientResponseMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AuthClientResponseMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(authClientResponseMessage_);
                    authClientResponseMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 50: {
                  de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    subBuilder = authServerVerificationMessage_.toBuilder();
                  }
                  authServerVerificationMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AuthServerVerificationMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(authServerVerificationMessage_);
                    authServerVerificationMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000020;
                  break;
                }
                case 58: {
                  de.pokerth.protocol.ProtoBuf.InitAckMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    subBuilder = initAckMessage_.toBuilder();
                  }
                  initAckMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.InitAckMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(initAckMessage_);
                    initAckMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000040;
                  break;
                }
                case 66: {
                  de.pokerth.protocol.ProtoBuf.AvatarRequestMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000080) == 0x00000080)) {
                    subBuilder = avatarRequestMessage_.toBuilder();
                  }
                  avatarRequestMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AvatarRequestMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(avatarRequestMessage_);
                    avatarRequestMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000080;
                  break;
                }
                case 74: {
                  de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000100) == 0x00000100)) {
                    subBuilder = avatarHeaderMessage_.toBuilder();
                  }
                  avatarHeaderMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AvatarHeaderMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(avatarHeaderMessage_);
                    avatarHeaderMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000100;
                  break;
                }
                case 82: {
                  de.pokerth.protocol.ProtoBuf.AvatarDataMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000200) == 0x00000200)) {
                    subBuilder = avatarDataMessage_.toBuilder();
                  }
                  avatarDataMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AvatarDataMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(avatarDataMessage_);
                    avatarDataMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000200;
                  break;
                }
                case 90: {
                  de.pokerth.protocol.ProtoBuf.AvatarEndMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000400) == 0x00000400)) {
                    subBuilder = avatarEndMessage_.toBuilder();
                  }
                  avatarEndMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AvatarEndMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(avatarEndMessage_);
                    avatarEndMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000400;
                  break;
                }
                case 98: {
                  de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000800) == 0x00000800)) {
                    subBuilder = unknownAvatarMessage_.toBuilder();
                  }
                  unknownAvatarMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.UnknownAvatarMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(unknownAvatarMessage_);
                    unknownAvatarMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000800;
                  break;
                }
                case 106: {
                  de.pokerth.protocol.ProtoBuf.PlayerListMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00001000) == 0x00001000)) {
                    subBuilder = playerListMessage_.toBuilder();
                  }
                  playerListMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.PlayerListMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(playerListMessage_);
                    playerListMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00001000;
                  break;
                }
                case 114: {
                  de.pokerth.protocol.ProtoBuf.GameListNewMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00002000) == 0x00002000)) {
                    subBuilder = gameListNewMessage_.toBuilder();
                  }
                  gameListNewMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameListNewMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameListNewMessage_);
                    gameListNewMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00002000;
                  break;
                }
                case 122: {
                  de.pokerth.protocol.ProtoBuf.GameListUpdateMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00004000) == 0x00004000)) {
                    subBuilder = gameListUpdateMessage_.toBuilder();
                  }
                  gameListUpdateMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameListUpdateMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameListUpdateMessage_);
                    gameListUpdateMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00004000;
                  break;
                }
                case 130: {
                  de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00008000) == 0x00008000)) {
                    subBuilder = gameListPlayerJoinedMessage_.toBuilder();
                  }
                  gameListPlayerJoinedMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameListPlayerJoinedMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameListPlayerJoinedMessage_);
                    gameListPlayerJoinedMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00008000;
                  break;
                }
                case 138: {
                  de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00010000) == 0x00010000)) {
                    subBuilder = gameListPlayerLeftMessage_.toBuilder();
                  }
                  gameListPlayerLeftMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameListPlayerLeftMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameListPlayerLeftMessage_);
                    gameListPlayerLeftMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00010000;
                  break;
                }
                case 146: {
                  de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00020000) == 0x00020000)) {
                    subBuilder = gameListAdminChangedMessage_.toBuilder();
                  }
                  gameListAdminChangedMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameListAdminChangedMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameListAdminChangedMessage_);
                    gameListAdminChangedMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00020000;
                  break;
                }
                case 154: {
                  de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00040000) == 0x00040000)) {
                    subBuilder = playerInfoRequestMessage_.toBuilder();
                  }
                  playerInfoRequestMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoRequestMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(playerInfoRequestMessage_);
                    playerInfoRequestMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00040000;
                  break;
                }
                case 162: {
                  de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00080000) == 0x00080000)) {
                    subBuilder = playerInfoReplyMessage_.toBuilder();
                  }
                  playerInfoReplyMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.PlayerInfoReplyMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(playerInfoReplyMessage_);
                    playerInfoReplyMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00080000;
                  break;
                }
                case 170: {
                  de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00100000) == 0x00100000)) {
                    subBuilder = subscriptionRequestMessage_.toBuilder();
                  }
                  subscriptionRequestMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.SubscriptionRequestMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(subscriptionRequestMessage_);
                    subscriptionRequestMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00100000;
                  break;
                }
                case 178: {
                  de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00200000) == 0x00200000)) {
                    subBuilder = joinExistingGameMessage_.toBuilder();
                  }
                  joinExistingGameMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.JoinExistingGameMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(joinExistingGameMessage_);
                    joinExistingGameMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00200000;
                  break;
                }
                case 186: {
                  de.pokerth.protocol.ProtoBuf.JoinNewGameMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00400000) == 0x00400000)) {
                    subBuilder = joinNewGameMessage_.toBuilder();
                  }
                  joinNewGameMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.JoinNewGameMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(joinNewGameMessage_);
                    joinNewGameMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00400000;
                  break;
                }
                case 194: {
                  de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00800000) == 0x00800000)) {
                    subBuilder = rejoinExistingGameMessage_.toBuilder();
                  }
                  rejoinExistingGameMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.RejoinExistingGameMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rejoinExistingGameMessage_);
                    rejoinExistingGameMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00800000;
                  break;
                }
                case 202: {
                  de.pokerth.protocol.ProtoBuf.JoinGameAckMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x01000000) == 0x01000000)) {
                    subBuilder = joinGameAckMessage_.toBuilder();
                  }
                  joinGameAckMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.JoinGameAckMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(joinGameAckMessage_);
                    joinGameAckMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x01000000;
                  break;
                }
                case 210: {
                  de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x02000000) == 0x02000000)) {
                    subBuilder = joinGameFailedMessage_.toBuilder();
                  }
                  joinGameFailedMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.JoinGameFailedMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(joinGameFailedMessage_);
                    joinGameFailedMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x02000000;
                  break;
                }
                case 218: {
                  de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x04000000) == 0x04000000)) {
                    subBuilder = gamePlayerJoinedMessage_.toBuilder();
                  }
                  gamePlayerJoinedMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GamePlayerJoinedMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gamePlayerJoinedMessage_);
                    gamePlayerJoinedMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x04000000;
                  break;
                }
                case 226: {
                  de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x08000000) == 0x08000000)) {
                    subBuilder = gamePlayerLeftMessage_.toBuilder();
                  }
                  gamePlayerLeftMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GamePlayerLeftMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gamePlayerLeftMessage_);
                    gamePlayerLeftMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x08000000;
                  break;
                }
                case 234: {
                  de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x10000000) == 0x10000000)) {
                    subBuilder = gameAdminChangedMessage_.toBuilder();
                  }
                  gameAdminChangedMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameAdminChangedMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameAdminChangedMessage_);
                    gameAdminChangedMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x10000000;
                  break;
                }
                case 242: {
                  de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x20000000) == 0x20000000)) {
                    subBuilder = removedFromGameMessage_.toBuilder();
                  }
                  removedFromGameMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.RemovedFromGameMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(removedFromGameMessage_);
                    removedFromGameMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x20000000;
                  break;
                }
                case 250: {
                  de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x40000000) == 0x40000000)) {
                    subBuilder = kickPlayerRequestMessage_.toBuilder();
                  }
                  kickPlayerRequestMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.KickPlayerRequestMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(kickPlayerRequestMessage_);
                    kickPlayerRequestMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x40000000;
                  break;
                }
                case 258: {
                  de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x80000000) == 0x80000000)) {
                    subBuilder = leaveGameRequestMessage_.toBuilder();
                  }
                  leaveGameRequestMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.LeaveGameRequestMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(leaveGameRequestMessage_);
                    leaveGameRequestMessage_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x80000000;
                  break;
                }
                case 266: {
                  de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000001) == 0x00000001)) {
                    subBuilder = invitePlayerToGameMessage_.toBuilder();
                  }
                  invitePlayerToGameMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.InvitePlayerToGameMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(invitePlayerToGameMessage_);
                    invitePlayerToGameMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000001;
                  break;
                }
                case 274: {
                  de.pokerth.protocol.ProtoBuf.InviteNotifyMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000002) == 0x00000002)) {
                    subBuilder = inviteNotifyMessage_.toBuilder();
                  }
                  inviteNotifyMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.InviteNotifyMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(inviteNotifyMessage_);
                    inviteNotifyMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000002;
                  break;
                }
                case 282: {
                  de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000004) == 0x00000004)) {
                    subBuilder = rejectGameInvitationMessage_.toBuilder();
                  }
                  rejectGameInvitationMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.RejectGameInvitationMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rejectGameInvitationMessage_);
                    rejectGameInvitationMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000004;
                  break;
                }
                case 290: {
                  de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000008) == 0x00000008)) {
                    subBuilder = rejectInvNotifyMessage_.toBuilder();
                  }
                  rejectInvNotifyMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.RejectInvNotifyMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rejectInvNotifyMessage_);
                    rejectInvNotifyMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000008;
                  break;
                }
                case 298: {
                  de.pokerth.protocol.ProtoBuf.StartEventMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000010) == 0x00000010)) {
                    subBuilder = startEventMessage_.toBuilder();
                  }
                  startEventMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.StartEventMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(startEventMessage_);
                    startEventMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000010;
                  break;
                }
                case 306: {
                  de.pokerth.protocol.ProtoBuf.StartEventAckMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000020) == 0x00000020)) {
                    subBuilder = startEventAckMessage_.toBuilder();
                  }
                  startEventAckMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.StartEventAckMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(startEventAckMessage_);
                    startEventAckMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000020;
                  break;
                }
                case 314: {
                  de.pokerth.protocol.ProtoBuf.GameStartInitialMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000040) == 0x00000040)) {
                    subBuilder = gameStartInitialMessage_.toBuilder();
                  }
                  gameStartInitialMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameStartInitialMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameStartInitialMessage_);
                    gameStartInitialMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000040;
                  break;
                }
                case 322: {
                  de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000080) == 0x00000080)) {
                    subBuilder = gameStartRejoinMessage_.toBuilder();
                  }
                  gameStartRejoinMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameStartRejoinMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameStartRejoinMessage_);
                    gameStartRejoinMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000080;
                  break;
                }
                case 330: {
                  de.pokerth.protocol.ProtoBuf.HandStartMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000100) == 0x00000100)) {
                    subBuilder = handStartMessage_.toBuilder();
                  }
                  handStartMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.HandStartMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(handStartMessage_);
                    handStartMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000100;
                  break;
                }
                case 338: {
                  de.pokerth.protocol.ProtoBuf.PlayersTurnMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000200) == 0x00000200)) {
                    subBuilder = playersTurnMessage_.toBuilder();
                  }
                  playersTurnMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.PlayersTurnMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(playersTurnMessage_);
                    playersTurnMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000200;
                  break;
                }
                case 346: {
                  de.pokerth.protocol.ProtoBuf.MyActionRequestMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000400) == 0x00000400)) {
                    subBuilder = myActionRequestMessage_.toBuilder();
                  }
                  myActionRequestMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.MyActionRequestMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(myActionRequestMessage_);
                    myActionRequestMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000400;
                  break;
                }
                case 354: {
                  de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000800) == 0x00000800)) {
                    subBuilder = yourActionRejectedMessage_.toBuilder();
                  }
                  yourActionRejectedMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.YourActionRejectedMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(yourActionRejectedMessage_);
                    yourActionRejectedMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000800;
                  break;
                }
                case 362: {
                  de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00001000) == 0x00001000)) {
                    subBuilder = playersActionDoneMessage_.toBuilder();
                  }
                  playersActionDoneMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.PlayersActionDoneMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(playersActionDoneMessage_);
                    playersActionDoneMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00001000;
                  break;
                }
                case 370: {
                  de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00002000) == 0x00002000)) {
                    subBuilder = dealFlopCardsMessage_.toBuilder();
                  }
                  dealFlopCardsMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.DealFlopCardsMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(dealFlopCardsMessage_);
                    dealFlopCardsMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00002000;
                  break;
                }
                case 378: {
                  de.pokerth.protocol.ProtoBuf.DealTurnCardMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00004000) == 0x00004000)) {
                    subBuilder = dealTurnCardMessage_.toBuilder();
                  }
                  dealTurnCardMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.DealTurnCardMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(dealTurnCardMessage_);
                    dealTurnCardMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00004000;
                  break;
                }
                case 386: {
                  de.pokerth.protocol.ProtoBuf.DealRiverCardMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00008000) == 0x00008000)) {
                    subBuilder = dealRiverCardMessage_.toBuilder();
                  }
                  dealRiverCardMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.DealRiverCardMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(dealRiverCardMessage_);
                    dealRiverCardMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00008000;
                  break;
                }
                case 394: {
                  de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00010000) == 0x00010000)) {
                    subBuilder = allInShowCardsMessage_.toBuilder();
                  }
                  allInShowCardsMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AllInShowCardsMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(allInShowCardsMessage_);
                    allInShowCardsMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00010000;
                  break;
                }
                case 402: {
                  de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00020000) == 0x00020000)) {
                    subBuilder = endOfHandShowCardsMessage_.toBuilder();
                  }
                  endOfHandShowCardsMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.EndOfHandShowCardsMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(endOfHandShowCardsMessage_);
                    endOfHandShowCardsMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00020000;
                  break;
                }
                case 410: {
                  de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00040000) == 0x00040000)) {
                    subBuilder = endOfHandHideCardsMessage_.toBuilder();
                  }
                  endOfHandHideCardsMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.EndOfHandHideCardsMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(endOfHandHideCardsMessage_);
                    endOfHandHideCardsMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00040000;
                  break;
                }
                case 418: {
                  de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00080000) == 0x00080000)) {
                    subBuilder = showMyCardsRequestMessage_.toBuilder();
                  }
                  showMyCardsRequestMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.ShowMyCardsRequestMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(showMyCardsRequestMessage_);
                    showMyCardsRequestMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00080000;
                  break;
                }
                case 426: {
                  de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00100000) == 0x00100000)) {
                    subBuilder = afterHandShowCardsMessage_.toBuilder();
                  }
                  afterHandShowCardsMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AfterHandShowCardsMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(afterHandShowCardsMessage_);
                    afterHandShowCardsMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00100000;
                  break;
                }
                case 434: {
                  de.pokerth.protocol.ProtoBuf.EndOfGameMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00200000) == 0x00200000)) {
                    subBuilder = endOfGameMessage_.toBuilder();
                  }
                  endOfGameMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.EndOfGameMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(endOfGameMessage_);
                    endOfGameMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00200000;
                  break;
                }
                case 442: {
                  de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00400000) == 0x00400000)) {
                    subBuilder = playerIdChangedMessage_.toBuilder();
                  }
                  playerIdChangedMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.PlayerIdChangedMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(playerIdChangedMessage_);
                    playerIdChangedMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00400000;
                  break;
                }
                case 450: {
                  de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x00800000) == 0x00800000)) {
                    subBuilder = askKickPlayerMessage_.toBuilder();
                  }
                  askKickPlayerMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AskKickPlayerMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(askKickPlayerMessage_);
                    askKickPlayerMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00800000;
                  break;
                }
                case 458: {
                  de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x01000000) == 0x01000000)) {
                    subBuilder = askKickDeniedMessage_.toBuilder();
                  }
                  askKickDeniedMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AskKickDeniedMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(askKickDeniedMessage_);
                    askKickDeniedMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x01000000;
                  break;
                }
                case 466: {
                  de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x02000000) == 0x02000000)) {
                    subBuilder = startKickPetitionMessage_.toBuilder();
                  }
                  startKickPetitionMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.StartKickPetitionMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(startKickPetitionMessage_);
                    startKickPetitionMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x02000000;
                  break;
                }
                case 474: {
                  de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x04000000) == 0x04000000)) {
                    subBuilder = voteKickRequestMessage_.toBuilder();
                  }
                  voteKickRequestMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.VoteKickRequestMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(voteKickRequestMessage_);
                    voteKickRequestMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x04000000;
                  break;
                }
                case 482: {
                  de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x08000000) == 0x08000000)) {
                    subBuilder = voteKickReplyMessage_.toBuilder();
                  }
                  voteKickReplyMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.VoteKickReplyMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(voteKickReplyMessage_);
                    voteKickReplyMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x08000000;
                  break;
                }
                case 490: {
                  de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x10000000) == 0x10000000)) {
                    subBuilder = kickPetitionUpdateMessage_.toBuilder();
                  }
                  kickPetitionUpdateMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.KickPetitionUpdateMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(kickPetitionUpdateMessage_);
                    kickPetitionUpdateMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x10000000;
                  break;
                }
                case 498: {
                  de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x20000000) == 0x20000000)) {
                    subBuilder = endKickPetitionMessage_.toBuilder();
                  }
                  endKickPetitionMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.EndKickPetitionMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(endKickPetitionMessage_);
                    endKickPetitionMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x20000000;
                  break;
                }
                case 506: {
                  de.pokerth.protocol.ProtoBuf.StatisticsMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x40000000) == 0x40000000)) {
                    subBuilder = statisticsMessage_.toBuilder();
                  }
                  statisticsMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.StatisticsMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(statisticsMessage_);
                    statisticsMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x40000000;
                  break;
                }
                case 514: {
                  de.pokerth.protocol.ProtoBuf.ChatRequestMessage.Builder subBuilder = null;
                  if (((bitField1_ & 0x80000000) == 0x80000000)) {
                    subBuilder = chatRequestMessage_.toBuilder();
                  }
                  chatRequestMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.ChatRequestMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(chatRequestMessage_);
                    chatRequestMessage_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x80000000;
                  break;
                }
                case 522: {
                  de.pokerth.protocol.ProtoBuf.ChatMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000001) == 0x00000001)) {
                    subBuilder = chatMessage_.toBuilder();
                  }
                  chatMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.ChatMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(chatMessage_);
                    chatMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000001;
                  break;
                }
                case 530: {
                  de.pokerth.protocol.ProtoBuf.ChatRejectMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000002) == 0x00000002)) {
                    subBuilder = chatRejectMessage_.toBuilder();
                  }
                  chatRejectMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.ChatRejectMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(chatRejectMessage_);
                    chatRejectMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000002;
                  break;
                }
                case 538: {
                  de.pokerth.protocol.ProtoBuf.DialogMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000004) == 0x00000004)) {
                    subBuilder = dialogMessage_.toBuilder();
                  }
                  dialogMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.DialogMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(dialogMessage_);
                    dialogMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000004;
                  break;
                }
                case 546: {
                  de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000008) == 0x00000008)) {
                    subBuilder = timeoutWarningMessage_.toBuilder();
                  }
                  timeoutWarningMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.TimeoutWarningMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(timeoutWarningMessage_);
                    timeoutWarningMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000008;
                  break;
                }
                case 554: {
                  de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000010) == 0x00000010)) {
                    subBuilder = resetTimeoutMessage_.toBuilder();
                  }
                  resetTimeoutMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.ResetTimeoutMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(resetTimeoutMessage_);
                    resetTimeoutMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000010;
                  break;
                }
                case 562: {
                  de.pokerth.protocol.ProtoBuf.ReportAvatarMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000020) == 0x00000020)) {
                    subBuilder = reportAvatarMessage_.toBuilder();
                  }
                  reportAvatarMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.ReportAvatarMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(reportAvatarMessage_);
                    reportAvatarMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000020;
                  break;
                }
                case 570: {
                  de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000040) == 0x00000040)) {
                    subBuilder = reportAvatarAckMessage_.toBuilder();
                  }
                  reportAvatarAckMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.ReportAvatarAckMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(reportAvatarAckMessage_);
                    reportAvatarAckMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000040;
                  break;
                }
                case 578: {
                  de.pokerth.protocol.ProtoBuf.ReportGameMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000080) == 0x00000080)) {
                    subBuilder = reportGameMessage_.toBuilder();
                  }
                  reportGameMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.ReportGameMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(reportGameMessage_);
                    reportGameMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000080;
                  break;
                }
                case 586: {
                  de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000100) == 0x00000100)) {
                    subBuilder = reportGameAckMessage_.toBuilder();
                  }
                  reportGameAckMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.ReportGameAckMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(reportGameAckMessage_);
                    reportGameAckMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000100;
                  break;
                }
                case 594: {
                  de.pokerth.protocol.ProtoBuf.ErrorMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000200) == 0x00000200)) {
                    subBuilder = errorMessage_.toBuilder();
                  }
                  errorMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.ErrorMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(errorMessage_);
                    errorMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000200;
                  break;
                }
                case 602: {
                  de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000400) == 0x00000400)) {
                    subBuilder = adminRemoveGameMessage_.toBuilder();
                  }
                  adminRemoveGameMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AdminRemoveGameMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(adminRemoveGameMessage_);
                    adminRemoveGameMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000400;
                  break;
                }
                case 610: {
                  de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000800) == 0x00000800)) {
                    subBuilder = adminRemoveGameAckMessage_.toBuilder();
                  }
                  adminRemoveGameAckMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AdminRemoveGameAckMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(adminRemoveGameAckMessage_);
                    adminRemoveGameAckMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000800;
                  break;
                }
                case 618: {
                  de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00001000) == 0x00001000)) {
                    subBuilder = adminBanPlayerMessage_.toBuilder();
                  }
                  adminBanPlayerMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AdminBanPlayerMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(adminBanPlayerMessage_);
                    adminBanPlayerMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00001000;
                  break;
                }
                case 626: {
                  de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00002000) == 0x00002000)) {
                    subBuilder = adminBanPlayerAckMessage_.toBuilder();
                  }
                  adminBanPlayerAckMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.AdminBanPlayerAckMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(adminBanPlayerAckMessage_);
                    adminBanPlayerAckMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00002000;
                  break;
                }
                case 634: {
                  de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00004000) == 0x00004000)) {
                    subBuilder = gameListSpectatorJoinedMessage_.toBuilder();
                  }
                  gameListSpectatorJoinedMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameListSpectatorJoinedMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameListSpectatorJoinedMessage_);
                    gameListSpectatorJoinedMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00004000;
                  break;
                }
                case 642: {
                  de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00008000) == 0x00008000)) {
                    subBuilder = gameListSpectatorLeftMessage_.toBuilder();
                  }
                  gameListSpectatorLeftMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameListSpectatorLeftMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameListSpectatorLeftMessage_);
                    gameListSpectatorLeftMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00008000;
                  break;
                }
                case 650: {
                  de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00010000) == 0x00010000)) {
                    subBuilder = gameSpectatorJoinedMessage_.toBuilder();
                  }
                  gameSpectatorJoinedMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameSpectatorJoinedMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameSpectatorJoinedMessage_);
                    gameSpectatorJoinedMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00010000;
                  break;
                }
                case 658: {
                  de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage.Builder subBuilder = null;
                  if (((bitField2_ & 0x00020000) == 0x00020000)) {
                    subBuilder = gameSpectatorLeftMessage_.toBuilder();
                  }
                  gameSpectatorLeftMessage_ = input.readMessage(de.pokerth.protocol.ProtoBuf.GameSpectatorLeftMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gameSpectatorLeftMessage_);
                    gameSpectatorLeftMessage_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00020000;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.pokerth.protocol.ProtoBuf.PokerTHMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PokerTHMessage)
    private static final de.pokerth.protocol.ProtoBuf.PokerTHMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PokerTHMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.pokerth.protocol.ProtoBuf.PokerTHMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PokerTHMessage> PARSER;

    public static com.google.protobuf.Parser<PokerTHMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
